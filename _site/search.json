[
  {
    "objectID": "02-modeling.html#getting-into-modelling",
    "href": "02-modeling.html#getting-into-modelling",
    "title": "Modeling",
    "section": "Getting into modelling!",
    "text": "Getting into modelling!\n\n\n\nsource"
  },
  {
    "objectID": "02-modeling.html#required-skills",
    "href": "02-modeling.html#required-skills",
    "title": "Modeling",
    "section": "Required skills",
    "text": "Required skills\n\nData-science teams have different skill requirements:\n\n\n\n\nData Science and the Art of Persuasion"
  },
  {
    "objectID": "02-modeling.html#types-of-analyses",
    "href": "02-modeling.html#types-of-analyses",
    "title": "Modeling",
    "section": "Types of analyses",
    "text": "Types of analyses\n\n\nFour types of data stories:\nDescriptive - What has happened?\n\nPredictive - What will happen?\n\nCausal - Why does it happen?\n\nPrescriptive - What actions should be taken?"
  },
  {
    "objectID": "02-modeling.html#setup-ggplot2",
    "href": "02-modeling.html#setup-ggplot2",
    "title": "Modeling",
    "section": "Setup: ggplot2\n",
    "text": "Setup: ggplot2\n\n\nImport required packages\nDefine a list of layers for consistent styling throughout the project\n\n\nlibrary(ggplot2)\nlibrary(scales)\ntime_series_ggstyle &lt;- list(\n  scale_y_continuous(labels = label_number(scale_cut = cut_si(' ')), expand = c(0, 0.1)),\n  theme_bw(base_size = 20),\n  theme(\n    axis.title.x = element_blank(),\n    panel.border = element_blank(),\n    axis.line = element_line(color = \"black\"),\n    legend.position = 'top'\n  )\n)"
  },
  {
    "objectID": "02-modeling.html#descriptive",
    "href": "02-modeling.html#descriptive",
    "title": "Modeling",
    "section": "Descriptive",
    "text": "Descriptive\n\nCodelibrary(readr)\nlibrary(stringr)\nlibrary(tidyverse)\nlibrary(data.table)\noptions(scipen = 99999)\ncharts &lt;- fread(\"data/charts_at_global.csv.gz\")\nts &lt;- str_detect(tolower(charts$artistName), \"taylor swift\")\ncharts_ts &lt;- charts[ts, ]\nfilter(charts_ts, format(day, \"%Y\") == \"2019\" & region == \"global\") |&gt;\n  group_by(day) |&gt;\n  mutate(streams = sum(streams)) |&gt;\n  ggplot(aes(x = day, y = streams)) +\n  geom_line() +\n  scale_x_date(\n    breaks = seq(as.Date(\"2019-01-01\"), as.Date(\"2019-12-31\"), \"month\"),\n    date_labels = \"%b\"\n  ) +\n  geom_vline(xintercept = as.Date(\"2019-08-23\"), color = \"red\") +\n  annotate(\"text\", x = as.Date(\"2019-08-20\"), label = \"Release of 'Lover'\", y = 40000000, colour = \"red\", angle = 90, size = 8) +\n  ggtitle(\"Taylor Swift Streams\", subtitle = \"Songs in top 200 - 2019\") +\n  time_series_ggstyle"
  },
  {
    "objectID": "02-modeling.html#predictive",
    "href": "02-modeling.html#predictive",
    "title": "Modeling",
    "section": "Predictive",
    "text": "Predictive\n\nCodelibrary(zoo)\nlibrary(prophet)\ntotal_streams &lt;- charts |&gt;\n  filter(region == \"global\") |&gt;\n  group_by(day) |&gt;\n  summarize(y = sum(streams)) |&gt;\n  mutate(ds = as.Date(day)) |&gt;\n  select(-day)\ntotal_streams_model &lt;- filter(total_streams, ds &lt;= as.Date(\"2020-12-31\"), ds &gt;= as.Date(\"2019-01-01\")) \ntotal_streams_holdout &lt;- filter(total_streams, ds &gt;= as.Date(\"2021-01-01\"))\nmod &lt;- prophet(total_streams_model,\n               holidays = data.frame(\n                 holiday = \"christmas\",\n                 ds = c(\n                    as.Date(\"2019-12-25\"), \n                    as.Date(\"2020-12-25\"), \n                    as.Date(\"2021-12-25\")),\n                 lower_window = -1, upper_window = 0\n               ),\n               daily.seasonality = FALSE\n)\nfuture &lt;- make_future_dataframe(mod, periods = 365)\nforecast &lt;- predict(mod, future)\nplot(mod, forecast) +\n  labs(\n    y = \"Streams\",\n    title = \"Prediction of total global streams of top 200\",\n    subtitle = \"Observed: 2019-2020, forecast: 2021 (holdout: red)\"\n  ) +\n  time_series_ggstyle +\n  geom_point(data = total_streams_holdout, \n  aes(x = as.POSIXct(ds), y = y), color = 'red')"
  },
  {
    "objectID": "02-modeling.html#what-about-causality",
    "href": "02-modeling.html#what-about-causality",
    "title": "Modeling",
    "section": "What about Causality?",
    "text": "What about Causality?\nCreated with Highcharts 4.1.5Computer science doctoratesArcade revenueTotal revenue generated by arcades correlates with Computer science doctorates awarded in the USComputer science doctoratesArcade revenue20002001200220032004200520062007200820092000200120022003200420052006200720082009500 degrees1000 degrees1500 degrees2000 degrees$1 billion$1.25 billion$1.5 billion$1.75 billion$2 billiontylervigen.com"
  },
  {
    "objectID": "02-modeling.html#causal-inference-and-prediction",
    "href": "02-modeling.html#causal-inference-and-prediction",
    "title": "Modeling",
    "section": "Causal inference and Prediction",
    "text": "Causal inference and Prediction\n\nVariables can be predictive without a causal relationship\nCorrelation does not imply causation\nArcade revenue predicts CS doctorates (and vice versa)\n\n\n\nVariables can be bad predictors but have a causal relationship\nNo correlation does not imply no causation\nFuel used and speed on cruise control (uphill vs. flat)\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariables can be predictive while not being predictive\n\n\n\nCorrelation does not even imply correlation\n\nAndrew Gelman"
  },
  {
    "objectID": "02-modeling.html#selection-bias",
    "href": "02-modeling.html#selection-bias",
    "title": "Modeling",
    "section": "Selection bias",
    "text": "Selection bias\n\n\nFor which “population” is the sample representative?"
  },
  {
    "objectID": "02-modeling.html#causal-but-no-correlation",
    "href": "02-modeling.html#causal-but-no-correlation",
    "title": "Modeling",
    "section": "Causal but no correlation",
    "text": "Causal but no correlation\n\nCodeset.seed(123)\nxy &lt;- data.frame(x = rnorm(100000))\nxy$y &lt;- 0.5 * xy$x^2 + 2 * xy$x^4\nggplot(xy, aes(x = x, y = y)) +\ngeom_line() +\ngeom_smooth(method = \"lm\", color = \"blue\") +\nlabs(title = expression(y == 0.5 * x^2 + 2 * x^4), subtitle = \"Non-linear relation\") +\nannotate(\"text\",\nx = -1, y = 25,\nlabel = paste0(\n\"Best linear fit. Correlation: \",\nround(cor(xy$x, xy$y), 3)\n), hjust = 0, color = \"blue\", size =8\n) +\ntime_series_ggstyle"
  },
  {
    "objectID": "02-modeling.html#correlation-without-correlation",
    "href": "02-modeling.html#correlation-without-correlation",
    "title": "Modeling",
    "section": "Correlation without Correlation",
    "text": "Correlation without Correlation\n\nCodeset.seed(42)\nxy &lt;- data.frame(x = rnorm(1000), y = rnorm(1000))\nxy$obs &lt;- abs(xy$x + xy$y) &lt; 0.5 + runif(1000,0,2)\nggplot(xy, aes(x=x, y=y)) +\n    geom_point(aes(color=obs)) +\n    geom_smooth(data = xy[xy$obs,], \n    method = 'lm', se = FALSE, color = \"#00BFC4\") +\n    geom_smooth(method = 'lm', se = FALSE) +\n    time_series_ggstyle +\n    labs(color = \"Observed\",\n        title = \"Restaurant and location quality\", \n        subtitle=\"Survivor bias\",\n        y = \"Restaurant Quality\", x = \"Location Quality\") +\n    annotate('text', \n            x = 2, y = -0.2, hjust=0,\n            label = \"Population regression line\",\n            color = \"blue\", size = 8 ) +\n    theme(axis.title.x = element_text())"
  },
  {
    "objectID": "02-modeling.html#correlation-but-different-but-still-correlation",
    "href": "02-modeling.html#correlation-but-different-but-still-correlation",
    "title": "Modeling",
    "section": "Correlation but different but still Correlation",
    "text": "Correlation but different but still Correlation\n\n\nEquivalent datasets based on estimate\n\nCodelibrary(datasauRus)\nlibrary(kableExtra)\nsuppressPackageStartupMessages(library(dplyr))\ndata &lt;- datasaurus_dozen %&gt;%\nfilter(dataset %in% c(\n\"away\",\n\"bullseye\",\n\"circle\",\n\"dino\",\n\"high_lines\",\n\"wide_lines\",\n\"x_shape\",\n\"star\"\n))\ndata %&gt;%\ngroup_by(dataset) %&gt;%\nsummarize(\nmean_x    = round(mean(x), 2),\nmean_y    = round(mean(y), 2),\nstd_dev_x = round(sd(x), 2),\nstd_dev_y = round(sd(y), 2),\ncorr_x_y  = round(cor(x, y), 2)\n) %&gt;%\nmutate(dataset = stringr::str_replace(dataset, \"_\", \" \")) %&gt;%\nkbl(\ncol.names =\nc(\"data\", \"mean x\", \"mean y\", \"sd x\", \"sd y\", \"corr x,y\"),\nformat = \"html\", table.attr = \"style='width:100%;'\"\n) %&gt;%\ncolumn_spec(1, width = \"3cm\")\n\n\n\ndata\nmean x\nmean y\nsd x\nsd y\ncorr x,y\n\n\n\naway\n54.27\n47.83\n16.77\n26.94\n-0.06\n\n\nbullseye\n54.27\n47.83\n16.77\n26.94\n-0.07\n\n\ncircle\n54.27\n47.84\n16.76\n26.93\n-0.07\n\n\ndino\n54.26\n47.83\n16.77\n26.94\n-0.06\n\n\nhigh lines\n54.27\n47.84\n16.77\n26.94\n-0.07\n\n\nstar\n54.27\n47.84\n16.77\n26.93\n-0.06\n\n\nwide lines\n54.27\n47.83\n16.77\n26.94\n-0.07\n\n\nx shape\n54.26\n47.84\n16.77\n26.93\n-0.07\n\n\n\n\n\n\n\nAlways visualize\n\nCodelibrary(ggplot2)\nlibrary(colorspace)\nggplot(data, aes(x = x, y = y, colour = dataset)) +\ngeom_point(size = 4.5) +\ntheme_void() +\ntheme(\nlegend.position = \"none\",\nstrip.text.x = element_text(size = 30)\n) +\nfacet_wrap(~dataset, nrow = 4) +\nscale_color_discrete_qualitative(palette = \"Dynamic\")"
  },
  {
    "objectID": "02-modeling.html#quality-of-music-and-income",
    "href": "02-modeling.html#quality-of-music-and-income",
    "title": "Modeling",
    "section": "Quality of music and income",
    "text": "Quality of music and income\n\nData: Ratings by music experts, genre, streams\nQuestion: Causal effect of rating on income\n\n\nCodelibrary(modelsummary)\nlibrary(gt)\nset.seed(1)\nN &lt;- 5000\ngenre &lt;- rbinom(N, 1, 0.5)\nperfect_rating &lt;- as.factor(rbinom(N, 5, 0.8 - 0.7 * genre)&gt;4)\nstreams &lt;- rexp(N, 0.01 - 0.003 * genre) |&gt; floor()\nmodelsummary(\n    list(lm(streams~perfect_rating),\n    lm(streams~genre),\n    lm(streams~perfect_rating + genre)),\n    coef_rename = c(\"perfect_ratingTRUE\" = \"perfect rating\"),\n    stars = TRUE,\n    statistic = \"{p.value}\",\n    gof_map = NA)\n\n\n\n\n (1)\n  (2)\n  (3)\n\n\n\n(Intercept)\n122.711***\n97.408***\n97.314***\n\n\n\n&lt;0.001\n&lt;0.001\n&lt;0.001\n\n\nperfect rating\n−25.112***\n\n0.285\n\n\n\n&lt;0.001\n\n0.956\n\n\ngenre\n\n43.268***\n43.361***\n\n\n\n\n&lt;0.001\n&lt;0.001\n\n\n\n\n + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001"
  },
  {
    "objectID": "02-modeling.html#grades-and-happyness",
    "href": "02-modeling.html#grades-and-happyness",
    "title": "Modeling",
    "section": "Grades and happyness",
    "text": "Grades and happyness\n\nData: grades, self_esteem index, happyness index\nQuestion: Causal effect of grades on happyness\n\n\nCodeset.seed(42)\nrange_normalize &lt;- function(x, min_range = 0, max_range = 100){\n  x_norm &lt;- min_range + (x - min(x)) * (max_range - min_range) / (max(x) - min(x))\n}\ngrades &lt;- 1 + rbinom(N, 4, 0.04)\nself_esteem &lt;- range_normalize(100 * (1/grades + rnorm(N)))\nhappyness &lt;- range_normalize(5 + self_esteem + rnorm(N))\nmodelsummary(\n    list(lm(happyness~grades),\n    lm(happyness~self_esteem),\n    lm(happyness~grades+self_esteem)),\n    coef_rename = c(\"self_esteem\" = \"self esteem\"),\n    stars = TRUE,\n    statistic = \"{p.value}\",\n    gof_map = NA)\n\n\n\n\n (1)\n  (2)\n  (3)\n\n\n\n(Intercept)\n61.393***\n1.510***\n1.551***\n\n\n\n&lt;0.001\n&lt;0.001\n&lt;0.001\n\n\ngrades\n−5.958***\n\n−0.029\n\n\n\n&lt;0.001\n\n0.430\n\n\nself esteem\n\n0.989***\n0.988***\n\n\n\n\n&lt;0.001\n&lt;0.001\n\n\n\n\n + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001"
  },
  {
    "objectID": "02-modeling.html#restaurant-and-location-ratings",
    "href": "02-modeling.html#restaurant-and-location-ratings",
    "title": "Modeling",
    "section": "Restaurant and location ratings",
    "text": "Restaurant and location ratings\n\nData: Restaurant ratings, location ratings, restaurant survival prob.\nQuestion: Causal effect of location rating on restaurant rating\n\n\nCodeset.seed(14)\nrestaurant_rating &lt;- 25 + 10*rnorm(N)\nlocation_rating &lt;- 5*rnorm(N)\nsurvival_probability &lt;- range_normalize(0.8*restaurant_rating + 0.8 * location_rating + 10*rnorm(N), 0, 100)\nmodelsummary(\n    list(lm(restaurant_rating~location_rating),\n    lm(restaurant_rating~survival_probability),\n    lm(restaurant_rating~survival_probability + location_rating)),\n    coef_rename = c(\n                    \"location_rating\" = \"location rating\",\n                    \"survival_probability\" = \"survival prob.\"\n                    ),\n    stars = TRUE,\n    output = 'gt',\n    statistic = \"{p.value}\",\n    gof_map = NA) |&gt;\n    tab_style(style = cell_fill(color='lavenderblush3'),\n              locations = cells_body(rows = 3)\n    )\n\n\n\n\n\n\n(1)\n(2)\n(3)\n\n\n\n(Intercept)\n24.875***\n3.151***\n0.996*\n\n\n\n&lt;0.001\n&lt;0.001\n0.023\n\n\nlocation rating\n0.022\n\n-0.390***\n\n\n\n0.440\n\n&lt;0.001\n\n\nsurvival prob.\n\n0.414***\n0.455***\n\n\n\n\n&lt;0.001\n&lt;0.001\n\n\n\n+ p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001"
  },
  {
    "objectID": "02-modeling.html#causal-inference-two-approaches-imbens_causal",
    "href": "02-modeling.html#causal-inference-two-approaches-imbens_causal",
    "title": "Modeling",
    "section": "Causal Inference: two approaches (Imbens 2020)\n",
    "text": "Causal Inference: two approaches (Imbens 2020)\n\n\n\n\n\n\n\nDirected Acyclic Graphs (DAGs)\nConcerned with identification of causal relationships\nShows direction of causality and important variables\nGraphical representation:\n\n\nCodelibrary(ggdag)\nlibrary(dagitty)\nlibrary(tidyverse)\ndagify(y ~ x, x ~ z, exposure = \"x\", outcome = \"y\",\n       coords = list(x = c(x = 1, y = 1.5, z = 1), y = c(x=1, y = 1, z=0))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  ggdag(text_size = 8, node_size = 10) +\n  geom_dag_edges() +\n  annotate(\"text\", x = 1.2, y = 1, vjust=1, label= \"x causes y\", size=5 ) + \n  annotate(\"text\", x = 1, y = 0.5, hjust=-0.1, label=\"z causes x\", size = 5) +\n  theme_dag()\n\n\n\n\n\n\n\n\n\nPotential Outcome\nMultiple Treatments / Causes e.g., exposure to ad\n\nPotential outcomes f. treatments e.g., Purchase given exposure / no exposure\n\nMultiple observations with different treatments e.g., A/B test\n\nFocus on assignment of treatment e.g., randomized experiment, selection on (un)observables\n\n\n\\[\n\\begin{aligned}\ny_i(0)& \\ldots \\text{outcome of individual }i\\text{ without treatment} \\\\\ny_i(1)& \\ldots \\text{outcome of individual }i\\text{ with treatment} \\\\\n\\delta_i = y&_i(1) - y_i(0) \\ldots \\text{treatment effect of individual }i\n\\end{aligned}\n\\]\n\nObserved: \\(y_i = D_i * y_i(1) + (1-D_i) * y_i(0)\\) where \\(D_i\\) is the treatment indicator"
  },
  {
    "objectID": "02-modeling.html#section",
    "href": "02-modeling.html#section",
    "title": "Modeling",
    "section": "",
    "text": "Causal Pitchfork"
  },
  {
    "objectID": "02-modeling.html#analyzing-dags-d-separation",
    "href": "02-modeling.html#analyzing-dags-d-separation",
    "title": "Modeling",
    "section": "Analyzing DAGs: d-separation\n",
    "text": "Analyzing DAGs: d-separation\n\n\nNecessary to decide which variables to use in model\n“d” stands for “directional”\nUsually we are dealing with more than two variables\nComplication: causation flows only directed - association might flow against\n\n\nCodedagify(z ~ x, y2 ~ z, a ~ x, a ~ y3, x ~ d, y1 ~ d,\n       coords = list(x = c(x = 1, z = 1.5, y2 = 2, a = 1.5, y3 = 2, d = 1.5, y1 = 2), \n                     y = c(x = 1, y2 = 1, z = 1, a = 0, y3 = 0, d = 2, y1 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  ggdag(text_size = 3, node_size = 5) +\n  geom_dag_edges() +\n  theme_dag() +\n  labs(title= \"Causal Pitchfork\", subtitle = \"x and y2 are d-connected but x and y1/y3 are not\") +\n  theme(title = element_text(size = 8))"
  },
  {
    "objectID": "02-modeling.html#analyzing-dags-fork",
    "href": "02-modeling.html#analyzing-dags-fork",
    "title": "Modeling",
    "section": "Analyzing DAGs: Fork",
    "text": "Analyzing DAGs: Fork\nGood Control\n\nCodemed &lt;- dagify( x ~ d, y1 ~ d,\n       coords = list(x = c(x = 1, z = 1.5, y = 2, a = 1.5, b = 2, d = 1.5, y1 = 2), \n                     y = c(x = 1, y = 1, z = 1, a = 0, b = 0, d = 2, y1 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name == \"d\", \"Confounder\", \"variables of interest\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=7, aes(color = fill)) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"top\") \nmed\n\n\n\nd causes both x and y1\nArrows pointing to x are called “back-door” paths\nEliminated by randomized experiment! Why?\nControlling for d “blocks” the non-causal association x \\(\\rightarrow\\) y1"
  },
  {
    "objectID": "02-modeling.html#analyzing-dags-pipe",
    "href": "02-modeling.html#analyzing-dags-pipe",
    "title": "Modeling",
    "section": "Analyzing DAGs: Pipe",
    "text": "Analyzing DAGs: Pipe\nBad Control (possibly use mediation analysis)\n\nCodemed &lt;- dagify(z ~ x, y2 ~ z,\n       coords = list(x = c(x = 1, z = 1.5, y2 = 2), y = c(x=1, y2 = 1, z=1))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name == \"z\", \"Mediator\", \"variables of interest\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=7, aes(color = fill)) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"top\") \nmed\n\n\n\nx causes y through z\nControlling for z blocks the causal association x \\(\\rightarrow\\) y2"
  },
  {
    "objectID": "02-modeling.html#analyzing-dags-collider",
    "href": "02-modeling.html#analyzing-dags-collider",
    "title": "Modeling",
    "section": "Analyzing DAGs: Collider",
    "text": "Analyzing DAGs: Collider\nBad control\n\nCodedagify(a ~ x, a ~ y,\n  coords = list(x = c(x = 1, y = 2, a = 1.5), y = c(x = 1, y = 0,  a = 0))\n) |&gt;\n  tidy_dagitty() |&gt;\n  mutate(fill = ifelse(name == \"a\", \"Collider\", \"variables of interest\")) |&gt;\n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +\n  geom_dag_point(size = 7, aes(color = fill)) +\n  geom_dag_edges(show.legend = FALSE) +\n  geom_dag_text() +\n  theme_dag() +\n  theme(\n    legend.title = element_blank(),\n    legend.position = \"top\"\n  )\n\n\n\nx & y cause a\nx & y are d-separated and uncorrelated\nBy adding a to the model spurious correlation between x & y is introduced"
  },
  {
    "objectID": "02-modeling.html#exercise",
    "href": "02-modeling.html#exercise",
    "title": "Modeling",
    "section": "Exercise",
    "text": "Exercise\n\nWhich variables should be included?\n\n\n\nEffect of x on y\nEffect of z on y\n\n\n\nCodelibrary(ggdag)\nlibrary(dagitty)\nlibrary(tidyverse)\ndagify(y ~ n + z + b + c, \n       x ~  z + a + c,\n       n ~ x,\n       z ~ a + b, exposure = \"x\", outcome = \"y\",\n       coords = list(x = c(n = 2, x = 1, y = 3, a = 1, z = 2, c = 2, b = 3), y = c(x = 2, y = 2, a = 3, z = 3, c = 1, b = 3, n = 2))) %&gt;% \n  tidy_dagitty() %&gt;%\n  ggdag(text_size = 8, node_size = 12) +\n  geom_dag_edges() +\n  theme_dag()\n\n\nFor x -&gt; y:\nAdd the following to model:\n\nc (confounder)\nz (confounder) but opens collider\na or b to block collider path (b statistically more efficient)\n\nMediator:\n\nn\n\nFor z -&gt; y:\nAdd the following to model:\n\nb (confounder)\na (confounder)\nc (not necessary but not harmful)\n\nMediators:\n\nx (also include c)\nn (also include c)"
  },
  {
    "objectID": "02-modeling.html#common-bad-controls-cinelli2020crash",
    "href": "02-modeling.html#common-bad-controls-cinelli2020crash",
    "title": "Modeling",
    "section": "Common bad controls (Cinelli, Forney, and Pearl 2020)\n",
    "text": "Common bad controls (Cinelli, Forney, and Pearl 2020)\n\n\nCodelibrary(ggpubr)\np1 &lt;- dagify(y ~ x + U2,\n       a ~ U1 + U2,\n       x ~ U1,\n      coords = list(x = c(x = 1, y = 2, a = 1.5, b = 1.5, U1 = 1, U2 = 2), y = c(x=1, y = 1,  a = 1.5, b = 0, U1 = 2, U2 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name %in% c(\"U1\", \"U2\"), \"Unobserved\", \"Observed\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=12, \n                 aes(color = fill)\n                 ) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"bottom\") +\n  labs(title = \"M-Bias\")\np2 &lt;- dagify(y ~ a + U,\n       a ~ x + U,\n      coords = list(x = c(x = 1, y = 2, a = 1.5, b = 1.5, U = 1.7, U2 = 2), y = c(x=1, y = 1,  a = 1, b = 0, U = 2, U2 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name %in% c(\"U\"), \"Unobserved\", \"Observed\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=12, \n                 aes(color = fill)\n                 ) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"bottom\") +\n  labs(title = \"Post-treatment Bias\")\nggarrange(p1, p2)\n\n\nleft: M-Bias\n\nDo not adjust for z since it would open the collider path\n\nright: Post-treatment Bias\n\nDo not include post treatment variable “a” since it would open the confounder path (cannot control since u is unobserved)"
  },
  {
    "objectID": "02-modeling.html#common-bad-controls",
    "href": "02-modeling.html#common-bad-controls",
    "title": "Modeling",
    "section": "Common bad controls",
    "text": "Common bad controls\n\nCodep1 &lt;- dagify(y ~ x ,\n       a ~ x + y,\n      coords = list(x = c(x = 1, y = 2, a = 1.5, b = 1.5, U1 = 1, U2 = 2), y = c(x=1, y = 1,  a = 1.5, b = 0, U1 = 2, U2 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  #mutate(fill = ifelse(name %in% c(\"U1\", \"U2\"), \"Unobserved\", \"Observed\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=12, \n                 #aes(color = fill)\n                 ) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"bottom\") +\n  labs(title = \"Selection Bias\")\np2 &lt;-  dagify(y ~ x ,\n       a ~ y,\n      coords = list(x = c(x = 1, y = 2, a = 1.5, b = 1.5, U1 = 1, U2 = 2), y = c(x=1, y = 1,  a = 1.5, b = 0, U1 = 2, U2 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  #mutate(fill = ifelse(name %in% c(\"U1\", \"U2\"), \"Unobserved\", \"Observed\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=12, \n                 #aes(color = fill)\n                 ) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"bottom\") +\n  labs(title = \"Case-control Bias\")\nggarrange(p1, p2)\n\n\n\n\nIntelligence, education, income\n\nCase-control study: Observation ex-post. Ex.: Smoking \\(\\rightarrow\\) lung cancer\n\n\nLeft: Selection Bias\n\nDo not include “a” since it would open the collider path\n\nRight: Case-control Bias\n\nDo not include “a” since it is caused by y. Would bias effect of x on y."
  },
  {
    "objectID": "02-modeling.html#exercise-1",
    "href": "02-modeling.html#exercise-1",
    "title": "Modeling",
    "section": "Exercise",
    "text": "Exercise\n\nPrepare a short presentation of a (potential) DAG for your thesis"
  },
  {
    "objectID": "02-modeling.html#references",
    "href": "02-modeling.html#references",
    "title": "Modeling",
    "section": "References",
    "text": "References\n\n\n\n\nData-based Storytelling\n\n\n\n\nCinelli, Carlos, Andrew Forney, and Judea Pearl. 2020. “A Crash Course in Good and Bad Controls.” SSRN 3689437.\n\n\nImbens, Guido W. 2020. “Potential Outcome and Directed Acyclic Graph Approaches to Causality: Relevance for Empirical Practice in Economics.” Journal of Economic Literature 58 (4): 1129–79. https://doi.org/10.1257/jel.20191597."
  },
  {
    "objectID": "02-modeling_page.html",
    "href": "02-modeling_page.html",
    "title": "Modeling",
    "section": "",
    "text": "source"
  },
  {
    "objectID": "02-modeling_page.html#getting-into-modelling",
    "href": "02-modeling_page.html#getting-into-modelling",
    "title": "Modeling",
    "section": "",
    "text": "source"
  },
  {
    "objectID": "02-modeling_page.html#required-skills",
    "href": "02-modeling_page.html#required-skills",
    "title": "Modeling",
    "section": "Required skills",
    "text": "Required skills\n\nData-science teams have different skill requirements:\n\n\n\n\n\nData Science and the Art of Persuasion"
  },
  {
    "objectID": "02-modeling_page.html#types-of-analyses",
    "href": "02-modeling_page.html#types-of-analyses",
    "title": "Modeling",
    "section": "Types of analyses",
    "text": "Types of analyses\n\n\nFour types of data stories:\nDescriptive - What has happened?\nPredictive - What will happen?\nCausal - Why does it happen?\nPrescriptive - What actions should be taken?"
  },
  {
    "objectID": "02-modeling_page.html#setup-ggplot2",
    "href": "02-modeling_page.html#setup-ggplot2",
    "title": "Modeling",
    "section": "Setup: ggplot2",
    "text": "Setup: ggplot2\n\nImport required packages\nDefine a list of layers for consistent styling throughout the project\n\n\nlibrary(ggplot2)\nlibrary(scales)\ntime_series_ggstyle &lt;- list(\n  scale_y_continuous(labels = label_number(scale_cut = cut_si(' ')), expand = c(0, 0.1)),\n  theme_bw(base_size = 20),\n  theme(\n    axis.title.x = element_blank(),\n    panel.border = element_blank(),\n    axis.line = element_line(color = \"black\"),\n    legend.position = 'top'\n  )\n)"
  },
  {
    "objectID": "02-modeling_page.html#descriptive",
    "href": "02-modeling_page.html#descriptive",
    "title": "Modeling",
    "section": "Descriptive",
    "text": "Descriptive\n\nlibrary(readr)\n\n\nAttaching package: 'readr'\n\n\nThe following object is masked from 'package:scales':\n\n    col_factor\n\nlibrary(stringr)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ dplyr::filter()     masks stats::filter()\n✖ dplyr::lag()        masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:lubridate':\n\n    hour, isoweek, mday, minute, month, quarter, second, wday, week,\n    yday, year\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\noptions(scipen = 99999)\ncharts &lt;- fread(\"data/charts_at_global.csv.gz\")\nts &lt;- str_detect(tolower(charts$artistName), \"taylor swift\")\ncharts_ts &lt;- charts[ts, ]\nfilter(charts_ts, format(day, \"%Y\") == \"2019\" & region == \"global\") |&gt;\n  group_by(day) |&gt;\n  mutate(streams = sum(streams)) |&gt;\n  ggplot(aes(x = day, y = streams)) +\n  geom_line() +\n  scale_x_date(\n    breaks = seq(as.Date(\"2019-01-01\"), as.Date(\"2019-12-31\"), \"month\"),\n    date_labels = \"%b\"\n  ) +\n  geom_vline(xintercept = as.Date(\"2019-08-23\"), color = \"red\") +\n  annotate(\"text\", x = as.Date(\"2019-08-20\"), label = \"Release of 'Lover'\", y = 40000000, colour = \"red\", angle = 90, size = 8) +\n  ggtitle(\"Taylor Swift Streams\", subtitle = \"Songs in top 200 - 2019\") +\n  time_series_ggstyle"
  },
  {
    "objectID": "02-modeling_page.html#predictive",
    "href": "02-modeling_page.html#predictive",
    "title": "Modeling",
    "section": "Predictive",
    "text": "Predictive\n\nlibrary(zoo)\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:data.table':\n\n    yearmon, yearqtr\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(prophet)\n\nLoading required package: Rcpp\n\n\nLoading required package: rlang\n\n\n\nAttaching package: 'rlang'\n\n\nThe following object is masked from 'package:data.table':\n\n    :=\n\n\nThe following objects are masked from 'package:purrr':\n\n    %@%, flatten, flatten_chr, flatten_dbl, flatten_int, flatten_lgl,\n    flatten_raw, invoke, splice\n\ntotal_streams &lt;- charts |&gt;\n  filter(region == \"global\") |&gt;\n  group_by(day) |&gt;\n  summarize(y = sum(streams)) |&gt;\n  mutate(ds = as.Date(day)) |&gt;\n  select(-day)\ntotal_streams_model &lt;- filter(total_streams, ds &lt;= as.Date(\"2020-12-31\"), ds &gt;= as.Date(\"2019-01-01\")) \ntotal_streams_holdout &lt;- filter(total_streams, ds &gt;= as.Date(\"2021-01-01\"))\nmod &lt;- prophet(total_streams_model,\n               holidays = data.frame(\n                 holiday = \"christmas\",\n                 ds = c(\n                    as.Date(\"2019-12-25\"), \n                    as.Date(\"2020-12-25\"), \n                    as.Date(\"2021-12-25\")),\n                 lower_window = -1, upper_window = 0\n               ),\n               daily.seasonality = FALSE\n)\nfuture &lt;- make_future_dataframe(mod, periods = 365)\nforecast &lt;- predict(mod, future)\nplot(mod, forecast) +\n  labs(\n    y = \"Streams\",\n    title = \"Prediction of total global streams of top 200\",\n    subtitle = \"Observed: 2019-2020, forecast: 2021 (holdout: red)\"\n  ) +\n  time_series_ggstyle +\n  geom_point(data = total_streams_holdout, \n  aes(x = as.POSIXct(ds), y = y), color = 'red')"
  },
  {
    "objectID": "02-modeling_page.html#what-about-causality",
    "href": "02-modeling_page.html#what-about-causality",
    "title": "Modeling",
    "section": "What about Causality?",
    "text": "What about Causality?"
  },
  {
    "objectID": "02-modeling_page.html#causal-inference-and-prediction",
    "href": "02-modeling_page.html#causal-inference-and-prediction",
    "title": "Modeling",
    "section": "Causal inference and Prediction",
    "text": "Causal inference and Prediction\n\nVariables can be predictive without a causal relationship\nCorrelation does not imply causation\nArcade revenue predicts CS doctorates (and vice versa)\n\n. . .\n\nVariables can be bad predictors but have a causal relationship\nNo correlation does not imply no causation\nFuel used and speed on cruise control (uphill vs. flat)\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariables can be predictive while not being predictive\n\n\nCorrelation does not even imply correlation\n\nAndrew Gelman"
  },
  {
    "objectID": "02-modeling_page.html#selection-bias",
    "href": "02-modeling_page.html#selection-bias",
    "title": "Modeling",
    "section": "Selection bias",
    "text": "Selection bias\n\n\nFor which “population” is the sample representative?"
  },
  {
    "objectID": "02-modeling_page.html#causal-but-no-correlation",
    "href": "02-modeling_page.html#causal-but-no-correlation",
    "title": "Modeling",
    "section": "Causal but no correlation",
    "text": "Causal but no correlation\n\nset.seed(123)\nxy &lt;- data.frame(x = rnorm(100000))\nxy$y &lt;- 0.5 * xy$x^2 + 2 * xy$x^4\nggplot(xy, aes(x = x, y = y)) +\ngeom_line() +\ngeom_smooth(method = \"lm\", color = \"blue\") +\nlabs(title = expression(y == 0.5 * x^2 + 2 * x^4), subtitle = \"Non-linear relation\") +\nannotate(\"text\",\nx = -1, y = 25,\nlabel = paste0(\n\"Best linear fit. Correlation: \",\nround(cor(xy$x, xy$y), 3)\n), hjust = 0, color = \"blue\", size =8\n) +\ntime_series_ggstyle\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "02-modeling_page.html#correlation-without-correlation",
    "href": "02-modeling_page.html#correlation-without-correlation",
    "title": "Modeling",
    "section": "Correlation without Correlation",
    "text": "Correlation without Correlation\n\nset.seed(42)\nxy &lt;- data.frame(x = rnorm(1000), y = rnorm(1000))\nxy$obs &lt;- abs(xy$x + xy$y) &lt; 0.5 + runif(1000,0,2)\nggplot(xy, aes(x=x, y=y)) +\n    geom_point(aes(color=obs)) +\n    geom_smooth(data = xy[xy$obs,], \n    method = 'lm', se = FALSE, color = \"#00BFC4\") +\n    geom_smooth(method = 'lm', se = FALSE) +\n    time_series_ggstyle +\n    labs(color = \"Observed\",\n        title = \"Restaurant and location quality\", \n        subtitle=\"Survivor bias\",\n        y = \"Restaurant Quality\", x = \"Location Quality\") +\n    annotate('text', \n            x = 2, y = -0.2, hjust=0,\n            label = \"Population regression line\",\n            color = \"blue\", size = 8 ) +\n    theme(axis.title.x = element_text())\n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "02-modeling_page.html#correlation-but-different-but-still-correlation",
    "href": "02-modeling_page.html#correlation-but-different-but-still-correlation",
    "title": "Modeling",
    "section": "Correlation but different but still Correlation",
    "text": "Correlation but different but still Correlation\n\n\nEquivalent datasets based on estimate\n\nlibrary(datasauRus)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nsuppressPackageStartupMessages(library(dplyr))\ndata &lt;- datasaurus_dozen %&gt;%\nfilter(dataset %in% c(\n\"away\",\n\"bullseye\",\n\"circle\",\n\"dino\",\n\"high_lines\",\n\"wide_lines\",\n\"x_shape\",\n\"star\"\n))\ndata %&gt;%\ngroup_by(dataset) %&gt;%\nsummarize(\nmean_x    = round(mean(x), 2),\nmean_y    = round(mean(y), 2),\nstd_dev_x = round(sd(x), 2),\nstd_dev_y = round(sd(y), 2),\ncorr_x_y  = round(cor(x, y), 2)\n) %&gt;%\nmutate(dataset = stringr::str_replace(dataset, \"_\", \" \")) %&gt;%\nkbl(\ncol.names =\nc(\"data\", \"mean x\", \"mean y\", \"sd x\", \"sd y\", \"corr x,y\"),\nformat = \"html\", table.attr = \"style='width:100%;'\"\n) %&gt;%\ncolumn_spec(1, width = \"3cm\")\n\n\n\n\ndata\nmean x\nmean y\nsd x\nsd y\ncorr x,y\n\n\n\n\naway\n54.27\n47.83\n16.77\n26.94\n-0.06\n\n\nbullseye\n54.27\n47.83\n16.77\n26.94\n-0.07\n\n\ncircle\n54.27\n47.84\n16.76\n26.93\n-0.07\n\n\ndino\n54.26\n47.83\n16.77\n26.94\n-0.06\n\n\nhigh lines\n54.27\n47.84\n16.77\n26.94\n-0.07\n\n\nstar\n54.27\n47.84\n16.77\n26.93\n-0.06\n\n\nwide lines\n54.27\n47.83\n16.77\n26.94\n-0.07\n\n\nx shape\n54.26\n47.84\n16.77\n26.93\n-0.07\n\n\n\n\n\n\n\n\n\nAlways visualize\n\nlibrary(ggplot2)\nlibrary(colorspace)\nggplot(data, aes(x = x, y = y, colour = dataset)) +\ngeom_point(size = 4.5) +\ntheme_void() +\ntheme(\nlegend.position = \"none\",\nstrip.text.x = element_text(size = 30)\n) +\nfacet_wrap(~dataset, nrow = 4) +\nscale_color_discrete_qualitative(palette = \"Dynamic\")"
  },
  {
    "objectID": "02-modeling_page.html#quality-of-music-and-income",
    "href": "02-modeling_page.html#quality-of-music-and-income",
    "title": "Modeling",
    "section": "Quality of music and income",
    "text": "Quality of music and income\n\nData: Ratings by music experts, genre, streams\nQuestion: Causal effect of rating on income\n\n\nlibrary(modelsummary)\nlibrary(gt)\nset.seed(1)\nN &lt;- 5000\ngenre &lt;- rbinom(N, 1, 0.5)\nperfect_rating &lt;- as.factor(rbinom(N, 5, 0.8 - 0.7 * genre)&gt;4)\nstreams &lt;- rexp(N, 0.01 - 0.003 * genre) |&gt; floor()\nmodelsummary(\n    list(lm(streams~perfect_rating),\n    lm(streams~genre),\n    lm(streams~perfect_rating + genre)),\n    coef_rename = c(\"perfect_ratingTRUE\" = \"perfect rating\"),\n    stars = TRUE,\n    statistic = \"{p.value}\",\n    gof_map = NA)\n\n\n\n\n\n (1)\n  (2)\n  (3)\n\n\n\n\n(Intercept)\n122.711***\n97.408***\n97.314***\n\n\n\n&lt;0.001\n&lt;0.001\n&lt;0.001\n\n\nperfect rating\n−25.112***\n\n0.285\n\n\n\n&lt;0.001\n\n0.956\n\n\ngenre\n\n43.268***\n43.361***\n\n\n\n\n&lt;0.001\n&lt;0.001\n\n\n\n + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001"
  },
  {
    "objectID": "02-modeling_page.html#grades-and-happyness",
    "href": "02-modeling_page.html#grades-and-happyness",
    "title": "Modeling",
    "section": "Grades and happyness",
    "text": "Grades and happyness\n\nData: grades, self_esteem index, happyness index\nQuestion: Causal effect of grades on happyness\n\n\nset.seed(42)\nrange_normalize &lt;- function(x, min_range = 0, max_range = 100){\n  x_norm &lt;- min_range + (x - min(x)) * (max_range - min_range) / (max(x) - min(x))\n}\ngrades &lt;- 1 + rbinom(N, 4, 0.04)\nself_esteem &lt;- range_normalize(100 * (1/grades + rnorm(N)))\nhappyness &lt;- range_normalize(5 + self_esteem + rnorm(N))\nmodelsummary(\n    list(lm(happyness~grades),\n    lm(happyness~self_esteem),\n    lm(happyness~grades+self_esteem)),\n    coef_rename = c(\"self_esteem\" = \"self esteem\"),\n    stars = TRUE,\n    statistic = \"{p.value}\",\n    gof_map = NA)\n\n\n\n\n\n (1)\n  (2)\n  (3)\n\n\n\n\n(Intercept)\n61.393***\n1.510***\n1.551***\n\n\n\n&lt;0.001\n&lt;0.001\n&lt;0.001\n\n\ngrades\n−5.958***\n\n−0.029\n\n\n\n&lt;0.001\n\n0.430\n\n\nself esteem\n\n0.989***\n0.988***\n\n\n\n\n&lt;0.001\n&lt;0.001\n\n\n\n + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001"
  },
  {
    "objectID": "02-modeling_page.html#restaurant-and-location-ratings",
    "href": "02-modeling_page.html#restaurant-and-location-ratings",
    "title": "Modeling",
    "section": "Restaurant and location ratings",
    "text": "Restaurant and location ratings\n\nData: Restaurant ratings, location ratings, restaurant survival prob.\nQuestion: Causal effect of location rating on restaurant rating\n\n\nset.seed(14)\nrestaurant_rating &lt;- 25 + 10*rnorm(N)\nlocation_rating &lt;- 5*rnorm(N)\nsurvival_probability &lt;- range_normalize(0.8*restaurant_rating + 0.8 * location_rating + 10*rnorm(N), 0, 100)\nmodelsummary(\n    list(lm(restaurant_rating~location_rating),\n    lm(restaurant_rating~survival_probability),\n    lm(restaurant_rating~survival_probability + location_rating)),\n    coef_rename = c(\n                    \"location_rating\" = \"location rating\",\n                    \"survival_probability\" = \"survival prob.\"\n                    ),\n    stars = TRUE,\n    output = 'gt',\n    statistic = \"{p.value}\",\n    gof_map = NA) |&gt;\n    tab_style(style = cell_fill(color='lavenderblush3'),\n              locations = cells_body(rows = 3)\n    )\n\n\n\n\n\n\n\n\n(1)\n(2)\n(3)\n\n\n\n\n(Intercept)\n24.875***\n3.151***\n0.996*\n\n\n\n&lt;0.001\n&lt;0.001\n0.023\n\n\nlocation rating\n0.022\n\n-0.390***\n\n\n\n0.440\n\n&lt;0.001\n\n\nsurvival prob.\n\n0.414***\n0.455***\n\n\n\n\n&lt;0.001\n&lt;0.001\n\n\n\n+ p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001"
  },
  {
    "objectID": "02-modeling_page.html#causal-inference-two-approaches-imbens_causal",
    "href": "02-modeling_page.html#causal-inference-two-approaches-imbens_causal",
    "title": "Modeling",
    "section": "Causal Inference: two approaches (Imbens 2020)",
    "text": "Causal Inference: two approaches (Imbens 2020)\n\n\n\n\n\n\nDirected Acyclic Graphs (DAGs)\nConcerned with identification of causal relationships\nShows direction of causality and important variables\nGraphical representation:\n\n\nlibrary(ggdag)\n\n\nAttaching package: 'ggdag'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nlibrary(dagitty)\nlibrary(tidyverse)\ndagify(y ~ x, x ~ z, exposure = \"x\", outcome = \"y\",\n       coords = list(x = c(x = 1, y = 1.5, z = 1), y = c(x=1, y = 1, z=0))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  ggdag(text_size = 8, node_size = 10) +\n  geom_dag_edges() +\n  annotate(\"text\", x = 1.2, y = 1, vjust=1, label= \"x causes y\", size=5 ) + \n  annotate(\"text\", x = 1, y = 0.5, hjust=-0.1, label=\"z causes x\", size = 5) +\n  theme_dag()\n\n\n\n\n\n\n\n\n\n\nPotential Outcome\nMultiple Treatments / Causes  e.g., exposure to ad\nPotential outcomes f. treatments  e.g., Purchase given exposure / no exposure\nMultiple observations with different treatments  e.g., A/B test\nFocus on assignment of treatment  e.g., randomized experiment, selection on (un)observables\n\n\\[\n\\begin{aligned}\ny_i(0)& \\ldots \\text{outcome of individual }i\\text{ without treatment} \\\\\ny_i(1)& \\ldots \\text{outcome of individual }i\\text{ with treatment} \\\\\n\\delta_i = y&_i(1) - y_i(0) \\ldots \\text{treatment effect of individual }i\n\\end{aligned}\n\\]\n\nObserved: \\(y_i = D_i * y_i(1) + (1-D_i) * y_i(0)\\) where \\(D_i\\) is the treatment indicator"
  },
  {
    "objectID": "02-modeling_page.html#section",
    "href": "02-modeling_page.html#section",
    "title": "Modeling",
    "section": "",
    "text": "Causal Pitchfork"
  },
  {
    "objectID": "02-modeling_page.html#analyzing-dags-d-separation",
    "href": "02-modeling_page.html#analyzing-dags-d-separation",
    "title": "Modeling",
    "section": "Analyzing DAGs: d-separation",
    "text": "Analyzing DAGs: d-separation\n\nNecessary to decide which variables to use in model\n“d” stands for “directional”\nUsually we are dealing with more than two variables\nComplication: causation flows only directed - association might flow against\n\n\ndagify(z ~ x, y2 ~ z, a ~ x, a ~ y3, x ~ d, y1 ~ d,\n       coords = list(x = c(x = 1, z = 1.5, y2 = 2, a = 1.5, y3 = 2, d = 1.5, y1 = 2), \n                     y = c(x = 1, y2 = 1, z = 1, a = 0, y3 = 0, d = 2, y1 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  ggdag(text_size = 3, node_size = 5) +\n  geom_dag_edges() +\n  theme_dag() +\n  labs(title= \"Causal Pitchfork\", subtitle = \"x and y2 are d-connected but x and y1/y3 are not\") +\n  theme(title = element_text(size = 8))"
  },
  {
    "objectID": "02-modeling_page.html#analyzing-dags-fork",
    "href": "02-modeling_page.html#analyzing-dags-fork",
    "title": "Modeling",
    "section": "Analyzing DAGs: Fork",
    "text": "Analyzing DAGs: Fork\nGood Control\n\nmed &lt;- dagify( x ~ d, y1 ~ d,\n       coords = list(x = c(x = 1, z = 1.5, y = 2, a = 1.5, b = 2, d = 1.5, y1 = 2), \n                     y = c(x = 1, y = 1, z = 1, a = 0, b = 0, d = 2, y1 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name == \"d\", \"Confounder\", \"variables of interest\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=7, aes(color = fill)) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"top\") \nmed\n\n\n\n\n\n\n\n\n\nd causes both x and y1\nArrows pointing to x are called “back-door” paths\nEliminated by randomized experiment! Why?\nControlling for d “blocks” the non-causal association x \\(\\rightarrow\\) y1"
  },
  {
    "objectID": "02-modeling_page.html#analyzing-dags-pipe",
    "href": "02-modeling_page.html#analyzing-dags-pipe",
    "title": "Modeling",
    "section": "Analyzing DAGs: Pipe",
    "text": "Analyzing DAGs: Pipe\nBad Control (possibly use mediation analysis)\n\nmed &lt;- dagify(z ~ x, y2 ~ z,\n       coords = list(x = c(x = 1, z = 1.5, y2 = 2), y = c(x=1, y2 = 1, z=1))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name == \"z\", \"Mediator\", \"variables of interest\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=7, aes(color = fill)) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"top\") \nmed\n\n\n\n\n\n\n\n\n\nx causes y through z\nControlling for z blocks the causal association x \\(\\rightarrow\\) y2"
  },
  {
    "objectID": "02-modeling_page.html#analyzing-dags-collider",
    "href": "02-modeling_page.html#analyzing-dags-collider",
    "title": "Modeling",
    "section": "Analyzing DAGs: Collider",
    "text": "Analyzing DAGs: Collider\nBad control\n\ndagify(a ~ x, a ~ y,\n  coords = list(x = c(x = 1, y = 2, a = 1.5), y = c(x = 1, y = 0,  a = 0))\n) |&gt;\n  tidy_dagitty() |&gt;\n  mutate(fill = ifelse(name == \"a\", \"Collider\", \"variables of interest\")) |&gt;\n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +\n  geom_dag_point(size = 7, aes(color = fill)) +\n  geom_dag_edges(show.legend = FALSE) +\n  geom_dag_text() +\n  theme_dag() +\n  theme(\n    legend.title = element_blank(),\n    legend.position = \"top\"\n  )\n\n\n\n\n\n\n\n\n\nx & y cause a\nx & y are d-separated and uncorrelated\nBy adding a to the model spurious correlation between x & y is introduced"
  },
  {
    "objectID": "02-modeling_page.html#exercise",
    "href": "02-modeling_page.html#exercise",
    "title": "Modeling",
    "section": "Exercise",
    "text": "Exercise\n\nWhich variables should be included?\n\n\n\nEffect of x on y\nEffect of z on y\n\n\n\nlibrary(ggdag)\nlibrary(dagitty)\nlibrary(tidyverse)\ndagify(y ~ n + z + b + c, \n       x ~  z + a + c,\n       n ~ x,\n       z ~ a + b, exposure = \"x\", outcome = \"y\",\n       coords = list(x = c(n = 2, x = 1, y = 3, a = 1, z = 2, c = 2, b = 3), y = c(x = 2, y = 2, a = 3, z = 3, c = 1, b = 3, n = 2))) %&gt;% \n  tidy_dagitty() %&gt;%\n  ggdag(text_size = 8, node_size = 12) +\n  geom_dag_edges() +\n  theme_dag()\n\n\n\n\n\n\n\n\n\nFor x -&gt; y:\nAdd the following to model:\n\nc (confounder)\nz (confounder) but opens collider\na or b to block collider path (b statistically more efficient)\n\nMediator:\n\nn\n\nFor z -&gt; y:\nAdd the following to model:\n\nb (confounder)\na (confounder)\nc (not necessary but not harmful)\n\nMediators:\n\nx (also include c)\nn (also include c)"
  },
  {
    "objectID": "02-modeling_page.html#common-bad-controls-cinelli2020crash",
    "href": "02-modeling_page.html#common-bad-controls-cinelli2020crash",
    "title": "Modeling",
    "section": "Common bad controls (Cinelli, Forney, and Pearl 2020)",
    "text": "Common bad controls (Cinelli, Forney, and Pearl 2020)\n\nlibrary(ggpubr)\np1 &lt;- dagify(y ~ x + U2,\n       a ~ U1 + U2,\n       x ~ U1,\n      coords = list(x = c(x = 1, y = 2, a = 1.5, b = 1.5, U1 = 1, U2 = 2), y = c(x=1, y = 1,  a = 1.5, b = 0, U1 = 2, U2 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name %in% c(\"U1\", \"U2\"), \"Unobserved\", \"Observed\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=12, \n                 aes(color = fill)\n                 ) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"bottom\") +\n  labs(title = \"M-Bias\")\np2 &lt;- dagify(y ~ a + U,\n       a ~ x + U,\n      coords = list(x = c(x = 1, y = 2, a = 1.5, b = 1.5, U = 1.7, U2 = 2), y = c(x=1, y = 1,  a = 1, b = 0, U = 2, U2 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name %in% c(\"U\"), \"Unobserved\", \"Observed\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=12, \n                 aes(color = fill)\n                 ) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"bottom\") +\n  labs(title = \"Post-treatment Bias\")\nggarrange(p1, p2)\n\n\n\n\n\n\n\n\n\nleft: M-Bias\n\nDo not adjust for z since it would open the collider path\n\nright: Post-treatment Bias\n\nDo not include post treatment variable “a” since it would open the confounder path (cannot control since u is unobserved)"
  },
  {
    "objectID": "02-modeling_page.html#common-bad-controls",
    "href": "02-modeling_page.html#common-bad-controls",
    "title": "Modeling",
    "section": "Common bad controls",
    "text": "Common bad controls\n\np1 &lt;- dagify(y ~ x ,\n       a ~ x + y,\n      coords = list(x = c(x = 1, y = 2, a = 1.5, b = 1.5, U1 = 1, U2 = 2), y = c(x=1, y = 1,  a = 1.5, b = 0, U1 = 2, U2 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  #mutate(fill = ifelse(name %in% c(\"U1\", \"U2\"), \"Unobserved\", \"Observed\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=12, \n                 #aes(color = fill)\n                 ) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"bottom\") +\n  labs(title = \"Selection Bias\")\np2 &lt;-  dagify(y ~ x ,\n       a ~ y,\n      coords = list(x = c(x = 1, y = 2, a = 1.5, b = 1.5, U1 = 1, U2 = 2), y = c(x=1, y = 1,  a = 1.5, b = 0, U1 = 2, U2 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  #mutate(fill = ifelse(name %in% c(\"U1\", \"U2\"), \"Unobserved\", \"Observed\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=12, \n                 #aes(color = fill)\n                 ) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"bottom\") +\n  labs(title = \"Case-control Bias\")\nggarrange(p1, p2)\n\n\n\n\n\n\n\n\n\n\nIntelligence, education, income\n\nCase-control study: Observation ex-post. Ex.: Smoking \\(\\rightarrow\\) lung cancer\n\n\n\nLeft: Selection Bias\n\nDo not include “a” since it would open the collider path\n\nRight: Case-control Bias\n\nDo not include “a” since it is caused by y. Would bias effect of x on y."
  },
  {
    "objectID": "02-modeling_page.html#exercise-1",
    "href": "02-modeling_page.html#exercise-1",
    "title": "Modeling",
    "section": "Exercise",
    "text": "Exercise\n\nPrepare a short presentation of a (potential) DAG for your thesis"
  },
  {
    "objectID": "03-data_visualization.html#processing-numbers-is-hard",
    "href": "03-data_visualization.html#processing-numbers-is-hard",
    "title": "Data Visualization",
    "section": "Processing numbers is hard",
    "text": "Processing numbers is hard\n\nCodelibrary(datasauRus)\nlibrary(dplyr)\nlibrary(dagitty)\nlibrary(ggdag)\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(scales)\n\ntab_ds_data &lt;- datasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  group_by(dataset) |&gt;\n  mutate(id = 1:n()) |&gt;\n  pivot_wider(\n    names_from = dataset, \n    values_from = c(x,y),\n    names_vary = 'slowest'\n  ) |&gt;\n  select(-id) |&gt; \n  head(10) \ntab_ds_data |&gt;  \n  gt() |&gt;\n  cols_label(\n    x_dino = 'x',\n    y_dino = 'y',\n    x_star = 'x',\n    y_star = 'y'\n  ) |&gt;\n  fmt_number() |&gt;\n  tab_spanner(\n    label = \"Dino\",\n    columns = ends_with(\"dino\")\n  ) |&gt;\n  cols_align('center') |&gt; \n  tab_spanner(\n    label = \"Star\",\n    columns = ends_with(\"star\")\n  ) |&gt; \n  tab_options(\n    table.width = pct(85),\n    table.font.size = 35) \n\n\n\n\n\n\nDino\nStar\n\n\nx\ny\nx\ny\n\n\n\n\n55.38\n97.18\n58.21\n91.88\n\n\n51.54\n96.03\n58.20\n92.21\n\n\n46.15\n94.49\n58.72\n90.31\n\n\n42.82\n91.41\n57.28\n89.91\n\n\n40.77\n88.33\n58.08\n92.01\n\n\n38.72\n84.87\n57.49\n88.09\n\n\n35.64\n79.87\n28.09\n63.51\n\n\n33.08\n77.56\n28.09\n63.59\n\n\n28.97\n74.49\n28.09\n63.12\n\n\n26.15\n71.41\n27.58\n62.82"
  },
  {
    "objectID": "03-data_visualization.html#summary-statistics-are-limiting",
    "href": "03-data_visualization.html#summary-statistics-are-limiting",
    "title": "Data Visualization",
    "section": "Summary statistics are limiting",
    "text": "Summary statistics are limiting\n\nCodedatasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  group_by(dataset) |&gt;\n  summarize(\n    avg_x = round(mean(x), digits = 2), \n    sd_x = round(sd(x), digits = 2),\n    avg_y = round(mean(y), digits = 2),\n    sd_y = round(sd(y), digits = 2),\n    cor_xy = round(cor(x,y), digits = 2)\n    ) |&gt;\n  mutate(dataset = str_to_title(dataset)) |&gt; \n  gt() |&gt;\n  cols_label(\n    avg_x = \"Mean of x\",\n    sd_x = \"Std. Dev. of x\",\n    avg_y = \"Mean of y\",\n    sd_y = \"Std. Dev. of y\",\n    cor_xy = \"Correlation\") |&gt; \n  tab_options(\n    table.width = pct(85),\n    table.font.size = 35) \n\n\n\n\n\ndataset\nMean of x\nStd. Dev. of x\nMean of y\nStd. Dev. of y\nCorrelation\n\n\n\nDino\n54.26\n16.77\n47.83\n26.94\n-0.06\n\n\nStar\n54.27\n16.77\n47.84\n26.93\n-0.06\n\n\n\n\n\n\n\n\nCodedatasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  mutate(dataset = str_to_title(dataset)) |&gt;\n  ggplot(aes(x = x, y = y)) +\n  geom_point() +\n  facet_wrap(~dataset) +\n  theme_minimal() +\n  theme(\n    panel.grid=element_blank(),\n    strip.text=element_text(size=35),\n    axis.ticks=element_blank(),\n    axis.text=element_blank(),\n    axis.title=element_text(size=30)\n  )"
  },
  {
    "objectID": "03-data_visualization.html#exercise",
    "href": "03-data_visualization.html#exercise",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\n\n\n\nSee beyond summary statistics\n\n\n\nSelect the datasets x_shape & bullseye from the data.frame datasaurus_dozen\n\nCreate a table showing the following statistics for the two datasets:\n\nmean of x and y,\nstandard deviation of x and y, and\ncovariance between x and y\n\n\n\nCreate a plot showing the two datasets\n\n\n\n\nHere is some code to get you started:\n\nCodelibrary(datasauRus)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(stringr)\nlibrary(tidyr)\nfilter(datasaurus_dozen, dataset %in% c('x_shape', 'bullseye')) |&gt;\n  str(give.attr = FALSE)\n\ntibble [284 × 3] (S3: tbl_df/tbl/data.frame)\n $ dataset: chr [1:284] \"x_shape\" \"x_shape\" \"x_shape\" \"x_shape\" ...\n $ x      : num [1:284] 38.3 35.8 32.8 33.7 37.2 ...\n $ y      : num [1:284] 92.5 94.1 88.5 88.6 83.7 ..."
  },
  {
    "objectID": "03-data_visualization.html#visualizing-different-magnitudes",
    "href": "03-data_visualization.html#visualizing-different-magnitudes",
    "title": "Data Visualization",
    "section": "Visualizing different magnitudes",
    "text": "Visualizing different magnitudes\n\nWe can express the comparison of numbers in multiple ways\nSome representations can be interpreted (by humans) more accurately\nAccording to (franconeriScienceVisualData2021?) from most to least accurate:\n\nPosition\nLength\nArea\nAngle\nIntensity"
  },
  {
    "objectID": "03-data_visualization.html#visualizing-sameness",
    "href": "03-data_visualization.html#visualizing-sameness",
    "title": "Data Visualization",
    "section": "Visualizing “sameness”",
    "text": "Visualizing “sameness”"
  },
  {
    "objectID": "03-data_visualization.html#caution-these-can-create-spurious-interpretations",
    "href": "03-data_visualization.html#caution-these-can-create-spurious-interpretations",
    "title": "Data Visualization",
    "section": "Caution: these can create spurious interpretations",
    "text": "Caution: these can create spurious interpretations\n\nCoderelated_data &lt;- data.frame(\n  x = c(rnorm(100, 0, 0.1), rnorm(100, 0.5, 0.1)), \n  y = c(rnorm(100, 0, 0.1), rnorm(100, 0.5, 0.1)))\nggplot(related_data, aes(x = x , y = y)) +\n  geom_point(size = 1.2) +\n\n  theme_minimal() +\n  theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30)\n  )"
  },
  {
    "objectID": "03-data_visualization.html#counteract-by-using-another-principle",
    "href": "03-data_visualization.html#counteract-by-using-another-principle",
    "title": "Data Visualization",
    "section": "Counteract by using another principle",
    "text": "Counteract by using another principle\n\nCoderelated_data$g &lt;- as.factor(ifelse(rbinom(200, 1, prob = 0.5) == 1, 'F', 'M'))\nggplot(related_data, aes(x = x , y = y, color = g, shape = g)) +\n  geom_point(size = 4) +\n  guides(colour = guide_legend(override.aes = list(size=7))) +\n  theme_minimal() +\n  theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.title = element_blank(),\n    legend.position = 'top',\n    legend.text = element_text(size = 25)\n  )"
  },
  {
    "objectID": "03-data_visualization.html#position-is-interpreted-most-accurately",
    "href": "03-data_visualization.html#position-is-interpreted-most-accurately",
    "title": "Data Visualization",
    "section": "Position is interpreted most accurately",
    "text": "Position is interpreted most accurately\n\nCommon y-axis alignment allows for accurate interpretation\nCategories in the x-axis sorted by y-axis value\nPosition should encode the answer to the questions the audience asks\n\n\nCodelibrary(palmerpenguins)\nlibrary(forcats)\nfct_revfreq &lt;- \\(x) fct_rev(fct_infreq(x))\nggplot(penguins, aes(x = fct_revfreq(species))) +\n  geom_bar(stat = \"count\") +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    legend.text=element_text(size=25),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30)\n  )"
  },
  {
    "objectID": "03-data_visualization.html#lengths-of-unaligned-segments-are-harder-to-compare",
    "href": "03-data_visualization.html#lengths-of-unaligned-segments-are-harder-to-compare",
    "title": "Data Visualization",
    "section": "Lengths of unaligned segments are harder to compare",
    "text": "Lengths of unaligned segments are harder to compare\n\nAre there more female Gentoo or female Adelie penguins?\nAre there more male or female Gentoo penuins?\n\n\nCodeggplot(penguins, aes(x = fct_revfreq(species), color = sex, fill = sex)) +\n  geom_bar(stat = \"count\") +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species and sex\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_blank()\n  )"
  },
  {
    "objectID": "03-data_visualization.html#if-the-total-number-is-not-important-but-sub-group-numbers-are",
    "href": "03-data_visualization.html#if-the-total-number-is-not-important-but-sub-group-numbers-are",
    "title": "Data Visualization",
    "section": "If the total number is not important but sub-group numbers are…",
    "text": "If the total number is not important but sub-group numbers are…\n\nAre there more female Gentoo or female Adelie penguins?\nAre there more male or female Gentoo penuins?\n\n\nCodeggplot(penguins, aes(x = fct_revfreq(species), color = sex, fill = sex)) +\n  geom_bar(stat = \"count\", position = 'dodge') +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species and sex\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_blank()\n  )"
  },
  {
    "objectID": "03-data_visualization.html#using-pre-attentive-attributes",
    "href": "03-data_visualization.html#using-pre-attentive-attributes",
    "title": "Data Visualization",
    "section": "Using pre-attentive attributes",
    "text": "Using pre-attentive attributes\n\n\n\nAction potentials are means of communication between neurons in the brain\nThe probability of firing depends on the strength of the stimulus\nThe strength of the stimulus is relative to the background\nAll or nothing process\n\nOnce the threshold is exceeded the neuron fires\n\n\nTakeaway for visualization:\n\nMost important information needs to be “highlighted” relativ to all other information"
  },
  {
    "objectID": "03-data_visualization.html#how-many-bs-are-there",
    "href": "03-data_visualization.html#how-many-bs-are-there",
    "title": "Data Visualization",
    "section": "How many “b”s are there?",
    "text": "How many “b”s are there?\n\ntop-down attention: deliberate & slow\n\n\nCodeset.seed(1)\nxy = expand.grid(seq(0,1, length.out = 5), seq(0,1, length.out = 5))\ntext = sample(c(\"a\", \"b\", \"c\", \"d\", \"e\"), 25, replace = TRUE)\npar(mar = c(0.1,0,0,0))\nplot(c(0, 1), c(0, 1), ann = F, bty = 'n',type = 'n', xaxt = 'n', yaxt = 'n')\ntext(xy[,1], xy[,2], text, cex = 3)"
  },
  {
    "objectID": "03-data_visualization.html#how-many-bs-are-there-1",
    "href": "03-data_visualization.html#how-many-bs-are-there-1",
    "title": "Data Visualization",
    "section": "How many “b”s are there?",
    "text": "How many “b”s are there?\n\nbottom-up attention: unconscious & fast\n\n\nCodepar(mar = c(0,0,0,0))\nplot(c(0, 1), c(0, 1), ann = F, bty = 'n',type = 'n',  xaxt = 'n', yaxt = 'n')\ntext(xy[,1], xy[,2], text, cex = 3, col = ifelse(text == \"b\", \"black\", \"gray\"))"
  },
  {
    "objectID": "03-data_visualization.html#how-many-шs-are-there",
    "href": "03-data_visualization.html#how-many-шs-are-there",
    "title": "Data Visualization",
    "section": "How many “ш”s are there?",
    "text": "How many “ш”s are there?\n\nCodepar(mar = c(0,0,0,0))\ntext_cyr &lt;- sample(c(\"ш\", \"ц\", \"ж\", \"є\", \"ґ\"), 25, replace = TRUE)\nplot(c(0, 1), c(0, 1), ann = F, bty = 'n',type = 'n',  xaxt = 'n', yaxt = 'n')\ntext(xy[,1], xy[,2], text_cyr, cex = 3, col = ifelse(text_cyr == \"ш\", \"black\", \"gray\"))"
  },
  {
    "objectID": "03-data_visualization.html#areas-can-be-useful-to-add-a-third-least-important-variable",
    "href": "03-data_visualization.html#areas-can-be-useful-to-add-a-third-least-important-variable",
    "title": "Data Visualization",
    "section": "Areas can be useful to add a third (least important) variable",
    "text": "Areas can be useful to add a third (least important) variable\n\nCodelibrary(gapminder)\nlibrary(dplyr)\nlibrary(scales)\ngm_last &lt;- gapminder |&gt;\n  group_by(country) |&gt;\n  slice_max(year) |&gt;\n  mutate(hl = as.factor(ifelse(country %in% c(\"China\", \"United States\"), country, 'other')))\nggplot(gm_last, aes(y = lifeExp, x = gdpPercap, size = pop, color = hl)) +\n  geom_point() +\n  scale_size(\n    name = \"Population\",\n    labels = label_number(scale_cut = cut_short_scale()),\n    ) +\n  geom_text(\n    aes(label = country, x = gdpPercap, y = lifeExp),\n    data = filter(gm_last, country %in% c('China', 'United States')),\n    hjust = c(-0.1, 0.5),\n    vjust = c(4, 2),\n    size = 12\n    ) +\n  geom_segment(\n  aes(\n    x = gdpPercap + c(200, 0), \n    y = lifeExp - 1, \n    xend = gdpPercap+c(1000, 0), \n    yend = lifeExp-c(5.5, 2)),\n  data = filter(gm_last, country %in% c('China', 'United States')),\n  size = 0.5\n  ) +\n  scale_x_continuous(labels = label_comma()) +\n  scale_color_manual(values = c('gray20', 'red', 'darkblue')) +\n  guides(colour = 'none') +\n  labs(y = \"Life Expectancy\", x = \"GDP/Capita\") +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_text(size=25)\n  )"
  },
  {
    "objectID": "03-data_visualization.html#do-not-use-pie-charts-just-dont",
    "href": "03-data_visualization.html#do-not-use-pie-charts-just-dont",
    "title": "Data Visualization",
    "section": "Do not use pie-charts… just don’t",
    "text": "Do not use pie-charts… just don’t\n\nCodepenguins |&gt;\n  group_by(species) |&gt;\n  summarize(count = n()) |&gt;\nggplot(aes(x = \"\", y = count, fill = species)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Number of observations by species\",\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks=element_blank(),\n    axis.text=element_blank(),\n    axis.title=element_blank(),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_blank()\n  ) +\n  coord_polar(\"y\", start=0)"
  },
  {
    "objectID": "03-data_visualization.html#exercise-1",
    "href": "03-data_visualization.html#exercise-1",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\n\n\n\nPerceptual accuracy\n\n\n\nCreate a graph that shows the population of penguins for the different species per island\nIt is of particular interest which species is the most common on each island\nCreate another graph that shows the analysis separately for the two sexes"
  },
  {
    "objectID": "03-data_visualization.html#visualizing-many-categories-badly",
    "href": "03-data_visualization.html#visualizing-many-categories-badly",
    "title": "Data Visualization",
    "section": "Visualizing many categories (badly!)",
    "text": "Visualizing many categories (badly!)\n\nWhat is the 5th smallest state?\nWhere does MO rank in terms of size?\n\n\nCodelibrary(datasets)\nlibrary(scales)\nggplot(data.frame(abb = state.abb, area = state.area), aes(x = abb, y = area)) +\n  geom_bar(stat = 'identity') +\n  scale_x_discrete(guide = guide_axis(n.dodge = 2)) +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    labels = label_comma(suffix = \" sq mi\")) + \n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=20),\n    axis.title=element_text(size=30),\n    axis.title.x=element_blank()\n  )"
  },
  {
    "objectID": "03-data_visualization.html#visualizing-many-categories",
    "href": "03-data_visualization.html#visualizing-many-categories",
    "title": "Data Visualization",
    "section": "Visualizing many categories",
    "text": "Visualizing many categories\n\nWhat is the 5th smallest state?\nWhere does MO rank in terms of size?\n\n\nCodelibrary(colorspace)\nlibrary(forcats)\nstate_areas &lt;- data.frame(abb = state.abb, area = state.area, name = state.name) |&gt;\n  mutate(abb = fct_reorder(abb, area))\nggplot(state_areas, aes(x = abb, y = area, \n  color = abb == 'MO', fill = abb == 'MO')) +\n  geom_bar(stat = 'identity') +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)), breaks = seq(50000,600000, by = 100000),\n    labels = label_comma(suffix = \" sq mi\")) + \n  scale_color_manual(values = c('gray85', 'red')) +\n  scale_fill_manual(values = c('gray20', 'red')) +\n  geom_text(\n    aes(label=abb, y = area), \n    position=position_dodge(width=0.9), \n    vjust=-0.50, \n    color = ifelse(state_areas$abb=='MO', 'red', 'gray20'),\n    size = 8)+\n  labs(title = \"US state areas\") +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=45),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=35),\n    axis.text.x=element_blank(),\n    axis.title=element_blank(),\n    legend.position='none'\n  )"
  },
  {
    "objectID": "03-data_visualization.html#color-intensity-provides-less-accurate-encoding",
    "href": "03-data_visualization.html#color-intensity-provides-less-accurate-encoding",
    "title": "Data Visualization",
    "section": "Color intensity provides less accurate encoding",
    "text": "Color intensity provides less accurate encoding\n\nCodelibrary(maps)\nlibrary(sf)\nlibrary(colorspace)\nus_map_data &lt;- map(\"state\", fill=TRUE, plot =FALSE)\n\nusa &lt;- st_as_sf(map(\"state\", fill=TRUE, plot =FALSE))\nusa &lt;- merge(\n  usa, \n  mutate(state_areas, ID = str_to_lower(name)),\n  )\nggplot(usa) +\n  geom_sf(aes(fill = area), color = \"#2b2b2b\", size=0.125) +\n  coord_sf(crs = st_crs(6350)) +\n  geom_sf_text(aes(label = abb, color = abb == 'MO')) +\n  scale_color_manual(values = c('gray20', 'red')) +\n  guides(color = 'none') + \n  ggthemes::theme_map() +\n  scale_fill_binned_sequential(\n    palette = \"Heat\", \n    labels = label_comma(suffix = \" sq mi\") \n    )"
  },
  {
    "objectID": "03-data_visualization.html#colors-are-useful-to-mark-targets-for-preattentive-processing",
    "href": "03-data_visualization.html#colors-are-useful-to-mark-targets-for-preattentive-processing",
    "title": "Data Visualization",
    "section": "Colors are useful to mark targets for preattentive processing",
    "text": "Colors are useful to mark targets for preattentive processing\n\nLarge scale spatial data needs to be “projected” to 2D\nMost well known projection is 4326 measured in degrees latitude and longitude\nHowever, there are more accurate projections for specific regions e.g, 3035 for EU+candidates\n\n\nCode## Example using \"shapefile\"\n### e.g. for EU download here https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units/nuts\neu &lt;- st_read(\"data/NUTS_RG_60M_2021_3035.shp/\", quiet = TRUE)\neu0 &lt;- filter(eu, LEVL_CODE == 0)\n## Transform to longitude and latitude\neu0 &lt;- eu0 |&gt; st_transform(4326)\neu0_box &lt;- eu0 |&gt; st_bbox()\neu0_box &lt;- eu0_box + c(50, 20, 0, -10)\nggplot(st_crop(eu0, eu0_box))+ \n  geom_sf(fill = 'white', lwd = 1) +\n  geom_sf(data = filter(eu0, CNTR_CODE == 'AT'), color = 'red', lwd =1.5) + \n  coord_sf(crs = st_crs(3035)) +\n  geom_sf_text(aes(label = CNTR_CODE, color = CNTR_CODE == 'AT'), size = 15) +\n  scale_color_manual(values = c('gray20', 'red')) +\n  guides(color = 'none') + \n  ggthemes::theme_map(base_size = 12)"
  },
  {
    "objectID": "03-data_visualization.html#exercise-2",
    "href": "03-data_visualization.html#exercise-2",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\n\n\n\nGeospacial data\n\n\n\nObtain the shape (“SHP”) file for the EU + candidates from Eurostat\n\nCrop the data to exclude overseas territories\nHighlight the “DACH” region"
  },
  {
    "objectID": "03-data_visualization.html#connectedness-helps-connecting-the-dots",
    "href": "03-data_visualization.html#connectedness-helps-connecting-the-dots",
    "title": "Data Visualization",
    "section": "“Connectedness” helps connecting the dots",
    "text": "“Connectedness” helps connecting the dots\n\nCodecharts &lt;- arrow::read_parquet(\n    \"data/chart_data/spotify_charts.parquet\")  |&gt; \n    filter(country %in% c(\"de\", \"fr\")) |&gt;\n    group_by(country, date) |&gt;\n    summarize(total_streams = sum(streams)) \ncharts |&gt;\n    ggplot(aes(x = date, y = log(total_streams))) +\n    geom_point(aes(color = country), size = 4) +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    scale_color_discrete_qualitative(palette = \"Dark 2\") +\n    theme_classic() +\n    labs(y = \"log(total streams)\", title = \"Total streams 2023/24\", subtitle = \"Top 200 songs\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        axis.title.x=element_blank(),\n        legend.position = 'top',\n        plot.title = element_text(size = 35),\n        plot.subtitle = element_text(size = 35)\n    )"
  },
  {
    "objectID": "03-data_visualization.html#connectedness-helps-connecting-the-dots-1",
    "href": "03-data_visualization.html#connectedness-helps-connecting-the-dots-1",
    "title": "Data Visualization",
    "section": "“Connectedness” helps connecting the dots",
    "text": "“Connectedness” helps connecting the dots\n\nCodecharts &lt;- arrow::read_parquet(\n    \"data/chart_data/spotify_charts.parquet\")  |&gt; \n    filter(country %in% c(\"de\", \"fr\")) |&gt;\n    group_by(country, date) |&gt;\n    summarize(total_streams = sum(streams)) \ncharts |&gt;\n    ggplot(aes(x = date, y = log(total_streams), color = country)) +\n    geom_point(size = 4) +\n    geom_line() +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    scale_color_discrete_qualitative(palette = \"Dark 2\") +\n    theme_classic() +\n    labs(y = \"log(total streams)\", title = \"Total streams 2023/24\", subtitle = \"Top 200 songs\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        axis.title.x=element_blank(),\n        legend.position = 'top',\n        plot.title = element_text(size = 35),\n        plot.subtitle = element_text(size = 35)\n    )"
  },
  {
    "objectID": "03-data_visualization.html#use-scatter-plots-to-show-correlation",
    "href": "03-data_visualization.html#use-scatter-plots-to-show-correlation",
    "title": "Data Visualization",
    "section": "Use scatter plots to show correlation",
    "text": "Use scatter plots to show correlation\n\nCodepenguins |&gt;\nggplot(aes(x = bill_length_mm, y = bill_depth_mm, #color = species\n)) +\n    geom_point(size = 4) +\n    geom_smooth(method = 'lm', se = FALSE) +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    theme_classic() +\n    labs(y = \"Bill depth\", x = \"Bill length\") +\n    theme(\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n    )"
  },
  {
    "objectID": "03-data_visualization.html#beware-of-simpsons-paradox",
    "href": "03-data_visualization.html#beware-of-simpsons-paradox",
    "title": "Data Visualization",
    "section": "Beware of “Simpson’s Paradox”",
    "text": "Beware of “Simpson’s Paradox”\n\nWhen between-group correlation is the opposite of within-group correlation\n\n\nCodepenguins |&gt;\nggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n    geom_point(size = 4) +\n    geom_smooth(method = 'lm', se = FALSE) +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    theme_classic() +\n    labs(y = \"Bill depth\", x = \"Bill length\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        legend.position = 'top',\n    )"
  },
  {
    "objectID": "03-data_visualization.html#use-boxplots-to-show-distributions",
    "href": "03-data_visualization.html#use-boxplots-to-show-distributions",
    "title": "Data Visualization",
    "section": "Use Boxplots to show distributions",
    "text": "Use Boxplots to show distributions\n\nCodepenguins |&gt;\nggplot(aes(\n  y = bill_length_mm, \n  x = fct_reorder(species, bill_length_mm, .fun = median, .na_rm = TRUE))) +\n    geom_boxplot(na.rm = TRUE) +\n    theme_classic() +\n    labs(y = \"Bill length\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        axis.title.x=element_blank(),\n        legend.position = 'top',\n    )"
  },
  {
    "objectID": "03-data_visualization.html#analyzing-dags-pipe",
    "href": "03-data_visualization.html#analyzing-dags-pipe",
    "title": "Data Visualization",
    "section": "Analyzing DAGs: Pipe",
    "text": "Analyzing DAGs: Pipe\nBad Control (possibly use mediation analysis)\n\nCodemed &lt;- dagify(z ~ x, y2 ~ z,\n       coords = list(x = c(x = 1, z = 1.5, y2 = 2), y = c(x=1, y2 = 1, z=1))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name == \"z\", \"Mediator\", \"variables of interest\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=7, aes(color = fill)) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"top\") \nmed\n\n\n\nx causes y through z\nControlling for z blocks the causal association x \\(\\rightarrow\\) y2"
  },
  {
    "objectID": "03-data_visualization.html#analyzing-dags-collider",
    "href": "03-data_visualization.html#analyzing-dags-collider",
    "title": "Data Visualization",
    "section": "Analyzing DAGs: Collider",
    "text": "Analyzing DAGs: Collider\nBad control\n\nCodedagify(a ~ x, a ~ y,\n  coords = list(x = c(x = 1, y = 2, a = 1.5), y = c(x = 1, y = 0,  a = 0))\n) |&gt;\n  tidy_dagitty() |&gt;\n  mutate(fill = ifelse(name == \"a\", \"Collider\", \"variables of interest\")) |&gt;\n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +\n  geom_dag_point(size = 7, aes(color = fill)) +\n  geom_dag_edges(show.legend = FALSE) +\n  geom_dag_text() +\n  theme_dag() +\n  theme(\n    legend.title = element_blank(),\n    legend.position = \"top\"\n  )\n\n\n\nx & y cause a\nx & y are d-separated and uncorrelated\nBy adding a to the model spurious correlation between x & y is introduced"
  },
  {
    "objectID": "03-data_visualization.html#analyzing-dags-fork",
    "href": "03-data_visualization.html#analyzing-dags-fork",
    "title": "Data Visualization",
    "section": "Analyzing DAGs: Fork",
    "text": "Analyzing DAGs: Fork\nGood Control\n\nCodemed &lt;- dagify( x ~ d, y1 ~ d,\n       coords = list(x = c(x = 1, z = 1.5, y = 2, a = 1.5, b = 2, d = 1.5, y1 = 2), \n                     y = c(x = 1, y = 1, z = 1, a = 0, b = 0, d = 2, y1 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name == \"d\", \"Confounder\", \"variables of interest\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=7, aes(color = fill)) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"top\") \nmed\n\n\n\nd causes both x and y1\nArrows pointing to x are called “back-door” paths\nControlling for d “blocks” the non-causal association x \\(\\rightarrow\\) y1\n\n\n\n\nEliminated by randomized experiment! Why?"
  },
  {
    "objectID": "03-data_visualization.html#randomized-experiments",
    "href": "03-data_visualization.html#randomized-experiments",
    "title": "Data Visualization",
    "section": "Randomized experiments",
    "text": "Randomized experiments\n\nResearcher manipulates the variable of interest (x)\nHolding all other variables (confounders) constant\nTo check the “pure” causal effect of the manipulation on the relevant outcome (y)\nIntuition: variation in y has to be due to x as all other things are kept constant\n\n\nCodeexper &lt;- dagify( x ~ d, y ~ d, y ~ x,\n       coords = list(x = c(x = 1, d = 1.5, y = 2), \n                     y = c(x = 0, d = 1, y = 0))\n) |&gt; \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name == \"d\", \"Confounder\", \"variables of interest\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=7, aes(color = fill)) + \n  geom_dag_edges(\n    show.legend = FALSE, \n    aes(\n      edge_color = ifelse(name == 'd', 'gray80', 'darkgreen'),\n      edge_linetype = ifelse(name == 'd', 'dashed', 'solid')\n      ))+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"top\") +\n  geom_text(aes(x = 1.5, y = 1, label = '← kept constant'), hjust = -0.3)\nexper"
  },
  {
    "objectID": "03-data_visualization.html#notes-on-choosing-a-model",
    "href": "03-data_visualization.html#notes-on-choosing-a-model",
    "title": "Data Visualization",
    "section": "Notes on choosing a model",
    "text": "Notes on choosing a model\n\nOften models assume a distribution of the error term\n\ne.g., linear regression: normal distribution\n\n\nWe can choose a model based on its assumptions\n\ne.g., continuous data: linear regression\ne.g., binary data: logistic regression\n\n\nSpecialized methods for dependent observations\n\ne.g., paired t-test \\(\\rightarrow\\) test on difference of within-subject design\n\n\nSpecialized methods for violations of assumptions\n\ne.g., Wilcoxon signed-rank test as alternative to t-test"
  },
  {
    "objectID": "03-data_visualization.html#visualizing-uncertainty-simple-experiments",
    "href": "03-data_visualization.html#visualizing-uncertainty-simple-experiments",
    "title": "Data Visualization",
    "section": "Visualizing Uncertainty: Simple experiments",
    "text": "Visualizing Uncertainty: Simple experiments\n\n\n\nOutputs from statistical models should generally include:\n\nEffect size\nTest statistic calculated (incl. paramters) & p-value\nIt is typical to include an interpretation of significance\nHowever, this is not recommended by statistical community. Wasserstein, Schirm, and Lazar (2019):\n\n\n\n\n“if p = 0.03 then “…was statistically significant” would be replaced by “…had p = 0.03,””\n\n\nThe ggstatsplot library (Patil 2021) provides useful functions to calculate and visualize statistical tests and model parameters\nFollows best practices\n\nggbetweenstats & ggwithinstats for between- and within-subject experimental designs\n\nChooses automatically between t-test (2 groups) and ANOVA (3+ groups)\nLarge number of tests available\nChoose type='nonparametric' for versions that are robust to violations of the normal-distribution assumption\nChoose type='robust' for versions that are robust to a few outliers\n\n\n\n\n\nCodelibrary(ggstatsplot)\nlibrary(palmerpenguins)\nggbetweenstats(\n  data = penguins,\n  x = species,\n  y = body_mass_g,\n  type = 'nonparametric',\n  violin.args = list(width = 0, linewidth=0),\n  point.args = list(alpha = 0),\n  bf.message = FALSE\n) + labs(y = \"body mass\")"
  },
  {
    "objectID": "03-data_visualization.html#visualizing-uncertainty-regression-models",
    "href": "03-data_visualization.html#visualizing-uncertainty-regression-models",
    "title": "Data Visualization",
    "section": "Visualizing uncertainty: Regression models",
    "text": "Visualizing uncertainty: Regression models\n\nUse the ggcoefstats function to visualize the results of (currently) \\(225\\) different types of regression models\n\n\nCodeggcoefstats(\n  lm(body_mass_g ~ species + sex, data = penguins)\n) + labs(caption = 'Error bars show 95% confidence interval')"
  },
  {
    "objectID": "03-data_visualization.html#visualizing-uncertainty-regression-models-1",
    "href": "03-data_visualization.html#visualizing-uncertainty-regression-models-1",
    "title": "Data Visualization",
    "section": "Visualizing uncertainty: Regression models",
    "text": "Visualizing uncertainty: Regression models\n\nCoefficient names can be modified by providing a data.frame with the relevant statistics instead of the model\n\n\nCodebody_mass_mod &lt;- lm(body_mass_g ~ species + sex, data = penguins)\ntidy_coefs &lt;- broom::tidy(body_mass_mod)\ntidy_coefs$df.error &lt;- body_mass_mod$df.residual\ntidy_coefs &lt;- confint(body_mass_mod) |&gt; \n  data.frame() |&gt; \n  dplyr::rename(conf.low = 'X2.5..', conf.high = 'X97.5..') |&gt;\n  cbind(tidy_coefs) |&gt;\n  mutate(term = str_replace_all(\n    term, c(\n      sexmale = \"male (vs. female)\",\n      speciesGentoo = \"Gentoo (vs. Adelie)\",\n      speciesChinstrap = \"Chinstrap (vs. Adelie)\"\n    )))\nggcoefstats(\n  tidy_coefs, \n  statistic = 't',\n  exclude.intercept = TRUE\n  ) + \n  labs(title = 'DV: body mass (g)', caption = 'Intercept omitted; error bars show 95% confidence interval') +\n  scale_x_continuous(labels = label_number(suffix = 'g')) +\n  theme(axis.title.y = element_blank())"
  },
  {
    "objectID": "03-data_visualization.html#a-few-notes-on-colors",
    "href": "03-data_visualization.html#a-few-notes-on-colors",
    "title": "Data Visualization",
    "section": "A few notes on colors",
    "text": "A few notes on colors\n\nThe library(colorspace) has convenient functions for picking correct color patterns\n\nPalette type depends on the scaling of the data visualized\n\nIs the data discrete or continuous?\nIs there an ordering?\n\nIs the ordering diverging (i.e., there is a neutral state)?\n\n\n\n\nThere are convenience functions for ggplot\n\n\nscale_&lt;aesthetic&gt;_&lt;datatype&gt;_&lt;colorscale&gt;()\n\n\naesthetics: fill, color\n\n\ndatatypes: discrete, continuous, binned\n\n\ncolorscales: qualitative, sequential, diverging"
  },
  {
    "objectID": "03-data_visualization.html#diverging-colors-correlation-matrix",
    "href": "03-data_visualization.html#diverging-colors-correlation-matrix",
    "title": "Data Visualization",
    "section": "Diverging colors: correlation matrix",
    "text": "Diverging colors: correlation matrix\n\nDiverging from -1 to 1 with 0 as a neutral point\n\n\ncorrs &lt;- palmerpenguins::penguins |&gt; \n  drop_na() |&gt; \n  select(bill_length_mm, bill_depth_mm, flipper_length_mm) |&gt;\n  cor()\ncor_df &lt;- data.frame(cor = c(corrs), var1 = factor(col(corrs)), var2 = factor(row(corrs)))\nggplot(cor_df, aes(var1, var2, fill = cor)) + \n  geom_tile() + \n  coord_fixed() +\n  ylab(\"variable\") +\n  scale_x_discrete(position = \"top\", name = \"variable\") +\n  scale_fill_continuous_diverging(\"Blue-Red 3\")"
  },
  {
    "objectID": "03-data_visualization.html#qualitative-colors-unordered-groups",
    "href": "03-data_visualization.html#qualitative-colors-unordered-groups",
    "title": "Data Visualization",
    "section": "Qualitative colors: Unordered groups",
    "text": "Qualitative colors: Unordered groups\n\nRule of thumb: visualize up to 7 groups with colors\nMore become hard to differentiate\n\n\n\nggplot(penguins, \n  aes(x = fct_revfreq(species), \n      color = sex, fill = sex)) +\n  geom_bar(stat = \"count\", position = 'dodge') +\n  scale_fill_discrete_qualitative(\"pastel 1\") +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species and sex\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_blank()\n  )"
  },
  {
    "objectID": "03-data_visualization.html#color-vision-deficiency",
    "href": "03-data_visualization.html#color-vision-deficiency",
    "title": "Data Visualization",
    "section": "Color Vision Deficiency",
    "text": "Color Vision Deficiency\n\n~8% of men and ~0.5% of women have color vision deficiency (CVD) (“color blindness”)\nWe can simulate CVD using swatchplot(&lt;palette&gt;, cvd = TRUE)\n\n\n\n\nswatchplot(diverging_hcl(7, 'Red-Green'), cvd = TRUE)"
  },
  {
    "objectID": "03-data_visualization.html#references",
    "href": "03-data_visualization.html#references",
    "title": "Data Visualization",
    "section": "References",
    "text": "References\n\n\n\n\nData-based Storytelling\n\n\n\n\nPatil, Indrajeet. 2021. “Visualizations with statistical details: The ’ggstatsplot’ approach.” Journal of Open Source Software 6 (61): 3167. https://doi.org/10.21105/joss.03167.\n\n\nWasserstein, Ronald L., Allen L. Schirm, and Nicole A. Lazar. 2019. “Moving to a World Beyond ‘p &lt; 0.05’.” The American Statistician 73 (March): 1–19. https://doi.org/10.1080/00031305.2019.1583913."
  },
  {
    "objectID": "02-data_visualization_page.html",
    "href": "02-data_visualization_page.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Code\nlibrary(datasauRus)\nlibrary(dplyr)\nlibrary(dagitty)\nlibrary(ggdag)\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(scales)\n\ntab_ds_data &lt;- datasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  group_by(dataset) |&gt;\n  mutate(id = 1:n()) |&gt;\n  pivot_wider(\n    names_from = dataset, \n    values_from = c(x,y),\n    names_vary = 'slowest'\n  ) |&gt;\n  select(-id) |&gt; \n  head(10) \ntab_ds_data |&gt;  \n  gt() |&gt;\n  cols_label(\n    x_dino = 'x',\n    y_dino = 'y',\n    x_star = 'x',\n    y_star = 'y'\n  ) |&gt;\n  fmt_number() |&gt;\n  tab_spanner(\n    label = \"Dino\",\n    columns = ends_with(\"dino\")\n  ) |&gt;\n  cols_align('center') |&gt; \n  tab_spanner(\n    label = \"Star\",\n    columns = ends_with(\"star\")\n  ) |&gt; \n  tab_options(\n    table.width = pct(85),\n    table.font.size = 35) \n\n\n\n\n\n\n\n\nDino\nStar\n\n\nx\ny\nx\ny\n\n\n\n\n55.38\n97.18\n58.21\n91.88\n\n\n51.54\n96.03\n58.20\n92.21\n\n\n46.15\n94.49\n58.72\n90.31\n\n\n42.82\n91.41\n57.28\n89.91\n\n\n40.77\n88.33\n58.08\n92.01\n\n\n38.72\n84.87\n57.49\n88.09\n\n\n35.64\n79.87\n28.09\n63.51\n\n\n33.08\n77.56\n28.09\n63.59\n\n\n28.97\n74.49\n28.09\n63.12\n\n\n26.15\n71.41\n27.58\n62.82\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndatasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  group_by(dataset) |&gt;\n  summarize(\n    avg_x = round(mean(x), digits = 2), \n    sd_x = round(sd(x), digits = 2),\n    avg_y = round(mean(y), digits = 2),\n    sd_y = round(sd(y), digits = 2),\n    cor_xy = round(cor(x,y), digits = 2)\n    ) |&gt;\n  mutate(dataset = str_to_title(dataset)) |&gt; \n  gt() |&gt;\n  cols_label(\n    avg_x = \"Mean of x\",\n    sd_x = \"Std. Dev. of x\",\n    avg_y = \"Mean of y\",\n    sd_y = \"Std. Dev. of y\",\n    cor_xy = \"Correlation\") |&gt; \n  tab_options(\n    table.width = pct(85),\n    table.font.size = 35) \n\n\n\n\n\n\n\n\ndataset\nMean of x\nStd. Dev. of x\nMean of y\nStd. Dev. of y\nCorrelation\n\n\n\n\nDino\n54.26\n16.77\n47.83\n26.94\n-0.06\n\n\nStar\n54.27\n16.77\n47.84\n26.93\n-0.06\n\n\n\n\n\n\n\n\n\n\nCode\ndatasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  mutate(dataset = str_to_title(dataset)) |&gt;\n  ggplot(aes(x = x, y = y)) +\n  geom_point() +\n  facet_wrap(~dataset) +\n  theme_minimal() +\n  theme(\n    panel.grid=element_blank(),\n    strip.text=element_text(size=35),\n    axis.ticks=element_blank(),\n    axis.text=element_blank(),\n    axis.title=element_text(size=30)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSee beyond summary statistics\n\n\n\n\nSelect the datasets x_shape & bullseye from the data.frame datasaurus_dozen\nCreate a table showing the following statistics for the two datasets:\n\nmean of x and y,\nstandard deviation of x and y, and\ncovariance between x and y\n\nCreate a plot showing the two datasets\n\n\n\nHere is some code to get you started:\n\n\nCode\nlibrary(datasauRus)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(stringr)\nlibrary(tidyr)\nfilter(datasaurus_dozen, dataset %in% c('x_shape', 'bullseye')) |&gt;\n  str(give.attr = FALSE)\n\n\ntibble [284 × 3] (S3: tbl_df/tbl/data.frame)\n $ dataset: chr [1:284] \"x_shape\" \"x_shape\" \"x_shape\" \"x_shape\" ...\n $ x      : num [1:284] 38.3 35.8 32.8 33.7 37.2 ...\n $ y      : num [1:284] 92.5 94.1 88.5 88.6 83.7 ..."
  },
  {
    "objectID": "02-data_visualization_page.html#processing-numbers-is-hard",
    "href": "02-data_visualization_page.html#processing-numbers-is-hard",
    "title": "Data Visualization",
    "section": "",
    "text": "Code\nlibrary(datasauRus)\nlibrary(dplyr)\nlibrary(dagitty)\nlibrary(ggdag)\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(scales)\n\ntab_ds_data &lt;- datasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  group_by(dataset) |&gt;\n  mutate(id = 1:n()) |&gt;\n  pivot_wider(\n    names_from = dataset, \n    values_from = c(x,y),\n    names_vary = 'slowest'\n  ) |&gt;\n  select(-id) |&gt; \n  head(10) \ntab_ds_data |&gt;  \n  gt() |&gt;\n  cols_label(\n    x_dino = 'x',\n    y_dino = 'y',\n    x_star = 'x',\n    y_star = 'y'\n  ) |&gt;\n  fmt_number() |&gt;\n  tab_spanner(\n    label = \"Dino\",\n    columns = ends_with(\"dino\")\n  ) |&gt;\n  cols_align('center') |&gt; \n  tab_spanner(\n    label = \"Star\",\n    columns = ends_with(\"star\")\n  ) |&gt; \n  tab_options(\n    table.width = pct(85),\n    table.font.size = 35) \n\n\n\n\n\n\n\n\nDino\nStar\n\n\nx\ny\nx\ny\n\n\n\n\n55.38\n97.18\n58.21\n91.88\n\n\n51.54\n96.03\n58.20\n92.21\n\n\n46.15\n94.49\n58.72\n90.31\n\n\n42.82\n91.41\n57.28\n89.91\n\n\n40.77\n88.33\n58.08\n92.01\n\n\n38.72\n84.87\n57.49\n88.09\n\n\n35.64\n79.87\n28.09\n63.51\n\n\n33.08\n77.56\n28.09\n63.59\n\n\n28.97\n74.49\n28.09\n63.12\n\n\n26.15\n71.41\n27.58\n62.82"
  },
  {
    "objectID": "02-data_visualization_page.html#summary-statistics-are-limiting",
    "href": "02-data_visualization_page.html#summary-statistics-are-limiting",
    "title": "Data Visualization",
    "section": "",
    "text": "Code\ndatasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  group_by(dataset) |&gt;\n  summarize(\n    avg_x = round(mean(x), digits = 2), \n    sd_x = round(sd(x), digits = 2),\n    avg_y = round(mean(y), digits = 2),\n    sd_y = round(sd(y), digits = 2),\n    cor_xy = round(cor(x,y), digits = 2)\n    ) |&gt;\n  mutate(dataset = str_to_title(dataset)) |&gt; \n  gt() |&gt;\n  cols_label(\n    avg_x = \"Mean of x\",\n    sd_x = \"Std. Dev. of x\",\n    avg_y = \"Mean of y\",\n    sd_y = \"Std. Dev. of y\",\n    cor_xy = \"Correlation\") |&gt; \n  tab_options(\n    table.width = pct(85),\n    table.font.size = 35) \n\n\n\n\n\n\n\n\ndataset\nMean of x\nStd. Dev. of x\nMean of y\nStd. Dev. of y\nCorrelation\n\n\n\n\nDino\n54.26\n16.77\n47.83\n26.94\n-0.06\n\n\nStar\n54.27\n16.77\n47.84\n26.93\n-0.06\n\n\n\n\n\n\n\n\n\n\nCode\ndatasaurus_dozen |&gt;\n  filter(dataset %in% c('dino', 'star')) |&gt;\n  mutate(dataset = str_to_title(dataset)) |&gt;\n  ggplot(aes(x = x, y = y)) +\n  geom_point() +\n  facet_wrap(~dataset) +\n  theme_minimal() +\n  theme(\n    panel.grid=element_blank(),\n    strip.text=element_text(size=35),\n    axis.ticks=element_blank(),\n    axis.text=element_blank(),\n    axis.title=element_text(size=30)\n  )"
  },
  {
    "objectID": "02-data_visualization_page.html#exercise",
    "href": "02-data_visualization_page.html#exercise",
    "title": "Data Visualization",
    "section": "",
    "text": "See beyond summary statistics\n\n\n\n\nSelect the datasets x_shape & bullseye from the data.frame datasaurus_dozen\nCreate a table showing the following statistics for the two datasets:\n\nmean of x and y,\nstandard deviation of x and y, and\ncovariance between x and y\n\nCreate a plot showing the two datasets\n\n\n\nHere is some code to get you started:\n\n\nCode\nlibrary(datasauRus)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(stringr)\nlibrary(tidyr)\nfilter(datasaurus_dozen, dataset %in% c('x_shape', 'bullseye')) |&gt;\n  str(give.attr = FALSE)\n\n\ntibble [284 × 3] (S3: tbl_df/tbl/data.frame)\n $ dataset: chr [1:284] \"x_shape\" \"x_shape\" \"x_shape\" \"x_shape\" ...\n $ x      : num [1:284] 38.3 35.8 32.8 33.7 37.2 ...\n $ y      : num [1:284] 92.5 94.1 88.5 88.6 83.7 ..."
  },
  {
    "objectID": "02-data_visualization_page.html#visualizing-different-magnitudes",
    "href": "02-data_visualization_page.html#visualizing-different-magnitudes",
    "title": "Data Visualization",
    "section": "Visualizing different magnitudes",
    "text": "Visualizing different magnitudes\n\nWe can express the comparison of numbers in multiple ways\nSome representations can be interpreted (by humans) more accurately\nAccording to (franconeriScienceVisualData2021?) from most to least accurate:\n\nPosition\nLength\nArea\nAngle\nIntensity"
  },
  {
    "objectID": "02-data_visualization_page.html#visualizing-sameness",
    "href": "02-data_visualization_page.html#visualizing-sameness",
    "title": "Data Visualization",
    "section": "Visualizing “sameness”",
    "text": "Visualizing “sameness”"
  },
  {
    "objectID": "02-data_visualization_page.html#caution-these-can-create-spurious-interpretations",
    "href": "02-data_visualization_page.html#caution-these-can-create-spurious-interpretations",
    "title": "Data Visualization",
    "section": "Caution: these can create spurious interpretations",
    "text": "Caution: these can create spurious interpretations\n\n\nCode\nrelated_data &lt;- data.frame(\n  x = c(rnorm(100, 0, 0.1), rnorm(100, 0.5, 0.1)), \n  y = c(rnorm(100, 0, 0.1), rnorm(100, 0.5, 0.1)))\nggplot(related_data, aes(x = x , y = y)) +\n  geom_point(size = 1.2) +\n\n  theme_minimal() +\n  theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30)\n  )"
  },
  {
    "objectID": "02-data_visualization_page.html#counteract-by-using-another-principle",
    "href": "02-data_visualization_page.html#counteract-by-using-another-principle",
    "title": "Data Visualization",
    "section": "Counteract by using another principle",
    "text": "Counteract by using another principle\n\n\nCode\nrelated_data$g &lt;- as.factor(ifelse(rbinom(200, 1, prob = 0.5) == 1, 'F', 'M'))\nggplot(related_data, aes(x = x , y = y, color = g, shape = g)) +\n  geom_point(size = 4) +\n  guides(colour = guide_legend(override.aes = list(size=7))) +\n  theme_minimal() +\n  theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.title = element_blank(),\n    legend.position = 'top',\n    legend.text = element_text(size = 25)\n  )"
  },
  {
    "objectID": "02-data_visualization_page.html#position-is-interpreted-most-accurately",
    "href": "02-data_visualization_page.html#position-is-interpreted-most-accurately",
    "title": "Data Visualization",
    "section": "Position is interpreted most accurately",
    "text": "Position is interpreted most accurately\n\nCommon y-axis alignment allows for accurate interpretation\nCategories in the x-axis sorted by y-axis value\nPosition should encode the answer to the questions the audience asks\n\n\n\nCode\nlibrary(palmerpenguins)\nlibrary(forcats)\nfct_revfreq &lt;- \\(x) fct_rev(fct_infreq(x))\nggplot(penguins, aes(x = fct_revfreq(species))) +\n  geom_bar(stat = \"count\") +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    legend.text=element_text(size=25),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30)\n  )"
  },
  {
    "objectID": "02-data_visualization_page.html#lengths-of-unaligned-segments-are-harder-to-compare",
    "href": "02-data_visualization_page.html#lengths-of-unaligned-segments-are-harder-to-compare",
    "title": "Data Visualization",
    "section": "Lengths of unaligned segments are harder to compare",
    "text": "Lengths of unaligned segments are harder to compare\n\nAre there more female Gentoo or female Adelie penguins?\nAre there more male or female Gentoo penuins?\n\n\n\nCode\nggplot(penguins, aes(x = fct_revfreq(species), color = sex, fill = sex)) +\n  geom_bar(stat = \"count\") +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species and sex\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_blank()\n  )"
  },
  {
    "objectID": "02-data_visualization_page.html#if-the-total-number-is-not-important-but-sub-group-numbers-are",
    "href": "02-data_visualization_page.html#if-the-total-number-is-not-important-but-sub-group-numbers-are",
    "title": "Data Visualization",
    "section": "If the total number is not important but sub-group numbers are…",
    "text": "If the total number is not important but sub-group numbers are…\n\nAre there more female Gentoo or female Adelie penguins?\nAre there more male or female Gentoo penuins?\n\n\n\nCode\nggplot(penguins, aes(x = fct_revfreq(species), color = sex, fill = sex)) +\n  geom_bar(stat = \"count\", position = 'dodge') +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species and sex\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_blank()\n  )"
  },
  {
    "objectID": "02-data_visualization_page.html#using-pre-attentive-attributes",
    "href": "02-data_visualization_page.html#using-pre-attentive-attributes",
    "title": "Data Visualization",
    "section": "Using pre-attentive attributes",
    "text": "Using pre-attentive attributes\n\n\n\nAction potentials are means of communication between neurons in the brain\nThe probability of firing depends on the strength of the stimulus\nThe strength of the stimulus is relative to the background\nAll or nothing process\n\nOnce the threshold is exceeded the neuron fires\n\nTakeaway for visualization:\n\nMost important information needs to be “highlighted” relativ to all other information"
  },
  {
    "objectID": "02-data_visualization_page.html#how-many-bs-are-there",
    "href": "02-data_visualization_page.html#how-many-bs-are-there",
    "title": "Data Visualization",
    "section": "How many “b”s are there?",
    "text": "How many “b”s are there?\n\ntop-down attention: deliberate & slow\n\n\n\nCode\nset.seed(1)\nxy = expand.grid(seq(0,1, length.out = 5), seq(0,1, length.out = 5))\ntext = sample(c(\"a\", \"b\", \"c\", \"d\", \"e\"), 25, replace = TRUE)\npar(mar = c(0.1,0,0,0))\nplot(c(0, 1), c(0, 1), ann = F, bty = 'n',type = 'n', xaxt = 'n', yaxt = 'n')\ntext(xy[,1], xy[,2], text, cex = 3)"
  },
  {
    "objectID": "02-data_visualization_page.html#how-many-bs-are-there-1",
    "href": "02-data_visualization_page.html#how-many-bs-are-there-1",
    "title": "Data Visualization",
    "section": "How many “b”s are there?",
    "text": "How many “b”s are there?\n\nbottom-up attention: unconscious & fast\n\n\n\nCode\npar(mar = c(0,0,0,0))\nplot(c(0, 1), c(0, 1), ann = F, bty = 'n',type = 'n',  xaxt = 'n', yaxt = 'n')\ntext(xy[,1], xy[,2], text, cex = 3, col = ifelse(text == \"b\", \"black\", \"gray\"))"
  },
  {
    "objectID": "02-data_visualization_page.html#how-many-шs-are-there",
    "href": "02-data_visualization_page.html#how-many-шs-are-there",
    "title": "Data Visualization",
    "section": "How many “ш”s are there?",
    "text": "How many “ш”s are there?\n\n\nCode\npar(mar = c(0,0,0,0))\ntext_cyr &lt;- sample(c(\"ш\", \"ц\", \"ж\", \"є\", \"ґ\"), 25, replace = TRUE)\nplot(c(0, 1), c(0, 1), ann = F, bty = 'n',type = 'n',  xaxt = 'n', yaxt = 'n')\ntext(xy[,1], xy[,2], text_cyr, cex = 3, col = ifelse(text_cyr == \"ш\", \"black\", \"gray\"))"
  },
  {
    "objectID": "02-data_visualization_page.html#areas-can-be-useful-to-add-a-third-least-important-variable",
    "href": "02-data_visualization_page.html#areas-can-be-useful-to-add-a-third-least-important-variable",
    "title": "Data Visualization",
    "section": "Areas can be useful to add a third (least important) variable",
    "text": "Areas can be useful to add a third (least important) variable\n\n\nCode\nlibrary(gapminder)\nlibrary(dplyr)\nlibrary(scales)\ngm_last &lt;- gapminder |&gt;\n  group_by(country) |&gt;\n  slice_max(year) |&gt;\n  mutate(hl = as.factor(ifelse(country %in% c(\"China\", \"United States\"), country, 'other')))\nggplot(gm_last, aes(y = lifeExp, x = gdpPercap, size = pop, color = hl)) +\n  geom_point() +\n  scale_size(\n    name = \"Population\",\n    labels = label_number(scale_cut = cut_short_scale()),\n    ) +\n  geom_text(\n    aes(label = country, x = gdpPercap, y = lifeExp),\n    data = filter(gm_last, country %in% c('China', 'United States')),\n    hjust = c(-0.1, 0.5),\n    vjust = c(4, 2),\n    size = 12\n    ) +\n  geom_segment(\n  aes(\n    x = gdpPercap + c(200, 0), \n    y = lifeExp - 1, \n    xend = gdpPercap+c(1000, 0), \n    yend = lifeExp-c(5.5, 2)),\n  data = filter(gm_last, country %in% c('China', 'United States')),\n  size = 0.5\n  ) +\n  scale_x_continuous(labels = label_comma()) +\n  scale_color_manual(values = c('gray20', 'red', 'darkblue')) +\n  guides(colour = 'none') +\n  labs(y = \"Life Expectancy\", x = \"GDP/Capita\") +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_text(size=25)\n  )"
  },
  {
    "objectID": "02-data_visualization_page.html#do-not-use-pie-charts-just-dont",
    "href": "02-data_visualization_page.html#do-not-use-pie-charts-just-dont",
    "title": "Data Visualization",
    "section": "Do not use pie-charts… just don’t",
    "text": "Do not use pie-charts… just don’t\n\n\nCode\npenguins |&gt;\n  group_by(species) |&gt;\n  summarize(count = n()) |&gt;\nggplot(aes(x = \"\", y = count, fill = species)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Number of observations by species\",\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks=element_blank(),\n    axis.text=element_blank(),\n    axis.title=element_blank(),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_blank()\n  ) +\n  coord_polar(\"y\", start=0)"
  },
  {
    "objectID": "02-data_visualization_page.html#exercise-1",
    "href": "02-data_visualization_page.html#exercise-1",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\n\n\n\n\n\n\nPerceptual accuracy\n\n\n\n\nCreate a graph that shows the population of penguins for the different species per island\nIt is of particular interest which species is the most common on each island\nCreate another graph that shows the analysis separately for the two sexes"
  },
  {
    "objectID": "02-data_visualization_page.html#visualizing-many-categories-badly",
    "href": "02-data_visualization_page.html#visualizing-many-categories-badly",
    "title": "Data Visualization",
    "section": "Visualizing many categories (badly!)",
    "text": "Visualizing many categories (badly!)\n\nWhat is the 5th smallest state?\nWhere does MO rank in terms of size?\n\n\n\nCode\nlibrary(datasets)\nlibrary(scales)\nggplot(data.frame(abb = state.abb, area = state.area), aes(x = abb, y = area)) +\n  geom_bar(stat = 'identity') +\n  scale_x_discrete(guide = guide_axis(n.dodge = 2)) +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    labels = label_comma(suffix = \" sq mi\")) + \n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=20),\n    axis.title=element_text(size=30),\n    axis.title.x=element_blank()\n  )"
  },
  {
    "objectID": "02-data_visualization_page.html#visualizing-many-categories",
    "href": "02-data_visualization_page.html#visualizing-many-categories",
    "title": "Data Visualization",
    "section": "Visualizing many categories",
    "text": "Visualizing many categories\n\nWhat is the 5th smallest state?\nWhere does MO rank in terms of size?\n\n\n\nCode\nlibrary(colorspace)\nlibrary(forcats)\nstate_areas &lt;- data.frame(abb = state.abb, area = state.area, name = state.name) |&gt;\n  mutate(abb = fct_reorder(abb, area))\nggplot(state_areas, aes(x = abb, y = area, \n  color = abb == 'MO', fill = abb == 'MO')) +\n  geom_bar(stat = 'identity') +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)), breaks = seq(50000,600000, by = 100000),\n    labels = label_comma(suffix = \" sq mi\")) + \n  scale_color_manual(values = c('gray85', 'red')) +\n  scale_fill_manual(values = c('gray20', 'red')) +\n  geom_text(\n    aes(label=abb, y = area), \n    position=position_dodge(width=0.9), \n    vjust=-0.50, \n    color = ifelse(state_areas$abb=='MO', 'red', 'gray20'),\n    size = 8)+\n  labs(title = \"US state areas\") +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=45),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=35),\n    axis.text.x=element_blank(),\n    axis.title=element_blank(),\n    legend.position='none'\n  )"
  },
  {
    "objectID": "02-data_visualization_page.html#color-intensity-provides-less-accurate-encoding",
    "href": "02-data_visualization_page.html#color-intensity-provides-less-accurate-encoding",
    "title": "Data Visualization",
    "section": "Color intensity provides less accurate encoding",
    "text": "Color intensity provides less accurate encoding\n\n\nCode\nlibrary(maps)\nlibrary(sf)\nlibrary(colorspace)\nus_map_data &lt;- map(\"state\", fill=TRUE, plot =FALSE)\n\nusa &lt;- st_as_sf(map(\"state\", fill=TRUE, plot =FALSE))\nusa &lt;- merge(\n  usa, \n  mutate(state_areas, ID = str_to_lower(name)),\n  )\nggplot(usa) +\n  geom_sf(aes(fill = area), color = \"#2b2b2b\", size=0.125) +\n  coord_sf(crs = st_crs(6350)) +\n  geom_sf_text(aes(label = abb, color = abb == 'MO')) +\n  scale_color_manual(values = c('gray20', 'red')) +\n  guides(color = 'none') + \n  ggthemes::theme_map() +\n  scale_fill_binned_sequential(\n    palette = \"Heat\", \n    labels = label_comma(suffix = \" sq mi\") \n    )"
  },
  {
    "objectID": "02-data_visualization_page.html#colors-are-useful-to-mark-targets-for-preattentive-processing",
    "href": "02-data_visualization_page.html#colors-are-useful-to-mark-targets-for-preattentive-processing",
    "title": "Data Visualization",
    "section": "Colors are useful to mark targets for preattentive processing",
    "text": "Colors are useful to mark targets for preattentive processing\n\nLarge scale spatial data needs to be “projected” to 2D\nMost well known projection is 4326 measured in degrees latitude and longitude\nHowever, there are more accurate projections for specific regions e.g, 3035 for EU+candidates\n\n\n\nCode\n## Example using \"shapefile\"\n### e.g. for EU download here https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units/nuts\neu &lt;- st_read(\"data/NUTS_RG_60M_2021_3035.shp/\", quiet = TRUE)\neu0 &lt;- filter(eu, LEVL_CODE == 0)\n## Transform to longitude and latitude\neu0 &lt;- eu0 |&gt; st_transform(4326)\neu0_box &lt;- eu0 |&gt; st_bbox()\neu0_box &lt;- eu0_box + c(50, 20, 0, -10)\nggplot(st_crop(eu0, eu0_box))+ \n  geom_sf(fill = 'white', lwd = 1) +\n  geom_sf(data = filter(eu0, CNTR_CODE == 'AT'), color = 'red', lwd =1.5) + \n  coord_sf(crs = st_crs(3035)) +\n  geom_sf_text(aes(label = CNTR_CODE, color = CNTR_CODE == 'AT'), size = 15) +\n  scale_color_manual(values = c('gray20', 'red')) +\n  guides(color = 'none') + \n  ggthemes::theme_map(base_size = 12)"
  },
  {
    "objectID": "02-data_visualization_page.html#exercise-2",
    "href": "02-data_visualization_page.html#exercise-2",
    "title": "Data Visualization",
    "section": "Exercise",
    "text": "Exercise\n\n\n\n\n\n\nGeospacial data\n\n\n\n\nObtain the shape (“SHP”) file for the EU + candidates from Eurostat\nCrop the data to exclude overseas territories\nHighlight the “DACH” region"
  },
  {
    "objectID": "02-data_visualization_page.html#connectedness-helps-connecting-the-dots",
    "href": "02-data_visualization_page.html#connectedness-helps-connecting-the-dots",
    "title": "Data Visualization",
    "section": "“Connectedness” helps connecting the dots",
    "text": "“Connectedness” helps connecting the dots\n\n\nCode\ncharts &lt;- arrow::read_parquet(\n    \"data/chart_data/spotify_charts.parquet\")  |&gt; \n    filter(country %in% c(\"de\", \"fr\")) |&gt;\n    group_by(country, date) |&gt;\n    summarize(total_streams = sum(streams)) \ncharts |&gt;\n    ggplot(aes(x = date, y = log(total_streams))) +\n    geom_point(aes(color = country), size = 4) +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    scale_color_discrete_qualitative(palette = \"Dark 2\") +\n    theme_classic() +\n    labs(y = \"log(total streams)\", title = \"Total streams 2023/24\", subtitle = \"Top 200 songs\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        axis.title.x=element_blank(),\n        legend.position = 'top',\n        plot.title = element_text(size = 35),\n        plot.subtitle = element_text(size = 35)\n    )"
  },
  {
    "objectID": "02-data_visualization_page.html#connectedness-helps-connecting-the-dots-1",
    "href": "02-data_visualization_page.html#connectedness-helps-connecting-the-dots-1",
    "title": "Data Visualization",
    "section": "“Connectedness” helps connecting the dots",
    "text": "“Connectedness” helps connecting the dots\n\n\nCode\ncharts &lt;- arrow::read_parquet(\n    \"data/chart_data/spotify_charts.parquet\")  |&gt; \n    filter(country %in% c(\"de\", \"fr\")) |&gt;\n    group_by(country, date) |&gt;\n    summarize(total_streams = sum(streams)) \ncharts |&gt;\n    ggplot(aes(x = date, y = log(total_streams), color = country)) +\n    geom_point(size = 4) +\n    geom_line() +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    scale_color_discrete_qualitative(palette = \"Dark 2\") +\n    theme_classic() +\n    labs(y = \"log(total streams)\", title = \"Total streams 2023/24\", subtitle = \"Top 200 songs\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        axis.title.x=element_blank(),\n        legend.position = 'top',\n        plot.title = element_text(size = 35),\n        plot.subtitle = element_text(size = 35)\n    )"
  },
  {
    "objectID": "02-data_visualization_page.html#use-scatter-plots-to-show-correlation",
    "href": "02-data_visualization_page.html#use-scatter-plots-to-show-correlation",
    "title": "Data Visualization",
    "section": "Use scatter plots to show correlation",
    "text": "Use scatter plots to show correlation\n\n\nCode\npenguins |&gt;\nggplot(aes(x = bill_length_mm, y = bill_depth_mm, #color = species\n)) +\n    geom_point(size = 4) +\n    geom_smooth(method = 'lm', se = FALSE) +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    theme_classic() +\n    labs(y = \"Bill depth\", x = \"Bill length\") +\n    theme(\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n    )"
  },
  {
    "objectID": "02-data_visualization_page.html#beware-of-simpsons-paradox",
    "href": "02-data_visualization_page.html#beware-of-simpsons-paradox",
    "title": "Data Visualization",
    "section": "Beware of “Simpson’s Paradox”",
    "text": "Beware of “Simpson’s Paradox”\n\nWhen between-group correlation is the opposite of within-group correlation\n\n\n\nCode\npenguins |&gt;\nggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n    geom_point(size = 4) +\n    geom_smooth(method = 'lm', se = FALSE) +\n    guides(colour = guide_legend(override.aes = list(size=7))) +\n    theme_classic() +\n    labs(y = \"Bill depth\", x = \"Bill length\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        legend.position = 'top',\n    )"
  },
  {
    "objectID": "02-data_visualization_page.html#use-boxplots-to-show-distributions",
    "href": "02-data_visualization_page.html#use-boxplots-to-show-distributions",
    "title": "Data Visualization",
    "section": "Use Boxplots to show distributions",
    "text": "Use Boxplots to show distributions\n\n\nCode\npenguins |&gt;\nggplot(aes(\n  y = bill_length_mm, \n  x = fct_reorder(species, bill_length_mm, .fun = median, .na_rm = TRUE))) +\n    geom_boxplot(na.rm = TRUE) +\n    theme_classic() +\n    labs(y = \"Bill length\") +\n    theme(\n        legend.text = element_text(size = 35),\n        legend.title = element_blank(),\n        axis.text=element_text(size=35),\n        axis.title=element_text(size=35),\n        axis.title.x=element_blank(),\n        legend.position = 'top',\n    )"
  },
  {
    "objectID": "02-data_visualization_page.html#analyzing-dags-pipe",
    "href": "02-data_visualization_page.html#analyzing-dags-pipe",
    "title": "Data Visualization",
    "section": "Analyzing DAGs: Pipe",
    "text": "Analyzing DAGs: Pipe\nBad Control (possibly use mediation analysis)\n\n\nCode\nmed &lt;- dagify(z ~ x, y2 ~ z,\n       coords = list(x = c(x = 1, z = 1.5, y2 = 2), y = c(x=1, y2 = 1, z=1))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name == \"z\", \"Mediator\", \"variables of interest\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=7, aes(color = fill)) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"top\") \nmed\n\n\n\n\n\n\n\n\n\n\nx causes y through z\nControlling for z blocks the causal association x \\(\\rightarrow\\) y2"
  },
  {
    "objectID": "02-data_visualization_page.html#analyzing-dags-collider",
    "href": "02-data_visualization_page.html#analyzing-dags-collider",
    "title": "Data Visualization",
    "section": "Analyzing DAGs: Collider",
    "text": "Analyzing DAGs: Collider\nBad control\n\n\nCode\ndagify(a ~ x, a ~ y,\n  coords = list(x = c(x = 1, y = 2, a = 1.5), y = c(x = 1, y = 0,  a = 0))\n) |&gt;\n  tidy_dagitty() |&gt;\n  mutate(fill = ifelse(name == \"a\", \"Collider\", \"variables of interest\")) |&gt;\n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +\n  geom_dag_point(size = 7, aes(color = fill)) +\n  geom_dag_edges(show.legend = FALSE) +\n  geom_dag_text() +\n  theme_dag() +\n  theme(\n    legend.title = element_blank(),\n    legend.position = \"top\"\n  )\n\n\n\n\n\n\n\n\n\n\nx & y cause a\nx & y are d-separated and uncorrelated\nBy adding a to the model spurious correlation between x & y is introduced"
  },
  {
    "objectID": "02-data_visualization_page.html#analyzing-dags-fork",
    "href": "02-data_visualization_page.html#analyzing-dags-fork",
    "title": "Data Visualization",
    "section": "Analyzing DAGs: Fork",
    "text": "Analyzing DAGs: Fork\nGood Control\n\n\nCode\nmed &lt;- dagify( x ~ d, y1 ~ d,\n       coords = list(x = c(x = 1, z = 1.5, y = 2, a = 1.5, b = 2, d = 1.5, y1 = 2), \n                     y = c(x = 1, y = 1, z = 1, a = 0, b = 0, d = 2, y1 = 2))\n) %&gt;% \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name == \"d\", \"Confounder\", \"variables of interest\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=7, aes(color = fill)) + \n  geom_dag_edges(show.legend = FALSE)+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"top\") \nmed\n\n\n\n\n\n\n\n\n\n\nd causes both x and y1\nArrows pointing to x are called “back-door” paths\nControlling for d “blocks” the non-causal association x \\(\\rightarrow\\) y1\n\n. . .\n\nEliminated by randomized experiment! Why?"
  },
  {
    "objectID": "02-data_visualization_page.html#randomized-experiments",
    "href": "02-data_visualization_page.html#randomized-experiments",
    "title": "Data Visualization",
    "section": "Randomized experiments",
    "text": "Randomized experiments\n\nResearcher manipulates the variable of interest (x)\nHolding all other variables (confounders) constant\nTo check the “pure” causal effect of the manipulation on the relevant outcome (y)\nIntuition: variation in y has to be due to x as all other things are kept constant\n\n\n\nCode\nexper &lt;- dagify( x ~ d, y ~ d, y ~ x,\n       coords = list(x = c(x = 1, d = 1.5, y = 2), \n                     y = c(x = 0, d = 1, y = 0))\n) |&gt; \n  tidy_dagitty() %&gt;%\n  mutate(fill = ifelse(name == \"d\", \"Confounder\", \"variables of interest\")) %&gt;% \n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + \n  geom_dag_point(size=7, aes(color = fill)) + \n  geom_dag_edges(\n    show.legend = FALSE, \n    aes(\n      edge_color = ifelse(name == 'd', 'gray80', 'darkgreen'),\n      edge_linetype = ifelse(name == 'd', 'dashed', 'solid')\n      ))+\n  geom_dag_text() +\n  theme_dag() +\n  theme(legend.title  = element_blank(),\n        legend.position = \"top\") +\n  geom_text(aes(x = 1.5, y = 1, label = '← kept constant'), hjust = -0.3)\nexper"
  },
  {
    "objectID": "02-data_visualization_page.html#notes-on-choosing-a-model",
    "href": "02-data_visualization_page.html#notes-on-choosing-a-model",
    "title": "Data Visualization",
    "section": "Notes on choosing a model",
    "text": "Notes on choosing a model\n\nOften models assume a distribution of the error term\n\ne.g., linear regression: normal distribution\n\nWe can choose a model based on its assumptions\n\ne.g., continuous data: linear regression\ne.g., binary data: logistic regression\n\nSpecialized methods for dependent observations\n\ne.g., paired t-test \\(\\rightarrow\\) test on difference of within-subject design\n\nSpecialized methods for violations of assumptions\n\ne.g., Wilcoxon signed-rank test as alternative to t-test"
  },
  {
    "objectID": "02-data_visualization_page.html#visualizing-uncertainty-simple-experiments",
    "href": "02-data_visualization_page.html#visualizing-uncertainty-simple-experiments",
    "title": "Data Visualization",
    "section": "Visualizing Uncertainty: Simple experiments",
    "text": "Visualizing Uncertainty: Simple experiments\n\n\n\nOutputs from statistical models should generally include:\n\nEffect size\nTest statistic calculated (incl. paramters) & p-value\nIt is typical to include an interpretation of significance\nHowever, this is not recommended by statistical community. Wasserstein, Schirm, and Lazar (2019):\n\n\n\n“if p = 0.03 then “…was statistically significant” would be replaced by “…had p = 0.03,””\n\n\nThe ggstatsplot library (Patil 2021) provides useful functions to calculate and visualize statistical tests and model parameters\nFollows best practices\nggbetweenstats & ggwithinstats for between- and within-subject experimental designs\n\nChooses automatically between t-test (2 groups) and ANOVA (3+ groups)\nLarge number of tests available\nChoose type='nonparametric' for versions that are robust to violations of the normal-distribution assumption\nChoose type='robust' for versions that are robust to a few outliers\n\n\n\n\n\nCode\nlibrary(ggstatsplot)\nlibrary(palmerpenguins)\nggbetweenstats(\n  data = penguins,\n  x = species,\n  y = body_mass_g,\n  type = 'nonparametric',\n  violin.args = list(width = 0, linewidth=0),\n  point.args = list(alpha = 0),\n  bf.message = FALSE\n) + labs(y = \"body mass\")"
  },
  {
    "objectID": "02-data_visualization_page.html#visualizing-uncertainty-regression-models",
    "href": "02-data_visualization_page.html#visualizing-uncertainty-regression-models",
    "title": "Data Visualization",
    "section": "Visualizing uncertainty: Regression models",
    "text": "Visualizing uncertainty: Regression models\n\nUse the ggcoefstats function to visualize the results of (currently) \\(225\\) different types of regression models\n\n\n\nCode\nggcoefstats(\n  lm(body_mass_g ~ species + sex, data = penguins)\n) + labs(caption = 'Error bars show 95% confidence interval')"
  },
  {
    "objectID": "02-data_visualization_page.html#visualizing-uncertainty-regression-models-1",
    "href": "02-data_visualization_page.html#visualizing-uncertainty-regression-models-1",
    "title": "Data Visualization",
    "section": "Visualizing uncertainty: Regression models",
    "text": "Visualizing uncertainty: Regression models\n\nCoefficient names can be modified by providing a data.frame with the relevant statistics instead of the model\n\n\n\nCode\nbody_mass_mod &lt;- lm(body_mass_g ~ species + sex, data = penguins)\ntidy_coefs &lt;- broom::tidy(body_mass_mod)\ntidy_coefs$df.error &lt;- body_mass_mod$df.residual\ntidy_coefs &lt;- confint(body_mass_mod) |&gt; \n  data.frame() |&gt; \n  dplyr::rename(conf.low = 'X2.5..', conf.high = 'X97.5..') |&gt;\n  cbind(tidy_coefs) |&gt;\n  mutate(term = str_replace_all(\n    term, c(\n      sexmale = \"male (vs. female)\",\n      speciesGentoo = \"Gentoo (vs. Adelie)\",\n      speciesChinstrap = \"Chinstrap (vs. Adelie)\"\n    )))\nggcoefstats(\n  tidy_coefs, \n  statistic = 't',\n  exclude.intercept = TRUE\n  ) + \n  labs(title = 'DV: body mass (g)', caption = 'Intercept omitted; error bars show 95% confidence interval') +\n  scale_x_continuous(labels = label_number(suffix = 'g')) +\n  theme(axis.title.y = element_blank())"
  },
  {
    "objectID": "02-data_visualization_page.html#a-few-notes-on-colors",
    "href": "02-data_visualization_page.html#a-few-notes-on-colors",
    "title": "Data Visualization",
    "section": "A few notes on colors",
    "text": "A few notes on colors\n\nThe library(colorspace) has convenient functions for picking correct color patterns\nPalette type depends on the scaling of the data visualized\n\nIs the data discrete or continuous?\nIs there an ordering?\n\nIs the ordering diverging (i.e., there is a neutral state)?\n\n\nThere are convenience functions for ggplot\n\nscale_&lt;aesthetic&gt;_&lt;datatype&gt;_&lt;colorscale&gt;()\n\naesthetics: fill, color\ndatatypes: discrete, continuous, binned\ncolorscales: qualitative, sequential, diverging"
  },
  {
    "objectID": "02-data_visualization_page.html#diverging-colors-correlation-matrix",
    "href": "02-data_visualization_page.html#diverging-colors-correlation-matrix",
    "title": "Data Visualization",
    "section": "Diverging colors: correlation matrix",
    "text": "Diverging colors: correlation matrix\n\nDiverging from -1 to 1 with 0 as a neutral point\n\n\ncorrs &lt;- palmerpenguins::penguins |&gt; \n  drop_na() |&gt; \n  select(bill_length_mm, bill_depth_mm, flipper_length_mm) |&gt;\n  cor()\ncor_df &lt;- data.frame(cor = c(corrs), var1 = factor(col(corrs)), var2 = factor(row(corrs)))\nggplot(cor_df, aes(var1, var2, fill = cor)) + \n  geom_tile() + \n  coord_fixed() +\n  ylab(\"variable\") +\n  scale_x_discrete(position = \"top\", name = \"variable\") +\n  scale_fill_continuous_diverging(\"Blue-Red 3\")"
  },
  {
    "objectID": "02-data_visualization_page.html#qualitative-colors-unordered-groups",
    "href": "02-data_visualization_page.html#qualitative-colors-unordered-groups",
    "title": "Data Visualization",
    "section": "Qualitative colors: Unordered groups",
    "text": "Qualitative colors: Unordered groups\n\nRule of thumb: visualize up to 7 groups with colors\nMore become hard to differentiate\n\n\nggplot(penguins, \n  aes(x = fct_revfreq(species), \n      color = sex, fill = sex)) +\n  geom_bar(stat = \"count\", position = 'dodge') +\n  scale_fill_discrete_qualitative(\"pastel 1\") +\n  scale_y_continuous(\n    expand = expansion(c(0,0.05)),\n    breaks = seq(10,150, by = 20)) + \n  labs(\n    title = \"Number of observations by species and sex\",\n    x = \"Penguin Species\"\n    ) +\n  theme_bw() +\n    theme(\n    plot.title=element_text(size=35),\n    axis.ticks.x=element_blank(),\n    axis.text=element_text(size=30),\n    axis.title=element_text(size=30),\n    legend.position='top',\n    legend.text=element_text(size=25),\n    legend.title=element_blank()\n  )"
  },
  {
    "objectID": "02-data_visualization_page.html#color-vision-deficiency",
    "href": "02-data_visualization_page.html#color-vision-deficiency",
    "title": "Data Visualization",
    "section": "Color Vision Deficiency",
    "text": "Color Vision Deficiency\n\n~8% of men and ~0.5% of women have color vision deficiency (CVD) (“color blindness”)\nWe can simulate CVD using swatchplot(&lt;palette&gt;, cvd = TRUE)\n\n\nswatchplot(diverging_hcl(7, 'Red-Green'), cvd = TRUE)"
  },
  {
    "objectID": "01-introduction_to_r.html#why-r",
    "href": "01-introduction_to_r.html#why-r",
    "title": "Introduction to R",
    "section": "Why R?",
    "text": "Why R?\n\nWell established in business and scientific computing\nVery powerful language\n\nExpress any operation in terms of\nOften complex functions are already implemented\n\n\nVery good package manager and ecosystem\n\nWe will use many tools created by companies, universities, and other R community members\n\n\nVery good for reproducibility\n\nCode documents the process\nShould run the same on my and your machine\nShould be easily adaptable to changing data\n\n\nOpen source\n\nAll packages can be inspected\nFree to install and use on any computer\n\n\nDeveloped (partly) and hosted at WU 😋"
  },
  {
    "objectID": "01-introduction_to_r.html#what-do-we-need",
    "href": "01-introduction_to_r.html#what-do-we-need",
    "title": "Introduction to R",
    "section": "What do we need?",
    "text": "What do we need?\n\n\n\nThe R interpreter\n\nThe program that “interprets” R code and runs it\nVery bare-bones, essentially just a text field\nDoes not store code files for reproducibility\n\n\n\n\nprint(\"Hello, WU!\")\n\n\n\n[1] \"Hello, WU!\"\n\npaste0(\"One plus two is: \", 1 + 2)\n\n[1] \"One plus two is: 3\"\n\nc &lt;- data.frame(p = seq(0, 2 * pi, by = 0.001))\nc$h_x &lt;- 16 * sin(c$p)^3\nc$h_y &lt;- 13 * cos(c$p) - 5 * cos(2 * c$p) - 2 * cos(3 * c$p) - cos(4 * c$p)\nplot(c$h_x, c$h_y, type = \"l\", main = \"I &lt;3 R\", frame = F, xlab = NA, ylab = NA)\n\n\n\n\n\n\n\n\n\nAn Integrated Development Environment (IDE)\n\nMakes writing and storing R code easier (more fun!)\nThree options compatible with this course:\n\n\nR Studio Desktop (Recommended)\n\nFocused on R\nEasiest option\n\n\n\nVS Code\n\nRecommended if you (plan to) use other languages (Python, C++, Julia, etc.)\nNeeds extension for R but works well\n\n\n\nJupyterLab\n\n“Notebooks” for R, Python, and Julia\nOutput generated directly under code “cells”"
  },
  {
    "objectID": "01-introduction_to_r.html#if-you-already-know-r",
    "href": "01-introduction_to_r.html#if-you-already-know-r",
    "title": "Introduction to R",
    "section": "If you already know R",
    "text": "If you already know R\n\n\n\nMy favorite R package\n\n\n\nDownload the presentation template my_favorite_r_package.qmd and the bibliography file data_literacy.bib from Canvas\nSelect a package that was useful to you in the past\nPrepare a short presentation about the package\n\nInclude examples of how to use the package\nShow in which situations that is useful"
  },
  {
    "objectID": "01-introduction_to_r.html#basic-workflow-r-studio",
    "href": "01-introduction_to_r.html#basic-workflow-r-studio",
    "title": "Introduction to R",
    "section": "Basic Workflow (R Studio)",
    "text": "Basic Workflow (R Studio)\n\n\nCtrl + Enter to run current line of code (any cursor position)"
  },
  {
    "objectID": "01-introduction_to_r.html#basic-workflow-vs-code",
    "href": "01-introduction_to_r.html#basic-workflow-vs-code",
    "title": "Introduction to R",
    "section": "Basic Workflow (VS Code)",
    "text": "Basic Workflow (VS Code)\n\n\nCtrl + Enter to run current line of code (any cursor position)"
  },
  {
    "objectID": "01-introduction_to_r.html#r-syntax-comments-assignment",
    "href": "01-introduction_to_r.html#r-syntax-comments-assignment",
    "title": "Introduction to R",
    "section": "R Syntax: comments, assignment",
    "text": "R Syntax: comments, assignment\n\n# This is a comment\nprint(\"Hi\") # also a comment\n\n[1] \"Hi\"\n\n## Assignment of varibale names\nx &lt;- 1\nx\n\n[1] 1\n\n## Missing values\nNA\n\n[1] NA\n\n## Vectors\ny &lt;- c(1, 2, 3, NA)\ny\n\n[1]  1  2  3 NA"
  },
  {
    "objectID": "01-introduction_to_r.html#functions",
    "href": "01-introduction_to_r.html#functions",
    "title": "Introduction to R",
    "section": "Functions",
    "text": "Functions\n\n## built-in\nsum(y)\n\n[1] NA\n\nsum(y, na.rm = FALSE)\n\n[1] NA\n\nsum(y, na.rm = TRUE)\n\n[1] 6\n\n## User functions\na_plus_b &lt;- function(a, b = 1) {\n    return(a + b)\n}\na_plus_b(y)\n\n[1]  2  3  4 NA\n\na_plus_b(y, 2)\n\n[1]  3  4  5 NA\n\na_plus_b(b = 2, a = y)\n\n[1]  3  4  5 NA\n\n## Functions provided by packages\n## Installation\n#install.packages(\"ineq\")\nineq::Gini(y)\n\n[1] 0.2222222\n\n## or\nlibrary(ineq)\nGini(y)\n\n[1] 0.2222222\n\n## Help \n?Gini"
  },
  {
    "objectID": "01-introduction_to_r.html#r-syntax-indexing-logic",
    "href": "01-introduction_to_r.html#r-syntax-indexing-logic",
    "title": "Introduction to R",
    "section": "R Syntax: indexing, logic",
    "text": "R Syntax: indexing, logic\n\ny[1]\n\n[1] 1\n\ny[-1]\n\n[1]  2  3 NA\n\ny[2:3]\n\n[1] 2 3\n\ny[c(1, 3, 4)]\n\n[1]  1  3 NA\n\nset.seed(1)\nx &lt;- y / 2 + rnorm(length(y))\ncbind(y, x)\n\n      y          x\n[1,]  1 -0.1264538\n[2,]  2  1.1836433\n[3,]  3  0.6643714\n[4,] NA         NA\n\ny &gt; 2\n\n[1] FALSE FALSE  TRUE    NA\n\ny &gt; 2 & x &gt; 0\n\n[1] FALSE FALSE  TRUE    NA\n\ny &gt; 2 | x &gt; 0\n\n[1] FALSE  TRUE  TRUE    NA\n\ny[y &gt; 2 | x &gt; 0]\n\n[1]  2  3 NA"
  },
  {
    "objectID": "01-introduction_to_r.html#r-syntax-loops-ranges",
    "href": "01-introduction_to_r.html#r-syntax-loops-ranges",
    "title": "Introduction to R",
    "section": "R Syntax: loops, ranges",
    "text": "R Syntax: loops, ranges\n\n## 'elem' is a temporary variable\nfor (elem in y) {\n    print(paste(\"Current y value is:\", elem))\n}\n\n[1] \"Current y value is: 1\"\n[1] \"Current y value is: 2\"\n[1] \"Current y value is: 3\"\n[1] \"Current y value is: NA\"\n\n## 'seq_along' returns a vector which indexes the argument\nfor (i in seq_along(y)) {\n    print(paste(\"Current y value is:\", y[i]))\n}\n\n[1] \"Current y value is: 1\"\n[1] \"Current y value is: 2\"\n[1] \"Current y value is: 3\"\n[1] \"Current y value is: NA\"\n\n## set.seed guarantees the same random numbers every time\nset.seed(1)\ntotal &lt;- 0\nwhile (total &lt; 1) {\n    ## runif generates random numbers between 0 and 1\n    total &lt;- total + runif(1)\n    print(paste(\"Current total value is:\", total))\n}\n\n[1] \"Current total value is: 0.2655086631421\"\n[1] \"Current total value is: 0.63763256277889\"\n[1] \"Current total value is: 1.21048592613079\"\n\n## ranges\n1:3\n\n[1] 1 2 3\n\n10:3\n\n[1] 10  9  8  7  6  5  4  3\n\nseq(3, 11, by = 2)\n\n[1]  3  5  7  9 11"
  },
  {
    "objectID": "01-introduction_to_r.html#r-syntax-conditional-logic",
    "href": "01-introduction_to_r.html#r-syntax-conditional-logic",
    "title": "Introduction to R",
    "section": "R Syntax: conditional logic",
    "text": "R Syntax: conditional logic\n\nz &lt;- -2:3\nfor (x in z) {\n  print(paste(\"x =\", x))\n    if (x &gt; 0) {\n        print(\"x is positive\")\n    } else if (x &gt; 2) {\n        print(\"x is greater than 2\")\n    } else if (x &lt; 0) {\n        print(\"x is negative\")\n    } else if (x == 0) {\n        print(\"x is zero\")\n    }\n}\n\n[1] \"x = -2\"\n[1] \"x is negative\"\n[1] \"x = -1\"\n[1] \"x is negative\"\n[1] \"x = 0\"\n[1] \"x is zero\"\n[1] \"x = 1\"\n[1] \"x is positive\"\n[1] \"x = 2\"\n[1] \"x is positive\"\n[1] \"x = 3\"\n[1] \"x is positive\"\n\nz[z &lt;= 0]\n\n[1] -2 -1  0\n\nz[z &gt;= 0]\n\n[1] 0 1 2 3\n\nz[z != 0]\n\n[1] -2 -1  1  2  3\n\nz[! z &lt; 0]\n\n[1] 0 1 2 3"
  },
  {
    "objectID": "01-introduction_to_r.html#exercise",
    "href": "01-introduction_to_r.html#exercise",
    "title": "Introduction to R",
    "section": "Exercise",
    "text": "Exercise\n\n\n\nWrite your own function\n\n\n\nThe function should take two arguments a and b\n\nFirst, check if a and b have the same number of elements (see ?length)\n\nIf they have a different number of elements, return NA\n\n\n\nIterate over the elements of a and b and check which vector’s element is larger (or if they are equal)\nIf they are equal print the index of the element and “equal”\nIf the element in a is larger print the index of the elemnt and “a larger”\nIf the element in b is larger print the index of the elemnt and “b larger”\n\n\n\n\nExample 1\n\n\na is: 1 2 3 \n\n\nb is: 1 2 3 4 \n\n\nResult:\n\n\n[1] NA\n\n\nExample 2\n\n\na is: 1 2 3 \n\n\nb is: 0 2 4 \n\n\nResult:\n\n\n[1] \"1 a larger\"\n\n\n[1] \"2 equal\"\n\n\n[1] \"3 b larger\""
  },
  {
    "objectID": "01-introduction_to_r.html#rectangular-data-frames-creation-and-access",
    "href": "01-introduction_to_r.html#rectangular-data-frames-creation-and-access",
    "title": "Introduction to R",
    "section": "Rectangular data frames: creation and access",
    "text": "Rectangular data frames: creation and access\n\ndata &lt;- data.frame(x = -1:1, y = 3:1, z = c(\"a\", \"b\", NA))\ndata\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;\n\nclass(data)\n\n[1] \"data.frame\"\n\n## Variable access\ndata$x\n\n[1] -1  0  1\n\ndata$x + data$y\n\n[1] 2 2 2\n\nrow_summaries &lt;- with(data, \n  data.frame(\n    rsum = x + y,\n    rdiff = x - y\n  ))\nrow_summaries\n\n  rsum rdiff\n1    2    -4\n2    2    -2\n3    2     0"
  },
  {
    "objectID": "01-introduction_to_r.html#rectangular-data-frames-overview",
    "href": "01-introduction_to_r.html#rectangular-data-frames-overview",
    "title": "Introduction to R",
    "section": "Rectangular data frames: overview",
    "text": "Rectangular data frames: overview\n\nstr(data)\n\n'data.frame':   3 obs. of  3 variables:\n $ x: int  -1 0 1\n $ y: int  3 2 1\n $ z: chr  \"a\" \"b\" NA\n\nsummary(data)\n\n       x              y            z            \n Min.   :-1.0   Min.   :1.0   Length:3          \n 1st Qu.:-0.5   1st Qu.:1.5   Class :character  \n Median : 0.0   Median :2.0   Mode  :character  \n Mean   : 0.0   Mean   :2.0                     \n 3rd Qu.: 0.5   3rd Qu.:2.5                     \n Max.   : 1.0   Max.   :3.0                     \n\nhead(data)\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#rectangular-data-frames-indexing",
    "href": "01-introduction_to_r.html#rectangular-data-frames-indexing",
    "title": "Introduction to R",
    "section": "Rectangular data frames: Indexing",
    "text": "Rectangular data frames: Indexing\n\n## 2D structure of data\n## Empty argument means \"all\"#| \ndata[, c(\"x\", \"y\")]\n\n   x y\n1 -1 3\n2  0 2\n3  1 1\n\ndata[1:3, c(\"x\", \"y\")]\n\n   x y\n1 -1 3\n2  0 2\n3  1 1\n\ndata[1, ]\n\n   x y z\n1 -1 3 a\n\ndata[c(1, 3), c(\"x\", \"z\")]\n\n   x    z\n1 -1    a\n3  1 &lt;NA&gt;\n\ndata[data$x &lt; 3,]\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#rectangular-data-adding-and-removing-variables",
    "href": "01-introduction_to_r.html#rectangular-data-adding-and-removing-variables",
    "title": "Introduction to R",
    "section": "Rectangular data: adding and removing variables",
    "text": "Rectangular data: adding and removing variables\n\n## new data has to have the same number of elements\ndata$a &lt;- 2 * data$x\ndata\n\n   x y    z  a\n1 -1 3    a -2\n2  0 2    b  0\n3  1 1 &lt;NA&gt;  2\n\ndata$b &lt;- c(\"one\", \"two\", \"three\")\ndata\n\n   x y    z  a     b\n1 -1 3    a -2   one\n2  0 2    b  0   two\n3  1 1 &lt;NA&gt;  2 three\n\ndata$x &lt;- NULL\ndata\n\n  y    z  a     b\n1 3    a -2   one\n2 2    b  0   two\n3 1 &lt;NA&gt;  2 three\n\ndata$a &lt;- log(data$a)\ndata\n\n  y    z         a     b\n1 3    a       NaN   one\n2 2    b      -Inf   two\n3 1 &lt;NA&gt; 0.6931472 three\n\ndata$b[data$b == \"two\"] &lt;- \"TWO!\"\ndata$z[is.na(data$z)] &lt;- \"c\"\ndata$a[is.nan(data$a)] &lt;- 0\ndata\n\n  y z         a     b\n1 3 a 0.0000000   one\n2 2 b      -Inf  TWO!\n3 1 c 0.6931472 three"
  },
  {
    "objectID": "01-introduction_to_r.html#exercise-1",
    "href": "01-introduction_to_r.html#exercise-1",
    "title": "Introduction to R",
    "section": "Exercise",
    "text": "Exercise\n\n\n\nGenerate your own data\n\n\n\nLook at the helpfiles of rnorm, runif, and ifelse\n\nCreate a data.frame with 10 rows and variables x, generated using runif and y, generated using rnorm\n\nAdd variable z which takes the value 1 if x is larger than y and 0 otherwise\nCreate a second data.frame that holds the rows of the original one for which z == 1 is TRUE.\nRemove column z from the second data.frame\n\nWhat happens if you try to create a data.frame when x and y have a differnent number of elements?\nWhat happens if you run the code you wrote for this exercise again (and again)?\nHow can you ensure that each run yields the same results?"
  },
  {
    "objectID": "01-introduction_to_r.html#reading-data",
    "href": "01-introduction_to_r.html#reading-data",
    "title": "Introduction to R",
    "section": "Reading data",
    "text": "Reading data\n\nPlease download & unzip the folder found in “data” in Canvas\nWe will first use the “penguins” folder which includes the penguins_raw data set in multiple file formats\n\n\n## CSV\npenguins_raw &lt;- readr::read_csv(\"data/penguins/penguins_raw.csv\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n  ...1     studyName `Sample Number` Species Region Island Stage `Individual ID`\n  &lt;chr&gt;    &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 # this … &lt;NA&gt;                   NA &lt;NA&gt;    &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  &lt;NA&gt;           \n2 1        PAL0708                 1 Adelie… Anvers Torge… Adul… N1A1           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n\n\n\npenguins_raw[1,1]\n\n# A tibble: 1 × 1\n  ...1                                              \n  &lt;chr&gt;                                             \n1 # this is a comment making the data harder to read\n\n\n\n\n\nFix the data\n\n\n\nThe second row (after the column names) in the penguins_raw.csv file is a comment\nLook at the help file for the readr::read_csv function (?readr::read_csv)\nHow can we ignore the comment row?"
  },
  {
    "objectID": "01-introduction_to_r.html#reading-data-solution",
    "href": "01-introduction_to_r.html#reading-data-solution",
    "title": "Introduction to R",
    "section": "Reading data: solution",
    "text": "Reading data: solution\n\n## CSV\npenguins_raw &lt;- readr::read_csv(\n  \"data/penguins/penguins_raw.csv\",\n  comment = \"#\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n   ...1 studyName `Sample Number` Species    Region Island Stage `Individual ID`\n  &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1     1 PAL0708                 1 Adelie Pe… Anvers Torge… Adul… N1A1           \n2     2 PAL0708                 2 Adelie Pe… Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\npenguins_raw[1,1]\n\n# A tibble: 1 × 1\n   ...1\n  &lt;dbl&gt;\n1     1\n\nstr(penguins_raw)\n\nspc_tbl_ [344 × 18] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ...1               : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ studyName          : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ Sample Number      : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ Species            : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ Region             : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ Island             : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ Stage              : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ Individual ID      : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ Clutch Completion  : chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ Date Egg           : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ Culmen Length (mm) : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ Culmen Depth (mm)  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ Flipper Length (mm): num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ Body Mass (g)      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ Sex                : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ Delta 15 N (o/oo)  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ Delta 13 C (o/oo)  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ Comments           : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ...1 = col_double(),\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#reading-data-other-file-formats",
    "href": "01-introduction_to_r.html#reading-data-other-file-formats",
    "title": "Introduction to R",
    "section": "Reading data: other file formats",
    "text": "Reading data: other file formats\n\nThe readxl package provides functions for reading Excel files\n\n\npenguins_raw &lt;- readxl::read_excel(\"data/penguins/penguins_raw.xlsx\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n  ...1  studyName `Sample Number` Species    Region Island Stage `Individual ID`\n  &lt;chr&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 1     PAL0708                 1 Adelie Pe… Anvers Torge… Adul… N1A1           \n2 2     PAL0708                 2 Adelie Pe… Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;dttm&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n## Read a subset \npenguins_subset &lt;- readxl::read_excel(\"data/penguins/penguins_raw.xlsx\", sheet = \"Sheet1\", range = \"B1:O345\")\nhead(penguins_subset, 2)\n\n# A tibble: 2 × 14\n  studyName `Sample Number` Species          Region Island Stage `Individual ID`\n  &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 PAL0708                 1 Adelie Penguin … Anvers Torge… Adul… N1A1           \n2 PAL0708                 2 Adelie Penguin … Anvers Torge… Adul… N1A2           \n# ℹ 7 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;dttm&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#reading-data-other-file-formats-1",
    "href": "01-introduction_to_r.html#reading-data-other-file-formats-1",
    "title": "Introduction to R",
    "section": "Reading data: other file formats",
    "text": "Reading data: other file formats\n\nThe haven package provides functions for reading SPSS, Stata, and SAS files\nIt looks like SPSS does not support spaces in column names so this is slightly different\n\n\npenguins_raw &lt;- haven::read_sav(\"data/penguins/penguins_raw.sav\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#reading-big-data-the-arrow-package",
    "href": "01-introduction_to_r.html#reading-big-data-the-arrow-package",
    "title": "Introduction to R",
    "section": "Reading big data: the arrow package",
    "text": "Reading big data: the arrow package\n\nThe arrow package provides functions for reading Parquet and Feather files\nOptimized formats used in many data science projects\nProvides facility to read from “object storage” (e.g., Amazon S3)\n\n\nThe major benefits of object storage are the virtually unlimited scalability and the lower cost of storing large volumes of data for use cases such as data lakes, cloud native applications, analytics, log files, and machine learning (ML). 1\n\n\nRule of thumb:\n\nuse parquet for large files and long term storage\n\noptimized file size\n\n\nuse feather for optimized reading and short term storage\n\nmemory layout the same as in the process\n\n\n\n\nhttps://aws.amazon.com/what-is/object-storage/"
  },
  {
    "objectID": "01-introduction_to_r.html#reading-big-data-the-arrow-package-1",
    "href": "01-introduction_to_r.html#reading-big-data-the-arrow-package-1",
    "title": "Introduction to R",
    "section": "Reading big data: the arrow package",
    "text": "Reading big data: the arrow package\n\npenguins_raw &lt;- arrow::read_parquet(\"data/penguins/penguins_raw.parquet\")\npenguins_raw &lt;- arrow::read_feather(\"data/penguins/penguins_raw.feather\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 17\n  studyName `Sample Number` Species          Region Island Stage `Individual ID`\n  &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 PAL0708                 1 Adelie Penguin … Anvers Torge… Adul… N1A1           \n2 PAL0708                 2 Adelie Penguin … Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n\n\nSupport for complex data structures\n\n\npenguin_species_island &lt;- arrow::read_parquet('data/penguins/penguin_species_nested.parquet')\nhead(penguin_species_island, 2)\n\n# A tibble: 2 × 2\n  Island                                 data\n  &lt;chr&gt;     &lt;list&lt;tbl_df&lt;Species:character&gt;&gt;&gt;\n1 Torgersen                          [52 × 1]\n2 Biscoe                            [168 × 1]\n\nhead(tidyr::unnest(penguin_species_island), 2)\n\n# A tibble: 2 × 2\n  Island    Species                            \n  &lt;chr&gt;     &lt;chr&gt;                              \n1 Torgersen Adelie Penguin (Pygoscelis adeliae)\n2 Torgersen Adelie Penguin (Pygoscelis adeliae)"
  },
  {
    "objectID": "01-introduction_to_r.html#benchmarks",
    "href": "01-introduction_to_r.html#benchmarks",
    "title": "Introduction to R",
    "section": "Benchmarks",
    "text": "Benchmarks\n\nlibrary(microbenchmark)\nmicrobenchmark(\n  csv = readr::read_csv(\"data/penguins/penguins_raw.csv\", \n   show_col_types = FALSE, name_repair = 'minimal'),\n  parquet = arrow::read_parquet(\"data/penguins/penguins_raw.parquet\"),\n  feather = arrow::read_feather(\"data/penguins/penguins_raw.feather\")\n) \n\nUnit: milliseconds\n    expr      min       lq     mean   median       uq       max neval cld\n     csv 7.580162 7.773477 8.264633 7.965357 8.229950 11.452243   100 a  \n parquet 1.718105 1.842602 1.945262 1.902420 1.967815  4.662397   100  b \n feather 1.257880 1.367883 1.494972 1.427620 1.503081  4.279211   100   c"
  },
  {
    "objectID": "01-introduction_to_r.html#data-types",
    "href": "01-introduction_to_r.html#data-types",
    "title": "Introduction to R",
    "section": "Data types",
    "text": "Data types\nThe most important types of data are:\n\n\n\n\n\n\nData type\nDescription\n\n\n\nNumeric\nApproximations of the real numbers, \\(\\normalsize\\mathbb{R}\\) (e.g., mileage a car gets: 23.6, 20.9, etc.)\n\n\nInteger\nWhole numbers, \\(\\normalsize\\mathbb{Z}\\) (e.g., number of sales: 7, 0, 120, 63, etc.)\n\n\nCharacter\nText data (strings, e.g., product names)\n\n\nFactor\nCategorical data for classification (e.g., product groups)\n\n\nLogical\nTRUE, FALSE\n\n\nDate\nDate variables (e.g., sales dates: 21-06-2015, 06-21-15, 21-Jun-2015, etc.)\n\n\n\nVariables can be converted from one type to another using the appropriate functions (e.g., as.numeric(), as.integer(), as.character(), as.factor(), as.logical(), as.Date())."
  },
  {
    "objectID": "01-introduction_to_r.html#lets-clean-up-the-penguins",
    "href": "01-introduction_to_r.html#lets-clean-up-the-penguins",
    "title": "Introduction to R",
    "section": "Let’s clean up the penguins!",
    "text": "Let’s clean up the penguins!\n\nstr(penguins_raw)\n\ntibble [344 × 17] (S3: tbl_df/tbl/data.frame)\n $ studyName          : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ Sample Number      : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ Species            : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ Region             : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ Island             : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ Stage              : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ Individual ID      : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ Clutch Completion  : chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ Date Egg           : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ Culmen Length (mm) : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ Culmen Depth (mm)  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ Flipper Length (mm): num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ Body Mass (g)      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ Sex                : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ Delta 15 N (o/oo)  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ Delta 13 C (o/oo)  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ Comments           : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n\n\n\nClean the column names\n\n\npenguins &lt;- janitor::clean_names(penguins_raw)\nstr(penguins)\n\ntibble [344 × 17] (S3: tbl_df/tbl/data.frame)\n $ study_name       : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ sample_number    : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ species          : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ region           : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ island           : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ stage            : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ individual_id    : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ clutch_completion: chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ date_egg         : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ culmen_length_mm : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ culmen_depth_mm  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ sex              : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ delta_15_n_o_oo  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ delta_13_c_o_oo  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ comments         : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )"
  },
  {
    "objectID": "01-introduction_to_r.html#data-preprocessing-syntax",
    "href": "01-introduction_to_r.html#data-preprocessing-syntax",
    "title": "Introduction to R",
    "section": "Data-preprocessing: syntax",
    "text": "Data-preprocessing: syntax\n\n\n|&gt; is the “pipe” operator\n\nIt takes the result of the left side and passes it to the right side as the first argument\nVery useful when “chaining” multiple operations\n\n\n\n\npenguins |&gt;\n  head(2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;\n\nhead(penguins, 2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#data-preprocessing-mutation",
    "href": "01-introduction_to_r.html#data-preprocessing-mutation",
    "title": "Introduction to R",
    "section": "Data preprocessing: mutation",
    "text": "Data preprocessing: mutation\n\nPkg: dplyr provides function for data.frame manipulation\nPkg: stringr provides functions to manipulate strings (characters)\nfn: mutate takes each row and applies a function to create a new (or overwrite a) column\n\nfn: select selects columns\n\n\nlibrary(dplyr)\nlibrary(stringr)\npenguins_subset &lt;- penguins |&gt;\n  mutate(\n    species = str_split(species, \" \", n = 2, simplify = TRUE)[,1],\n    is_adult = str_detect(str_to_lower(stage), \"adult\"),\n    is_female = str_detect(str_to_lower(sex), \"female\"),\n    sex = str_to_lower(sex)) |&gt;\n  select(species, island, sex, is_adult,  culmen_length_mm, culmen_depth_mm, is_female)\npenguins_subset |&gt; head(2)\n\n# A tibble: 2 × 7\n  species island    sex    is_adult culmen_length_mm culmen_depth_mm is_female\n  &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;  &lt;lgl&gt;               &lt;dbl&gt;           &lt;dbl&gt; &lt;lgl&gt;    \n1 Adelie  Torgersen male   TRUE                 39.1            18.7 FALSE    \n2 Adelie  Torgersen female TRUE                 39.5            17.4 TRUE"
  },
  {
    "objectID": "01-introduction_to_r.html#data-preprocessing-multiple-columns",
    "href": "01-introduction_to_r.html#data-preprocessing-multiple-columns",
    "title": "Introduction to R",
    "section": "Data preprocessing: multiple columns",
    "text": "Data preprocessing: multiple columns\n\n#penguins_subset &lt;- \npenguins_subset &lt;- penguins_subset |&gt;\n  mutate(\n    across(starts_with('culmen'), \\(x) x / 10),\n    across(species:sex, as.factor),\n    across(c('is_adult', 'is_female'), as.numeric)\n    ) |&gt;\n  mutate_if(is.numeric,\n    list(scaled = \\(x) (x - mean(x, na.rm=TRUE)) / sd(x, na.rm=TRUE))\n  ) |&gt;\n  rename_with(\n    \\(name) str_replace(name, \"mm\", \"cm\"),\n    starts_with('culmen'))\npenguins_subset |&gt; select(-starts_with('is')) |&gt; str()\n\ntibble [344 × 6] (S3: tbl_df/tbl/data.frame)\n $ species                : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ sex                    : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ culmen_length_cm       : num [1:344] 3.91 3.95 4.03 NA 3.67 3.93 3.89 3.92 3.41 4.2 ...\n $ culmen_depth_cm        : num [1:344] 1.87 1.74 1.8 NA 1.93 2.06 1.78 1.96 1.81 2.02 ...\n $ culmen_length_cm_scaled: num [1:344] -0.883 -0.81 -0.663 NA -1.323 ...\n $ culmen_depth_cm_scaled : num [1:344] 0.784 0.126 0.43 NA 1.088 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )"
  },
  {
    "objectID": "01-introduction_to_r.html#hint-figuring-out-what-is-going-on",
    "href": "01-introduction_to_r.html#hint-figuring-out-what-is-going-on",
    "title": "Introduction to R",
    "section": "Hint: figuring out what is going on",
    "text": "Hint: figuring out what is going on\n\nSplit the problem into smaller pieces\n\n\n\\(name) str_replace(name, \"mm\", \"cm\")\n\n\\(name) str_replace(name, \"mm\", \"cm\")\n\nstr_replace(\"ammm\", \"mm\", \"cm\")\n\n[1] \"acmm\"\n\n\n\nCheck help files\n\n\n?str_replace\n\n\nCheck typeof() and class()\n\n\n\ntypeof(\\(name) str_replace(name, \"mm\", \"cm\"))\n\n[1] \"closure\"\n\n\n\\(\\rightarrow\\) closures are functions\n\nSee if you can produce some outcome on the reduced problem\n\n\nmy_function &lt;- \\(name) str_replace(name, \"mm\", \"cm\")\nmy_function('here are some mms')\n\n[1] \"here are some cms\""
  },
  {
    "objectID": "01-introduction_to_r.html#hint-read-the-source-code",
    "href": "01-introduction_to_r.html#hint-read-the-source-code",
    "title": "Introduction to R",
    "section": "Hint: read the source code",
    "text": "Hint: read the source code\n\nThis is only useful if a function is pure R code\n\n\nstr_replace\n\nfunction (string, pattern, replacement) \n{\n    if (!missing(replacement) && is_replacement_fun(replacement)) {\n        replacement &lt;- as_function(replacement)\n        return(str_transform(string, pattern, replacement))\n    }\n    check_lengths(string, pattern, replacement)\n    switch(type(pattern), empty = no_empty(), bound = no_boundary(), \n        fixed = stri_replace_first_fixed(string, pattern, replacement, \n            opts_fixed = opts(pattern)), coll = stri_replace_first_coll(string, \n            pattern, replacement, opts_collator = opts(pattern)), \n        regex = stri_replace_first_regex(string, pattern, fix_replacement(replacement), \n            opts_regex = opts(pattern)))\n}\n&lt;bytecode: 0x11d8c44b0&gt;\n&lt;environment: namespace:stringr&gt;"
  },
  {
    "objectID": "01-introduction_to_r.html#aside-functions-and-variable-names",
    "href": "01-introduction_to_r.html#aside-functions-and-variable-names",
    "title": "Introduction to R",
    "section": "Aside: functions and variable names",
    "text": "Aside: functions and variable names\n\nCommon mistake that leads to cryptic error:\n\n\nmeans &lt;- c(4,5,6)\nmean[1]\n\nError in mean[1]: object of type 'closure' is not subsettable"
  },
  {
    "objectID": "01-introduction_to_r.html#reducing-rows-filtering",
    "href": "01-introduction_to_r.html#reducing-rows-filtering",
    "title": "Introduction to R",
    "section": "Reducing rows: filtering",
    "text": "Reducing rows: filtering\n\nCreate different subsets of data\n“Filter in” (not out) \\(\\rightarrow\\) TRUE rows remain\n\n\nadelies &lt;- penguins_subset |&gt;\n  filter(species == \"Adelie\")\nunique(adelies$species)\n\n[1] Adelie\nLevels: Adelie Chinstrap Gentoo\n\nfemale_adelies &lt;- penguins_subset |&gt;\n  filter(species == \"Adelie\", is_female == 1)\nfemale_adelies |&gt; select(species, sex) |&gt; summary()\n\n      species       sex    \n Adelie   :73   female:73  \n Chinstrap: 0   male  : 0  \n Gentoo   : 0"
  },
  {
    "objectID": "01-introduction_to_r.html#reducing-rows-summarizing",
    "href": "01-introduction_to_r.html#reducing-rows-summarizing",
    "title": "Introduction to R",
    "section": "Reducing rows: summarizing",
    "text": "Reducing rows: summarizing\n\nCalculate any appropriate summary for a variable\n\n\nlibrary(tidyr)\npenguins |&gt;\n  drop_na(body_mass_g) |&gt;\n  summarize(avg_weight = mean(body_mass_g))\n\n# A tibble: 1 × 1\n  avg_weight\n       &lt;dbl&gt;\n1      4202.\n\n\n\nCalculate the summary for each group\n\n\npenguins_summary &lt;- penguins_subset |&gt;\n  drop_na(culmen_length_cm) |&gt;\n  group_by(species, sex) |&gt;\n  summarize(avg_clength = mean(culmen_length_cm))\npenguins_summary\n\n# A tibble: 8 × 3\n# Groups:   species [3]\n  species   sex    avg_clength\n  &lt;fct&gt;     &lt;fct&gt;        &lt;dbl&gt;\n1 Adelie    female        3.73\n2 Adelie    male          4.04\n3 Adelie    &lt;NA&gt;          3.78\n4 Chinstrap female        4.66\n5 Chinstrap male          5.11\n6 Gentoo    female        4.56\n7 Gentoo    male          4.95\n8 Gentoo    &lt;NA&gt;          4.56"
  },
  {
    "objectID": "01-introduction_to_r.html#pivot-tables",
    "href": "01-introduction_to_r.html#pivot-tables",
    "title": "Introduction to R",
    "section": "Pivot tables",
    "text": "Pivot tables\n\npenguins_summary |&gt;\n  pivot_wider(names_from = species, values_from = avg_clength) \n\n# A tibble: 3 × 4\n  sex    Adelie Chinstrap Gentoo\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n1 female   3.73      4.66   4.56\n2 male     4.04      5.11   4.95\n3 &lt;NA&gt;     3.78     NA      4.56\n\npenguins_wide &lt;- penguins_subset |&gt;\n  drop_na(culmen_length_cm) |&gt;\n  select(culmen_length_cm, species, sex) |&gt;\n  pivot_wider(values_from = culmen_length_cm, names_from = species, values_fn = mean) |&gt;\n  arrange(sex) |&gt;\n  select(sex, Adelie, Chinstrap, Gentoo)\npenguins_wide\n\n# A tibble: 3 × 4\n  sex    Adelie Chinstrap Gentoo\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n1 female   3.73      4.66   4.56\n2 male     4.04      5.11   4.95\n3 &lt;NA&gt;     3.78     NA      4.56\n\npivot_longer(penguins_wide, cols = -sex, names_to = \"species\", values_to = \"avg_clength\")\n\n# A tibble: 9 × 3\n  sex    species   avg_clength\n  &lt;fct&gt;  &lt;chr&gt;           &lt;dbl&gt;\n1 female Adelie           3.73\n2 female Chinstrap        4.66\n3 female Gentoo           4.56\n4 male   Adelie           4.04\n5 male   Chinstrap        5.11\n6 male   Gentoo           4.95\n7 &lt;NA&gt;   Adelie           3.78\n8 &lt;NA&gt;   Chinstrap       NA   \n9 &lt;NA&gt;   Gentoo           4.56"
  },
  {
    "objectID": "01-introduction_to_r.html#exercise-2",
    "href": "01-introduction_to_r.html#exercise-2",
    "title": "Introduction to R",
    "section": "Exercise",
    "text": "Exercise\n\n\n\nBecome the Ornithologist\n\n\n\nRead the penguins_raw.feather file\nRemove all whitespace and special characters from the column names\nCalculate the body mass for each penguin in kg\nCreate a pivot-table with the median (?median) body mass for each species on each island\n\nthe island names should be in the first column\nthe species names should be the remaining columns\n\n\nRepeat the analysis but only for female penguins\n\n\n\n\n\n\n\nBecome the music manager\n\n\n\nRead the top10_charts.csv in chart_data\n\nWhat is the range of dates in this dataset? (Hint: ?min, ?max)\nWhat is the top region in terms of streams overall? (Hint: ?slice_max)\nCreate a pivot-table of the total streams (in this dataset) within a region on a given day (1st column day, remaining columns region names, values total streams)"
  },
  {
    "objectID": "01-introduction_to_r.html#merging-data-i",
    "href": "01-introduction_to_r.html#merging-data-i",
    "title": "Introduction to R",
    "section": "Merging data I",
    "text": "Merging data I\n\nOften we have two separate datasets with corresponding groups of rows\n\nStreams, trackID in top10_charts.csv and Song metadata, trackID in top10_meta.csv\n\npurchaseid, customerid in noahs-orders.csv and productid, purchaseid in noahs-orders_items.csv and customerid, customer metadata in noahs-customers.csv\n\n\n\nCombine data using joins\n\n\ncharts &lt;- readr::read_csv(\"data/chart_data/top10_charts.csv\")\nsongs &lt;- readr::read_csv(\"data/chart_data/top10_meta.csv\")\nstr(charts, give.attr=FALSE)\n\nspc_tbl_ [7,320 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ trackID  : chr [1:7320] \"012iHyRvQQquWQGUTYvDxy\" \"017PF4Q3l4DBUiWoXk4OWT\" \"017PF4Q3l4DBUiWoXk4OWT\" \"017PF4Q3l4DBUiWoXk4OWT\" ...\n $ rank     : num [1:7320] 7 6 7 7 7 8 9 9 10 10 ...\n $ streams  : num [1:7320] 26234 4276985 3688979 3255639 3478044 ...\n $ day      : Date[1:7320], format: \"2020-08-14\" \"2020-03-27\" ...\n $ dayNumber: num [1:7320] 1318 1178 1179 1180 1181 ...\n $ region   : chr [1:7320] \"at\" \"global\" \"global\" \"global\" ...\n $ isrc     : chr [1:7320] \"DEUM72004523\" \"GBAHT1901303\" \"GBAHT1901303\" \"GBAHT1901303\" ...\n\nstr(songs, give.attr=FALSE)\n\nspc_tbl_ [347 × 29] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ trackID              : chr [1:347] \"012iHyRvQQquWQGUTYvDxy\" \"017PF4Q3l4DBUiWoXk4OWT\" \"01I9AEz658sQnQzCL3K3QG\" \"033if6Adj8fwBYsQzHOfQ8\" ...\n $ trackName            : chr [1:347] \"Fall Auf\" \"Break My Heart\" \"HOES UP G'S DOWN\" \"100k Cash\" ...\n $ artistName           : chr [1:347] \"Cro feat. badchieff\" \"Dua Lipa\" \"Shirin David\" \"Capital Bra feat. Samra\" ...\n $ artistIds            : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu,6GoNVmYCl0yUm4pEp80vn6\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d,6h1s4i4XKIYv4ErDelLDN0\" ...\n $ isrc                 : chr [1:347] \"DEUM72004523\" \"GBAHT1901303\" \"DECE72000379\" \"DECE72000176\" ...\n $ explicit             : num [1:347] 0 0 1 0 0 0 0 1 0 0 ...\n $ trackPopularity      : num [1:347] 64 83 75 71 69 82 70 74 89 79 ...\n $ primary_artistName   : chr [1:347] \"Cro\" \"Dua Lipa\" \"Shirin David\" \"Capital Bra\" ...\n $ primary_artistID     : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d\" ...\n $ artistIDs            : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu,6GoNVmYCl0yUm4pEp80vn6\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d,6h1s4i4XKIYv4ErDelLDN0\" ...\n $ albumName            : chr [1:347] \"Fall Auf\" \"Future Nostalgia\" \"HOES UP G'S DOWN\" \"100k Cash\" ...\n $ albumID              : chr [1:347] \"1qdHQo41Vkkgs8HtMk5b96\" \"7fJJK56U9fHixgO0HQkhtI\" \"15Njx2PcwnNsI65fnbM7Pw\" \"5cqwoGrjFr3VKYZ9ZC0eL2\" ...\n $ available_markets    : chr [1:347] \"AD, AE, AL, AR, AT, AU, BA, BE, BG, BH, BO, BR, BY, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES,\"| __truncated__ \"AD, AE, AR, AU, BE, BG, BH, BO, BR, CA, CL, CO, CR, CY, CZ, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB, GR, GT, HK,\"| __truncated__ \"AD, AE, AR, AT, AU, BE, BG, BH, BO, BR, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB,\"| __truncated__ \"AD, AE, AR, AT, AU, BE, BG, BH, BO, BR, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB,\"| __truncated__ ...\n $ n_available_markets  : num [1:347] 92 76 79 79 87 79 3 79 92 92 ...\n $ releaseDate          : Date[1:347], format: \"2020-08-13\" \"2020-03-27\" ...\n $ releaseDate_precision: chr [1:347] \"day\" \"day\" \"day\" \"day\" ...\n $ danceability         : num [1:347] 0.5 0.73 0.73 0.701 0.84 0.795 0.814 0.774 0.641 0.571 ...\n $ energy               : num [1:347] 0.743 0.729 0.777 0.714 0.648 0.607 0.794 0.805 0.324 0.693 ...\n $ key                  : num [1:347] 2 4 1 10 10 7 7 11 11 6 ...\n $ loudness             : num [1:347] -6.65 -3.43 -6.38 -5.91 -5.54 ...\n $ mode                 : num [1:347] 1 0 0 1 0 1 1 0 1 0 ...\n $ speechiness          : num [1:347] 0.0373 0.0886 0.29 0.524 0.0489 0.23 0.0887 0.302 0.0299 0.0545 ...\n $ acousticness         : num [1:347] 0.307 0.167 0.0455 0.289 0.101 0.128 0.119 0.0509 0.698 0.0054 ...\n $ instrumentalness     : num [1:347] 0.00 1.39e-06 1.10e-03 0.00 1.00e-04 1.90e-01 9.00e-04 0.00 0.00 0.00 ...\n $ liveness             : num [1:347] 0.133 0.349 0.0759 0.0883 0.0996 0.111 0.348 0.149 0.328 0.173 ...\n $ valence              : num [1:347] 0.332 0.467 0.578 0.604 0.431 0.25 0.647 0.261 0.273 0.393 ...\n $ tempo                : num [1:347] 166.3 113 177.9 86.9 103 ...\n $ duration_ms          : num [1:347] 191827 221820 130307 173353 124690 ...\n $ time_signature       : num [1:347] 4 4 4 4 4 4 4 4 4 4 ..."
  },
  {
    "objectID": "01-introduction_to_r.html#merging-data-ii",
    "href": "01-introduction_to_r.html#merging-data-ii",
    "title": "Introduction to R",
    "section": "Merging data II",
    "text": "Merging data II\n\nThe name of the join determines which “ids” are kept\n\nleft_join keeps all rows that have an id in the left dataset\n\ninner_join only keeps rows with ids in both datasets\n\n\ndata1 &lt;- data.frame(group = c('a', 'a', 'b','c'), value = c(1,2,3,4)) # missing group 'd'\ndata2 &lt;- data.frame(group2 = c('a', 'c', 'd'), value2 = factor(c(\"abc\", \"def\", \"ghi\"))) # missing group 'b'\n\nleft_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     b     3   &lt;NA&gt;\n4     c     4    def\n\nright_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     c     4    def\n4     d    NA    ghi\n\ninner_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     c     4    def"
  },
  {
    "objectID": "01-introduction_to_r.html#special-joins",
    "href": "01-introduction_to_r.html#special-joins",
    "title": "Introduction to R",
    "section": "Special joins",
    "text": "Special joins\n\n\nfull_join returns all rows from both datasets\n\nsemi_join returns only the columns of the left dataset and filters rows with id in the right dataset\n\nanti_join keeps only rows that do not have an id in the right table\n\n\nfull_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     b     3   &lt;NA&gt;\n4     c     4    def\n5     d    NA    ghi\n\nsemi_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value\n1     a     1\n2     a     2\n3     c     4\n\nfilter(data1, group %in% data2$group2)\n\n  group value\n1     a     1\n2     a     2\n3     c     4\n\nanti_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value\n1     b     3"
  },
  {
    "objectID": "01-introduction_to_r.html#exercise-3",
    "href": "01-introduction_to_r.html#exercise-3",
    "title": "Introduction to R",
    "section": "Exercise",
    "text": "Exercise\n\n\n\nBE the music manager\n\n\n\nWho are the top 10 artists in terms of total global streams?\nWhat is their most succesful song?\nFor how many songs are do we not have meta data?\nHow many songs are there in the data? (Hint: ?n_distinct, or ?length, ?unique)\nSave the combined data as top10_all.parquet"
  },
  {
    "objectID": "01-introduction_to_r.html#references",
    "href": "01-introduction_to_r.html#references",
    "title": "Introduction to R",
    "section": "References",
    "text": "References\nLinks\n\nR Logo\nNoah’s Database\n\nBibliography\n\n\n\n\n\n\n\nData-based Storytelling"
  },
  {
    "objectID": "01-introduction_to_r_page.html",
    "href": "01-introduction_to_r_page.html",
    "title": "Introduction to R",
    "section": "",
    "text": "Well established in business and scientific computing\nVery powerful language\n\nExpress any operation in terms of\nOften complex functions are already implemented\n\nVery good package manager and ecosystem\n\nWe will use many tools created by companies, universities, and other R community members\n\nVery good for reproducibility\n\nCode documents the process\nShould run the same on my and your machine\nShould be easily adaptable to changing data\n\nOpen source\n\nAll packages can be inspected\nFree to install and use on any computer\n\nDeveloped (partly) and hosted at WU 😋\n\n\n\n\n\n\n\n\nThe R interpreter\n\nThe program that “interprets” R code and runs it\nVery bare-bones, essentially just a text field\nDoes not store code files for reproducibility\n\n\n\nprint(\"Hello, WU!\")\n\n[1] \"Hello, WU!\"\n\npaste0(\"One plus two is: \", 1 + 2)\n\n[1] \"One plus two is: 3\"\n\nc &lt;- data.frame(p = seq(0, 2 * pi, by = 0.001))\nc$h_x &lt;- 16 * sin(c$p)^3\nc$h_y &lt;- 13 * cos(c$p) - 5 * cos(2 * c$p) - 2 * cos(3 * c$p) - cos(4 * c$p)\nplot(c$h_x, c$h_y, type = \"l\", main = \"I &lt;3 R\", frame = F, xlab = NA, ylab = NA)\n\n\n\n\n\n\n\n\n\n\nAn Integrated Development Environment (IDE)\n\nMakes writing and storing R code easier (more fun!)\nThree options compatible with this course:\n\nR Studio Desktop (Recommended)\n\nFocused on R\nEasiest option\n\nVS Code\n\nRecommended if you (plan to) use other languages (Python, C++, Julia, etc.)\nNeeds extension for R but works well\n\nJupyterLab\n\n“Notebooks” for R, Python, and Julia\nOutput generated directly under code “cells”\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMy favorite R package\n\n\n\n\nDownload the presentation template my_favorite_r_package.qmd and the bibliography file data_literacy.bib from Canvas\nSelect a package that was useful to you in the past\nPrepare a short presentation about the package\n\nInclude examples of how to use the package\nShow in which situations that is useful\n\n\n\n\n\n\n\n\nCtrl + Enter to run current line of code (any cursor position)\n\n\n\n\n\n\nCtrl + Enter to run current line of code (any cursor position)\n\n\n\n\n\n\n# This is a comment\nprint(\"Hi\") # also a comment\n\n[1] \"Hi\"\n\n## Assignment of varibale names\nx &lt;- 1\nx\n\n[1] 1\n\n## Missing values\nNA\n\n[1] NA\n\n## Vectors\ny &lt;- c(1, 2, 3, NA)\ny\n\n[1]  1  2  3 NA\n\n\n\n\n\n\n## built-in\nsum(y)\n\n[1] NA\n\nsum(y, na.rm = FALSE)\n\n[1] NA\n\nsum(y, na.rm = TRUE)\n\n[1] 6\n\n## User functions\na_plus_b &lt;- function(a, b = 1) {\n    return(a + b)\n}\na_plus_b(y)\n\n[1]  2  3  4 NA\n\na_plus_b(y, 2)\n\n[1]  3  4  5 NA\n\na_plus_b(b = 2, a = y)\n\n[1]  3  4  5 NA\n\n## Functions provided by packages\n## Installation\n#install.packages(\"ineq\")\nineq::Gini(y)\n\n[1] 0.2222222\n\n## or\nlibrary(ineq)\nGini(y)\n\n[1] 0.2222222\n\n## Help \n?Gini\n\n\n\n\n\ny[1]\n\n[1] 1\n\ny[-1]\n\n[1]  2  3 NA\n\ny[2:3]\n\n[1] 2 3\n\ny[c(1, 3, 4)]\n\n[1]  1  3 NA\n\nset.seed(1)\nx &lt;- y / 2 + rnorm(length(y))\ncbind(y, x)\n\n      y          x\n[1,]  1 -0.1264538\n[2,]  2  1.1836433\n[3,]  3  0.6643714\n[4,] NA         NA\n\ny &gt; 2\n\n[1] FALSE FALSE  TRUE    NA\n\ny &gt; 2 & x &gt; 0\n\n[1] FALSE FALSE  TRUE    NA\n\ny &gt; 2 | x &gt; 0\n\n[1] FALSE  TRUE  TRUE    NA\n\ny[y &gt; 2 | x &gt; 0]\n\n[1]  2  3 NA\n\n\n\n\n\n\n## 'elem' is a temporary variable\nfor (elem in y) {\n    print(paste(\"Current y value is:\", elem))\n}\n\n[1] \"Current y value is: 1\"\n[1] \"Current y value is: 2\"\n[1] \"Current y value is: 3\"\n[1] \"Current y value is: NA\"\n\n## 'seq_along' returns a vector which indexes the argument\nfor (i in seq_along(y)) {\n    print(paste(\"Current y value is:\", y[i]))\n}\n\n[1] \"Current y value is: 1\"\n[1] \"Current y value is: 2\"\n[1] \"Current y value is: 3\"\n[1] \"Current y value is: NA\"\n\n## set.seed guarantees the same random numbers every time\nset.seed(1)\ntotal &lt;- 0\nwhile (total &lt; 1) {\n    ## runif generates random numbers between 0 and 1\n    total &lt;- total + runif(1)\n    print(paste(\"Current total value is:\", total))\n}\n\n[1] \"Current total value is: 0.2655086631421\"\n[1] \"Current total value is: 0.63763256277889\"\n[1] \"Current total value is: 1.21048592613079\"\n\n## ranges\n1:3\n\n[1] 1 2 3\n\n10:3\n\n[1] 10  9  8  7  6  5  4  3\n\nseq(3, 11, by = 2)\n\n[1]  3  5  7  9 11\n\n\n\n\n\n\nz &lt;- -2:3\nfor (x in z) {\n  print(paste(\"x =\", x))\n    if (x &gt; 0) {\n        print(\"x is positive\")\n    } else if (x &gt; 2) {\n        print(\"x is greater than 2\")\n    } else if (x &lt; 0) {\n        print(\"x is negative\")\n    } else if (x == 0) {\n        print(\"x is zero\")\n    }\n}\n\n[1] \"x = -2\"\n[1] \"x is negative\"\n[1] \"x = -1\"\n[1] \"x is negative\"\n[1] \"x = 0\"\n[1] \"x is zero\"\n[1] \"x = 1\"\n[1] \"x is positive\"\n[1] \"x = 2\"\n[1] \"x is positive\"\n[1] \"x = 3\"\n[1] \"x is positive\"\n\nz[z &lt;= 0]\n\n[1] -2 -1  0\n\nz[z &gt;= 0]\n\n[1] 0 1 2 3\n\nz[z != 0]\n\n[1] -2 -1  1  2  3\n\nz[! z &lt; 0]\n\n[1] 0 1 2 3\n\n\n\n\n\n\n\n\n\n\n\nWrite your own function\n\n\n\n\nThe function should take two arguments a and b\nFirst, check if a and b have the same number of elements (see ?length)\n\nIf they have a different number of elements, return NA\n\nIterate over the elements of a and b and check which vector’s element is larger (or if they are equal)\nIf they are equal print the index of the element and “equal”\nIf the element in a is larger print the index of the elemnt and “a larger”\nIf the element in b is larger print the index of the elemnt and “b larger”\n\n\n\n\n\n\na &lt;- c(1, 2, 3)\nb &lt;- c(1, 2, 3, 4)\ncat(\"a is:\", a, \"\\n\")\n\na is: 1 2 3 \n\ncat(\"b is:\", b, \"\\n\")\n\nb is: 1 2 3 4 \n\ncat(\"Result:\\n\")\n\nResult:\n\nNA\n\n[1] NA\n\n\n\n\n\n\na &lt;- c(1, 2, 3)\nb &lt;- c(0, 2, 4)\ncat(\"a is:\", a, \"\\n\")\n\na is: 1 2 3 \n\ncat(\"b is:\", b, \"\\n\")\n\nb is: 0 2 4 \n\ncat(\"Result:\\n\")\n\nResult:\n\nprint(\"1 a larger\")\n\n[1] \"1 a larger\"\n\nprint(\"2 equal\")\n\n[1] \"2 equal\"\n\nprint(\"3 b larger\")\n\n[1] \"3 b larger\"\n\n\n\n\n\n\n\ndata &lt;- data.frame(x = -1:1, y = 3:1, z = c(\"a\", \"b\", NA))\ndata\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;\n\nclass(data)\n\n[1] \"data.frame\"\n\n## Variable access\ndata$x\n\n[1] -1  0  1\n\ndata$x + data$y\n\n[1] 2 2 2\n\nrow_summaries &lt;- with(data, \n  data.frame(\n    rsum = x + y,\n    rdiff = x - y\n  ))\nrow_summaries\n\n  rsum rdiff\n1    2    -4\n2    2    -2\n3    2     0\n\n\n\n\n\n\nstr(data)\n\n'data.frame':   3 obs. of  3 variables:\n $ x: int  -1 0 1\n $ y: int  3 2 1\n $ z: chr  \"a\" \"b\" NA\n\nsummary(data)\n\n       x              y            z            \n Min.   :-1.0   Min.   :1.0   Length:3          \n 1st Qu.:-0.5   1st Qu.:1.5   Class :character  \n Median : 0.0   Median :2.0   Mode  :character  \n Mean   : 0.0   Mean   :2.0                     \n 3rd Qu.: 0.5   3rd Qu.:2.5                     \n Max.   : 1.0   Max.   :3.0                     \n\nhead(data)\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;\n\n\n\n\n\n\n## 2D structure of data\n## Empty argument means \"all\"#| \ndata[, c(\"x\", \"y\")]\n\n   x y\n1 -1 3\n2  0 2\n3  1 1\n\ndata[1:3, c(\"x\", \"y\")]\n\n   x y\n1 -1 3\n2  0 2\n3  1 1\n\ndata[1, ]\n\n   x y z\n1 -1 3 a\n\ndata[c(1, 3), c(\"x\", \"z\")]\n\n   x    z\n1 -1    a\n3  1 &lt;NA&gt;\n\ndata[data$x &lt; 3,]\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;\n\n\n\n\n\n\n## new data has to have the same number of elements\ndata$a &lt;- 2 * data$x\ndata\n\n   x y    z  a\n1 -1 3    a -2\n2  0 2    b  0\n3  1 1 &lt;NA&gt;  2\n\ndata$b &lt;- c(\"one\", \"two\", \"three\")\ndata\n\n   x y    z  a     b\n1 -1 3    a -2   one\n2  0 2    b  0   two\n3  1 1 &lt;NA&gt;  2 three\n\ndata$x &lt;- NULL\ndata\n\n  y    z  a     b\n1 3    a -2   one\n2 2    b  0   two\n3 1 &lt;NA&gt;  2 three\n\ndata$a &lt;- log(data$a)\n\nWarning in log(data$a): NaNs produced\n\ndata\n\n  y    z         a     b\n1 3    a       NaN   one\n2 2    b      -Inf   two\n3 1 &lt;NA&gt; 0.6931472 three\n\ndata$b[data$b == \"two\"] &lt;- \"TWO!\"\ndata$z[is.na(data$z)] &lt;- \"c\"\ndata$a[is.nan(data$a)] &lt;- 0\ndata\n\n  y z         a     b\n1 3 a 0.0000000   one\n2 2 b      -Inf  TWO!\n3 1 c 0.6931472 three\n\n\n\n\n\n\n\n\n\n\n\nGenerate your own data\n\n\n\n\nLook at the helpfiles of rnorm, runif, and ifelse\nCreate a data.frame with 10 rows and variables x, generated using runif and y, generated using rnorm\nAdd variable z which takes the value 1 if x is larger than y and 0 otherwise\nCreate a second data.frame that holds the rows of the original one for which z == 1 is TRUE.\nRemove column z from the second data.frame\nWhat happens if you try to create a data.frame when x and y have a differnent number of elements?\nWhat happens if you run the code you wrote for this exercise again (and again)?\nHow can you ensure that each run yields the same results?\n\n\n\n\n\n\n\nPlease download & unzip the folder found in “data” in Canvas\nWe will first use the “penguins” folder which includes the penguins_raw data set in multiple file formats\n\n\n## CSV\npenguins_raw &lt;- readr::read_csv(\"data/penguins/penguins_raw.csv\")\n\nNew names:\n• `` -&gt; `...1`\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 345 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): ...1, studyName, Species, Region, Island, Stage, Individual ID, C...\ndbl   (7): Sample Number, Culmen Length (mm), Culmen Depth (mm), Flipper Len...\ndate  (1): Date Egg\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n  ...1     studyName `Sample Number` Species Region Island Stage `Individual ID`\n  &lt;chr&gt;    &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 # this … &lt;NA&gt;                   NA &lt;NA&gt;    &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  &lt;NA&gt;           \n2 1        PAL0708                 1 Adelie… Anvers Torge… Adul… N1A1           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n\n. . .\n\npenguins_raw[1,1]\n\n# A tibble: 1 × 1\n  ...1                                              \n  &lt;chr&gt;                                             \n1 # this is a comment making the data harder to read\n\n\n\n\n\n\n\n\nFix the data\n\n\n\n\nThe second row (after the column names) in the penguins_raw.csv file is a comment\nLook at the help file for the readr::read_csv function (?readr::read_csv)\nHow can we ignore the comment row?\n\n\n\n\n\n\n\n## CSV\npenguins_raw &lt;- readr::read_csv(\n  \"data/penguins/penguins_raw.csv\",\n  comment = \"#\")\n\nNew names:\nRows: 344 Columns: 18\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(9): studyName, Species, Region, Island, Stage, Individual ID, Clutch C... dbl\n(8): ...1, Sample Number, Culmen Length (mm), Culmen Depth (mm), Flippe... date\n(1): Date Egg\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n   ...1 studyName `Sample Number` Species    Region Island Stage `Individual ID`\n  &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1     1 PAL0708                 1 Adelie Pe… Anvers Torge… Adul… N1A1           \n2     2 PAL0708                 2 Adelie Pe… Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\npenguins_raw[1,1]\n\n# A tibble: 1 × 1\n   ...1\n  &lt;dbl&gt;\n1     1\n\nstr(penguins_raw)\n\nspc_tbl_ [344 × 18] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ...1               : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ studyName          : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ Sample Number      : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ Species            : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ Region             : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ Island             : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ Stage              : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ Individual ID      : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ Clutch Completion  : chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ Date Egg           : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ Culmen Length (mm) : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ Culmen Depth (mm)  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ Flipper Length (mm): num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ Body Mass (g)      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ Sex                : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ Delta 15 N (o/oo)  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ Delta 13 C (o/oo)  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ Comments           : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ...1 = col_double(),\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\n\n\nThe readxl package provides functions for reading Excel files\n\n\npenguins_raw &lt;- readxl::read_excel(\"data/penguins/penguins_raw.xlsx\")\n\nNew names:\n• `` -&gt; `...1`\n\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n  ...1  studyName `Sample Number` Species    Region Island Stage `Individual ID`\n  &lt;chr&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 1     PAL0708                 1 Adelie Pe… Anvers Torge… Adul… N1A1           \n2 2     PAL0708                 2 Adelie Pe… Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;dttm&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n## Read a subset \npenguins_subset &lt;- readxl::read_excel(\"data/penguins/penguins_raw.xlsx\", sheet = \"Sheet1\", range = \"B1:O345\")\nhead(penguins_subset, 2)\n\n# A tibble: 2 × 14\n  studyName `Sample Number` Species          Region Island Stage `Individual ID`\n  &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 PAL0708                 1 Adelie Penguin … Anvers Torge… Adul… N1A1           \n2 PAL0708                 2 Adelie Penguin … Anvers Torge… Adul… N1A2           \n# ℹ 7 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;dttm&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;\n\n\n\n\n\n\nThe haven package provides functions for reading SPSS, Stata, and SAS files\nIt looks like SPSS does not support spaces in column names so this is slightly different\n\n\npenguins_raw &lt;- haven::read_sav(\"data/penguins/penguins_raw.sav\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;\n\n\n\n\n\n\nThe arrow package provides functions for reading Parquet and Feather files\nOptimized formats used in many data science projects\nProvides facility to read from “object storage” (e.g., Amazon S3)\n\n\nThe major benefits of object storage are the virtually unlimited scalability and the lower cost of storing large volumes of data for use cases such as data lakes, cloud native applications, analytics, log files, and machine learning (ML). 1\n\n\nRule of thumb:\n\nuse parquet for large files and long term storage\n\noptimized file size\n\nuse feather for optimized reading and short term storage\n\nmemory layout the same as in the process\n\n\n\n\n\n\n\npenguins_raw &lt;- arrow::read_parquet(\"data/penguins/penguins_raw.parquet\")\npenguins_raw &lt;- arrow::read_feather(\"data/penguins/penguins_raw.feather\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 17\n  studyName `Sample Number` Species          Region Island Stage `Individual ID`\n  &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 PAL0708                 1 Adelie Penguin … Anvers Torge… Adul… N1A1           \n2 PAL0708                 2 Adelie Penguin … Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n\n\nSupport for complex data structures\n\n\npenguin_species_island &lt;- arrow::read_parquet('data/penguins/penguin_species_nested.parquet')\nhead(penguin_species_island, 2)\n\n# A tibble: 2 × 2\n  Island                                 data\n  &lt;chr&gt;     &lt;list&lt;tbl_df&lt;Species:character&gt;&gt;&gt;\n1 Torgersen                          [52 × 1]\n2 Biscoe                            [168 × 1]\n\nhead(tidyr::unnest(penguin_species_island), 2)\n\nWarning: `cols` is now required when using `unnest()`.\nℹ Please use `cols = c(data)`.\n\n\n# A tibble: 2 × 2\n  Island    Species                            \n  &lt;chr&gt;     &lt;chr&gt;                              \n1 Torgersen Adelie Penguin (Pygoscelis adeliae)\n2 Torgersen Adelie Penguin (Pygoscelis adeliae)\n\n\n\n\n\n\nlibrary(microbenchmark)\nmicrobenchmark(\n  csv = readr::read_csv(\"data/penguins/penguins_raw.csv\", \n   show_col_types = FALSE, name_repair = 'minimal'),\n  parquet = arrow::read_parquet(\"data/penguins/penguins_raw.parquet\"),\n  feather = arrow::read_feather(\"data/penguins/penguins_raw.feather\")\n) \n\nWarning in microbenchmark(csv =\nreadr::read_csv(\"data/penguins/penguins_raw.csv\", : less accurate nanosecond\ntimes to avoid potential integer overflows\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nUnit: milliseconds\n    expr     min       lq     mean   median       uq       max neval cld\n     csv 7.57926 7.868412 8.300206 7.994467 8.246842 11.847032   100 a  \n parquet 1.71585 1.867591 1.974616 1.937373 2.024211  4.510369   100  b \n feather 1.33168 1.431679 1.559638 1.479936 1.540678  4.132226   100   c\n\n\n\n\n\nThe most important types of data are:\n\n\n\n\n\n\n\nData type\nDescription\n\n\n\n\nNumeric\nApproximations of the real numbers, \\(\\normalsize\\mathbb{R}\\) (e.g., mileage a car gets: 23.6, 20.9, etc.)\n\n\nInteger\nWhole numbers, \\(\\normalsize\\mathbb{Z}\\) (e.g., number of sales: 7, 0, 120, 63, etc.)\n\n\nCharacter\nText data (strings, e.g., product names)\n\n\nFactor\nCategorical data for classification (e.g., product groups)\n\n\nLogical\nTRUE, FALSE\n\n\nDate\nDate variables (e.g., sales dates: 21-06-2015, 06-21-15, 21-Jun-2015, etc.)\n\n\n\nVariables can be converted from one type to another using the appropriate functions (e.g., as.numeric(), as.integer(), as.character(), as.factor(), as.logical(), as.Date()).\n\n\n\n\nstr(penguins_raw)\n\ntibble [344 × 17] (S3: tbl_df/tbl/data.frame)\n $ studyName          : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ Sample Number      : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ Species            : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ Region             : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ Island             : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ Stage              : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ Individual ID      : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ Clutch Completion  : chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ Date Egg           : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ Culmen Length (mm) : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ Culmen Depth (mm)  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ Flipper Length (mm): num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ Body Mass (g)      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ Sex                : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ Delta 15 N (o/oo)  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ Delta 13 C (o/oo)  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ Comments           : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n\n\n\nClean the column names\n\n\npenguins &lt;- janitor::clean_names(penguins_raw)\nstr(penguins)\n\ntibble [344 × 17] (S3: tbl_df/tbl/data.frame)\n $ study_name       : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ sample_number    : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ species          : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ region           : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ island           : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ stage            : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ individual_id    : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ clutch_completion: chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ date_egg         : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ culmen_length_mm : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ culmen_depth_mm  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ sex              : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ delta_15_n_o_oo  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ delta_13_c_o_oo  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ comments         : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n\n\n\n\n\n\n|&gt; is the “pipe” operator\n\nIt takes the result of the left side and passes it to the right side as the first argument\nVery useful when “chaining” multiple operations\n\n\n\npenguins |&gt;\n  head(2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;\n\nhead(penguins, 2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;\n\n\n\n\n\n\nPkg: dplyr provides function for data.frame manipulation\nPkg: stringr provides functions to manipulate strings (characters)\nfn: mutate takes each row and applies a function to create a new (or overwrite a) column\nfn: select selects columns\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(stringr)\npenguins_subset &lt;- penguins |&gt;\n  mutate(\n    species = str_split(species, \" \", n = 2, simplify = TRUE)[,1],\n    is_adult = str_detect(str_to_lower(stage), \"adult\"),\n    is_female = str_detect(str_to_lower(sex), \"female\"),\n    sex = str_to_lower(sex)) |&gt;\n  select(species, island, sex, is_adult,  culmen_length_mm, culmen_depth_mm, is_female)\npenguins_subset |&gt; head(2)\n\n# A tibble: 2 × 7\n  species island    sex    is_adult culmen_length_mm culmen_depth_mm is_female\n  &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;  &lt;lgl&gt;               &lt;dbl&gt;           &lt;dbl&gt; &lt;lgl&gt;    \n1 Adelie  Torgersen male   TRUE                 39.1            18.7 FALSE    \n2 Adelie  Torgersen female TRUE                 39.5            17.4 TRUE     \n\n\n\n\n\n\n#penguins_subset &lt;- \npenguins_subset &lt;- penguins_subset |&gt;\n  mutate(\n    across(starts_with('culmen'), \\(x) x / 10),\n    across(species:sex, as.factor),\n    across(c('is_adult', 'is_female'), as.numeric)\n    ) |&gt;\n  mutate_if(is.numeric,\n    list(scaled = \\(x) (x - mean(x, na.rm=TRUE)) / sd(x, na.rm=TRUE))\n  ) |&gt;\n  rename_with(\n    \\(name) str_replace(name, \"mm\", \"cm\"),\n    starts_with('culmen'))\npenguins_subset |&gt; select(-starts_with('is')) |&gt; str()\n\ntibble [344 × 6] (S3: tbl_df/tbl/data.frame)\n $ species                : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ sex                    : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ culmen_length_cm       : num [1:344] 3.91 3.95 4.03 NA 3.67 3.93 3.89 3.92 3.41 4.2 ...\n $ culmen_depth_cm        : num [1:344] 1.87 1.74 1.8 NA 1.93 2.06 1.78 1.96 1.81 2.02 ...\n $ culmen_length_cm_scaled: num [1:344] -0.883 -0.81 -0.663 NA -1.323 ...\n $ culmen_depth_cm_scaled : num [1:344] 0.784 0.126 0.43 NA 1.088 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n\n\n\n\n\n\nSplit the problem into smaller pieces\n\n\n\\(name) str_replace(name, \"mm\", \"cm\")\n\n\\(name) str_replace(name, \"mm\", \"cm\")\n\nstr_replace(\"ammm\", \"mm\", \"cm\")\n\n[1] \"acmm\"\n\n\n\nCheck help files\n\n\n?str_replace\n\n\nCheck typeof() and class()\n\n\ntypeof(\\(name) str_replace(name, \"mm\", \"cm\"))\n\n[1] \"closure\"\n\n\n\\(\\rightarrow\\) closures are functions\n\nSee if you can produce some outcome on the reduced problem\n\n\nmy_function &lt;- \\(name) str_replace(name, \"mm\", \"cm\")\nmy_function('here are some mms')\n\n[1] \"here are some cms\"\n\n\n\n\n\n\nThis is only useful if a function is pure R code\n\n\nstr_replace\n\nfunction (string, pattern, replacement) \n{\n    if (!missing(replacement) && is_replacement_fun(replacement)) {\n        replacement &lt;- as_function(replacement)\n        return(str_transform(string, pattern, replacement))\n    }\n    check_lengths(string, pattern, replacement)\n    switch(type(pattern), empty = no_empty(), bound = no_boundary(), \n        fixed = stri_replace_first_fixed(string, pattern, replacement, \n            opts_fixed = opts(pattern)), coll = stri_replace_first_coll(string, \n            pattern, replacement, opts_collator = opts(pattern)), \n        regex = stri_replace_first_regex(string, pattern, fix_replacement(replacement), \n            opts_regex = opts(pattern)))\n}\n&lt;bytecode: 0x1607ef8b8&gt;\n&lt;environment: namespace:stringr&gt;\n\n\n\n\n\n\nCommon mistake that leads to cryptic error:\n\n\nmeans &lt;- c(4,5,6)\nmean[1]\n\nError in mean[1]: object of type 'closure' is not subsettable\n\n\n\n\n\n\n\n\n\nCreate different subsets of data\n“Filter in” (not out) \\(\\rightarrow\\) TRUE rows remain\n\n\nadelies &lt;- penguins_subset |&gt;\n  filter(species == \"Adelie\")\nunique(adelies$species)\n\n[1] Adelie\nLevels: Adelie Chinstrap Gentoo\n\nfemale_adelies &lt;- penguins_subset |&gt;\n  filter(species == \"Adelie\", is_female == 1)\nfemale_adelies |&gt; select(species, sex) |&gt; summary()\n\n      species       sex    \n Adelie   :73   female:73  \n Chinstrap: 0   male  : 0  \n Gentoo   : 0              \n\n\n\n\n\n\nCalculate any appropriate summary for a variable\n\n\nlibrary(tidyr)\npenguins |&gt;\n  drop_na(body_mass_g) |&gt;\n  summarize(avg_weight = mean(body_mass_g))\n\n# A tibble: 1 × 1\n  avg_weight\n       &lt;dbl&gt;\n1      4202.\n\n\n\nCalculate the summary for each group\n\n\npenguins_summary &lt;- penguins_subset |&gt;\n  drop_na(culmen_length_cm) |&gt;\n  group_by(species, sex) |&gt;\n  summarize(avg_clength = mean(culmen_length_cm))\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\npenguins_summary\n\n# A tibble: 8 × 3\n# Groups:   species [3]\n  species   sex    avg_clength\n  &lt;fct&gt;     &lt;fct&gt;        &lt;dbl&gt;\n1 Adelie    female        3.73\n2 Adelie    male          4.04\n3 Adelie    &lt;NA&gt;          3.78\n4 Chinstrap female        4.66\n5 Chinstrap male          5.11\n6 Gentoo    female        4.56\n7 Gentoo    male          4.95\n8 Gentoo    &lt;NA&gt;          4.56\n\n\n\n\n\n\npenguins_summary |&gt;\n  pivot_wider(names_from = species, values_from = avg_clength) \n\n# A tibble: 3 × 4\n  sex    Adelie Chinstrap Gentoo\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n1 female   3.73      4.66   4.56\n2 male     4.04      5.11   4.95\n3 &lt;NA&gt;     3.78     NA      4.56\n\npenguins_wide &lt;- penguins_subset |&gt;\n  drop_na(culmen_length_cm) |&gt;\n  select(culmen_length_cm, species, sex) |&gt;\n  pivot_wider(values_from = culmen_length_cm, names_from = species, values_fn = mean) |&gt;\n  arrange(sex) |&gt;\n  select(sex, Adelie, Chinstrap, Gentoo)\npenguins_wide\n\n# A tibble: 3 × 4\n  sex    Adelie Chinstrap Gentoo\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n1 female   3.73      4.66   4.56\n2 male     4.04      5.11   4.95\n3 &lt;NA&gt;     3.78     NA      4.56\n\npivot_longer(penguins_wide, cols = -sex, names_to = \"species\", values_to = \"avg_clength\")\n\n# A tibble: 9 × 3\n  sex    species   avg_clength\n  &lt;fct&gt;  &lt;chr&gt;           &lt;dbl&gt;\n1 female Adelie           3.73\n2 female Chinstrap        4.66\n3 female Gentoo           4.56\n4 male   Adelie           4.04\n5 male   Chinstrap        5.11\n6 male   Gentoo           4.95\n7 &lt;NA&gt;   Adelie           3.78\n8 &lt;NA&gt;   Chinstrap       NA   \n9 &lt;NA&gt;   Gentoo           4.56\n\n\n\n\n\n\n\n\n\n\n\nBecome the Ornithologist\n\n\n\n\nRead the penguins_raw.feather file\nRemove all whitespace and special characters from the column names\nCalculate the body mass for each penguin in kg\nCreate a pivot-table with the median (?median) body mass for each species on each island\n\nthe island names should be in the first column\nthe species names should be the remaining columns\n\nRepeat the analysis but only for female penguins\n\n\n\n\n\n\n\n\n\nBecome the music manager\n\n\n\n\nRead the top10_charts.csv in chart_data\nWhat is the range of dates in this dataset? (Hint: ?min, ?max)\nWhat is the top region in terms of streams overall? (Hint: ?slice_max)\nCreate a pivot-table of the total streams (in this dataset) within a region on a given day (1st column day, remaining columns region names, values total streams)\n\n\n\n\n\n\n\nOften we have two separate datasets with corresponding groups of rows\n\nStreams, trackID in top10_charts.csv and Song metadata, trackID in top10_meta.csv\npurchaseid, customerid in noahs-orders.csv and productid, purchaseid in noahs-orders_items.csv and customerid, customer metadata in noahs-customers.csv\n\nCombine data using joins\n\n\ncharts &lt;- readr::read_csv(\"data/chart_data/top10_charts.csv\")\n\nRows: 7320 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): trackID, region, isrc\ndbl  (3): rank, streams, dayNumber\ndate (1): day\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsongs &lt;- readr::read_csv(\"data/chart_data/top10_meta.csv\")\n\nRows: 347 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (12): trackID, trackName, artistName, artistIds, isrc, primary_artistNa...\ndbl  (16): explicit, trackPopularity, n_available_markets, danceability, ene...\ndate  (1): releaseDate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nstr(charts, give.attr=FALSE)\n\nspc_tbl_ [7,320 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ trackID  : chr [1:7320] \"012iHyRvQQquWQGUTYvDxy\" \"017PF4Q3l4DBUiWoXk4OWT\" \"017PF4Q3l4DBUiWoXk4OWT\" \"017PF4Q3l4DBUiWoXk4OWT\" ...\n $ rank     : num [1:7320] 7 6 7 7 7 8 9 9 10 10 ...\n $ streams  : num [1:7320] 26234 4276985 3688979 3255639 3478044 ...\n $ day      : Date[1:7320], format: \"2020-08-14\" \"2020-03-27\" ...\n $ dayNumber: num [1:7320] 1318 1178 1179 1180 1181 ...\n $ region   : chr [1:7320] \"at\" \"global\" \"global\" \"global\" ...\n $ isrc     : chr [1:7320] \"DEUM72004523\" \"GBAHT1901303\" \"GBAHT1901303\" \"GBAHT1901303\" ...\n\nstr(songs, give.attr=FALSE)\n\nspc_tbl_ [347 × 29] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ trackID              : chr [1:347] \"012iHyRvQQquWQGUTYvDxy\" \"017PF4Q3l4DBUiWoXk4OWT\" \"01I9AEz658sQnQzCL3K3QG\" \"033if6Adj8fwBYsQzHOfQ8\" ...\n $ trackName            : chr [1:347] \"Fall Auf\" \"Break My Heart\" \"HOES UP G'S DOWN\" \"100k Cash\" ...\n $ artistName           : chr [1:347] \"Cro feat. badchieff\" \"Dua Lipa\" \"Shirin David\" \"Capital Bra feat. Samra\" ...\n $ artistIds            : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu,6GoNVmYCl0yUm4pEp80vn6\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d,6h1s4i4XKIYv4ErDelLDN0\" ...\n $ isrc                 : chr [1:347] \"DEUM72004523\" \"GBAHT1901303\" \"DECE72000379\" \"DECE72000176\" ...\n $ explicit             : num [1:347] 0 0 1 0 0 0 0 1 0 0 ...\n $ trackPopularity      : num [1:347] 64 83 75 71 69 82 70 74 89 79 ...\n $ primary_artistName   : chr [1:347] \"Cro\" \"Dua Lipa\" \"Shirin David\" \"Capital Bra\" ...\n $ primary_artistID     : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d\" ...\n $ artistIDs            : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu,6GoNVmYCl0yUm4pEp80vn6\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d,6h1s4i4XKIYv4ErDelLDN0\" ...\n $ albumName            : chr [1:347] \"Fall Auf\" \"Future Nostalgia\" \"HOES UP G'S DOWN\" \"100k Cash\" ...\n $ albumID              : chr [1:347] \"1qdHQo41Vkkgs8HtMk5b96\" \"7fJJK56U9fHixgO0HQkhtI\" \"15Njx2PcwnNsI65fnbM7Pw\" \"5cqwoGrjFr3VKYZ9ZC0eL2\" ...\n $ available_markets    : chr [1:347] \"AD, AE, AL, AR, AT, AU, BA, BE, BG, BH, BO, BR, BY, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES,\"| __truncated__ \"AD, AE, AR, AU, BE, BG, BH, BO, BR, CA, CL, CO, CR, CY, CZ, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB, GR, GT, HK,\"| __truncated__ \"AD, AE, AR, AT, AU, BE, BG, BH, BO, BR, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB,\"| __truncated__ \"AD, AE, AR, AT, AU, BE, BG, BH, BO, BR, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB,\"| __truncated__ ...\n $ n_available_markets  : num [1:347] 92 76 79 79 87 79 3 79 92 92 ...\n $ releaseDate          : Date[1:347], format: \"2020-08-13\" \"2020-03-27\" ...\n $ releaseDate_precision: chr [1:347] \"day\" \"day\" \"day\" \"day\" ...\n $ danceability         : num [1:347] 0.5 0.73 0.73 0.701 0.84 0.795 0.814 0.774 0.641 0.571 ...\n $ energy               : num [1:347] 0.743 0.729 0.777 0.714 0.648 0.607 0.794 0.805 0.324 0.693 ...\n $ key                  : num [1:347] 2 4 1 10 10 7 7 11 11 6 ...\n $ loudness             : num [1:347] -6.65 -3.43 -6.38 -5.91 -5.54 ...\n $ mode                 : num [1:347] 1 0 0 1 0 1 1 0 1 0 ...\n $ speechiness          : num [1:347] 0.0373 0.0886 0.29 0.524 0.0489 0.23 0.0887 0.302 0.0299 0.0545 ...\n $ acousticness         : num [1:347] 0.307 0.167 0.0455 0.289 0.101 0.128 0.119 0.0509 0.698 0.0054 ...\n $ instrumentalness     : num [1:347] 0.00 1.39e-06 1.10e-03 0.00 1.00e-04 1.90e-01 9.00e-04 0.00 0.00 0.00 ...\n $ liveness             : num [1:347] 0.133 0.349 0.0759 0.0883 0.0996 0.111 0.348 0.149 0.328 0.173 ...\n $ valence              : num [1:347] 0.332 0.467 0.578 0.604 0.431 0.25 0.647 0.261 0.273 0.393 ...\n $ tempo                : num [1:347] 166.3 113 177.9 86.9 103 ...\n $ duration_ms          : num [1:347] 191827 221820 130307 173353 124690 ...\n $ time_signature       : num [1:347] 4 4 4 4 4 4 4 4 4 4 ...\n\n\n\n\n\n\nThe name of the join determines which “ids” are kept\nleft_join keeps all rows that have an id in the left dataset\ninner_join only keeps rows with ids in both datasets\n\n\ndata1 &lt;- data.frame(group = c('a', 'a', 'b','c'), value = c(1,2,3,4)) # missing group 'd'\ndata2 &lt;- data.frame(group2 = c('a', 'c', 'd'), value2 = factor(c(\"abc\", \"def\", \"ghi\"))) # missing group 'b'\n\nleft_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     b     3   &lt;NA&gt;\n4     c     4    def\n\nright_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     c     4    def\n4     d    NA    ghi\n\ninner_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     c     4    def\n\n\n\n\n\n\nfull_join returns all rows from both datasets\nsemi_join returns only the columns of the left dataset and filters rows with id in the right dataset\nanti_join keeps only rows that do not have an id in the right table\n\n\nfull_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     b     3   &lt;NA&gt;\n4     c     4    def\n5     d    NA    ghi\n\nsemi_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value\n1     a     1\n2     a     2\n3     c     4\n\nfilter(data1, group %in% data2$group2)\n\n  group value\n1     a     1\n2     a     2\n3     c     4\n\nanti_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value\n1     b     3\n\n\n\n\n\n\n\n\n\n\n\nBE the music manager\n\n\n\n\nWho are the top 10 artists in terms of total global streams?\nWhat is their most succesful song?\nFor how many songs are do we not have meta data?\nHow many songs are there in the data? (Hint: ?n_distinct, or ?length, ?unique)\nSave the combined data as top10_all.parquet\n\n\n\n\n\n\nLinks\n\nR Logo\nNoah’s Database\n\nBibliography"
  },
  {
    "objectID": "01-introduction_to_r_page.html#why-r",
    "href": "01-introduction_to_r_page.html#why-r",
    "title": "Introduction to R",
    "section": "",
    "text": "Well established in business and scientific computing\nVery powerful language\n\nExpress any operation in terms of\nOften complex functions are already implemented\n\nVery good package manager and ecosystem\n\nWe will use many tools created by companies, universities, and other R community members\n\nVery good for reproducibility\n\nCode documents the process\nShould run the same on my and your machine\nShould be easily adaptable to changing data\n\nOpen source\n\nAll packages can be inspected\nFree to install and use on any computer\n\nDeveloped (partly) and hosted at WU 😋"
  },
  {
    "objectID": "01-introduction_to_r_page.html#what-do-we-need",
    "href": "01-introduction_to_r_page.html#what-do-we-need",
    "title": "Introduction to R",
    "section": "",
    "text": "The R interpreter\n\nThe program that “interprets” R code and runs it\nVery bare-bones, essentially just a text field\nDoes not store code files for reproducibility\n\n\n\nprint(\"Hello, WU!\")\n\n[1] \"Hello, WU!\"\n\npaste0(\"One plus two is: \", 1 + 2)\n\n[1] \"One plus two is: 3\"\n\nc &lt;- data.frame(p = seq(0, 2 * pi, by = 0.001))\nc$h_x &lt;- 16 * sin(c$p)^3\nc$h_y &lt;- 13 * cos(c$p) - 5 * cos(2 * c$p) - 2 * cos(3 * c$p) - cos(4 * c$p)\nplot(c$h_x, c$h_y, type = \"l\", main = \"I &lt;3 R\", frame = F, xlab = NA, ylab = NA)\n\n\n\n\n\n\n\n\n\n\nAn Integrated Development Environment (IDE)\n\nMakes writing and storing R code easier (more fun!)\nThree options compatible with this course:\n\nR Studio Desktop (Recommended)\n\nFocused on R\nEasiest option\n\nVS Code\n\nRecommended if you (plan to) use other languages (Python, C++, Julia, etc.)\nNeeds extension for R but works well\n\nJupyterLab\n\n“Notebooks” for R, Python, and Julia\nOutput generated directly under code “cells”"
  },
  {
    "objectID": "01-introduction_to_r_page.html#if-you-already-know-r",
    "href": "01-introduction_to_r_page.html#if-you-already-know-r",
    "title": "Introduction to R",
    "section": "",
    "text": "My favorite R package\n\n\n\n\nDownload the presentation template my_favorite_r_package.qmd and the bibliography file data_literacy.bib from Canvas\nSelect a package that was useful to you in the past\nPrepare a short presentation about the package\n\nInclude examples of how to use the package\nShow in which situations that is useful"
  },
  {
    "objectID": "01-introduction_to_r_page.html#basic-workflow-r-studio",
    "href": "01-introduction_to_r_page.html#basic-workflow-r-studio",
    "title": "Introduction to R",
    "section": "",
    "text": "Ctrl + Enter to run current line of code (any cursor position)"
  },
  {
    "objectID": "01-introduction_to_r_page.html#basic-workflow-vs-code",
    "href": "01-introduction_to_r_page.html#basic-workflow-vs-code",
    "title": "Introduction to R",
    "section": "",
    "text": "Ctrl + Enter to run current line of code (any cursor position)"
  },
  {
    "objectID": "01-introduction_to_r_page.html#r-syntax-comments-assignment",
    "href": "01-introduction_to_r_page.html#r-syntax-comments-assignment",
    "title": "Introduction to R",
    "section": "",
    "text": "# This is a comment\nprint(\"Hi\") # also a comment\n\n[1] \"Hi\"\n\n## Assignment of varibale names\nx &lt;- 1\nx\n\n[1] 1\n\n## Missing values\nNA\n\n[1] NA\n\n## Vectors\ny &lt;- c(1, 2, 3, NA)\ny\n\n[1]  1  2  3 NA"
  },
  {
    "objectID": "01-introduction_to_r_page.html#functions",
    "href": "01-introduction_to_r_page.html#functions",
    "title": "Introduction to R",
    "section": "",
    "text": "## built-in\nsum(y)\n\n[1] NA\n\nsum(y, na.rm = FALSE)\n\n[1] NA\n\nsum(y, na.rm = TRUE)\n\n[1] 6\n\n## User functions\na_plus_b &lt;- function(a, b = 1) {\n    return(a + b)\n}\na_plus_b(y)\n\n[1]  2  3  4 NA\n\na_plus_b(y, 2)\n\n[1]  3  4  5 NA\n\na_plus_b(b = 2, a = y)\n\n[1]  3  4  5 NA\n\n## Functions provided by packages\n## Installation\n#install.packages(\"ineq\")\nineq::Gini(y)\n\n[1] 0.2222222\n\n## or\nlibrary(ineq)\nGini(y)\n\n[1] 0.2222222\n\n## Help \n?Gini"
  },
  {
    "objectID": "01-introduction_to_r_page.html#r-syntax-indexing-logic",
    "href": "01-introduction_to_r_page.html#r-syntax-indexing-logic",
    "title": "Introduction to R",
    "section": "",
    "text": "y[1]\n\n[1] 1\n\ny[-1]\n\n[1]  2  3 NA\n\ny[2:3]\n\n[1] 2 3\n\ny[c(1, 3, 4)]\n\n[1]  1  3 NA\n\nset.seed(1)\nx &lt;- y / 2 + rnorm(length(y))\ncbind(y, x)\n\n      y          x\n[1,]  1 -0.1264538\n[2,]  2  1.1836433\n[3,]  3  0.6643714\n[4,] NA         NA\n\ny &gt; 2\n\n[1] FALSE FALSE  TRUE    NA\n\ny &gt; 2 & x &gt; 0\n\n[1] FALSE FALSE  TRUE    NA\n\ny &gt; 2 | x &gt; 0\n\n[1] FALSE  TRUE  TRUE    NA\n\ny[y &gt; 2 | x &gt; 0]\n\n[1]  2  3 NA"
  },
  {
    "objectID": "01-introduction_to_r_page.html#r-syntax-loops-ranges",
    "href": "01-introduction_to_r_page.html#r-syntax-loops-ranges",
    "title": "Introduction to R",
    "section": "",
    "text": "## 'elem' is a temporary variable\nfor (elem in y) {\n    print(paste(\"Current y value is:\", elem))\n}\n\n[1] \"Current y value is: 1\"\n[1] \"Current y value is: 2\"\n[1] \"Current y value is: 3\"\n[1] \"Current y value is: NA\"\n\n## 'seq_along' returns a vector which indexes the argument\nfor (i in seq_along(y)) {\n    print(paste(\"Current y value is:\", y[i]))\n}\n\n[1] \"Current y value is: 1\"\n[1] \"Current y value is: 2\"\n[1] \"Current y value is: 3\"\n[1] \"Current y value is: NA\"\n\n## set.seed guarantees the same random numbers every time\nset.seed(1)\ntotal &lt;- 0\nwhile (total &lt; 1) {\n    ## runif generates random numbers between 0 and 1\n    total &lt;- total + runif(1)\n    print(paste(\"Current total value is:\", total))\n}\n\n[1] \"Current total value is: 0.2655086631421\"\n[1] \"Current total value is: 0.63763256277889\"\n[1] \"Current total value is: 1.21048592613079\"\n\n## ranges\n1:3\n\n[1] 1 2 3\n\n10:3\n\n[1] 10  9  8  7  6  5  4  3\n\nseq(3, 11, by = 2)\n\n[1]  3  5  7  9 11"
  },
  {
    "objectID": "01-introduction_to_r_page.html#r-syntax-conditional-logic",
    "href": "01-introduction_to_r_page.html#r-syntax-conditional-logic",
    "title": "Introduction to R",
    "section": "",
    "text": "z &lt;- -2:3\nfor (x in z) {\n  print(paste(\"x =\", x))\n    if (x &gt; 0) {\n        print(\"x is positive\")\n    } else if (x &gt; 2) {\n        print(\"x is greater than 2\")\n    } else if (x &lt; 0) {\n        print(\"x is negative\")\n    } else if (x == 0) {\n        print(\"x is zero\")\n    }\n}\n\n[1] \"x = -2\"\n[1] \"x is negative\"\n[1] \"x = -1\"\n[1] \"x is negative\"\n[1] \"x = 0\"\n[1] \"x is zero\"\n[1] \"x = 1\"\n[1] \"x is positive\"\n[1] \"x = 2\"\n[1] \"x is positive\"\n[1] \"x = 3\"\n[1] \"x is positive\"\n\nz[z &lt;= 0]\n\n[1] -2 -1  0\n\nz[z &gt;= 0]\n\n[1] 0 1 2 3\n\nz[z != 0]\n\n[1] -2 -1  1  2  3\n\nz[! z &lt; 0]\n\n[1] 0 1 2 3"
  },
  {
    "objectID": "01-introduction_to_r_page.html#exercise",
    "href": "01-introduction_to_r_page.html#exercise",
    "title": "Introduction to R",
    "section": "",
    "text": "Write your own function\n\n\n\n\nThe function should take two arguments a and b\nFirst, check if a and b have the same number of elements (see ?length)\n\nIf they have a different number of elements, return NA\n\nIterate over the elements of a and b and check which vector’s element is larger (or if they are equal)\nIf they are equal print the index of the element and “equal”\nIf the element in a is larger print the index of the elemnt and “a larger”\nIf the element in b is larger print the index of the elemnt and “b larger”\n\n\n\n\n\n\na &lt;- c(1, 2, 3)\nb &lt;- c(1, 2, 3, 4)\ncat(\"a is:\", a, \"\\n\")\n\na is: 1 2 3 \n\ncat(\"b is:\", b, \"\\n\")\n\nb is: 1 2 3 4 \n\ncat(\"Result:\\n\")\n\nResult:\n\nNA\n\n[1] NA\n\n\n\n\n\n\na &lt;- c(1, 2, 3)\nb &lt;- c(0, 2, 4)\ncat(\"a is:\", a, \"\\n\")\n\na is: 1 2 3 \n\ncat(\"b is:\", b, \"\\n\")\n\nb is: 0 2 4 \n\ncat(\"Result:\\n\")\n\nResult:\n\nprint(\"1 a larger\")\n\n[1] \"1 a larger\"\n\nprint(\"2 equal\")\n\n[1] \"2 equal\"\n\nprint(\"3 b larger\")\n\n[1] \"3 b larger\""
  },
  {
    "objectID": "01-introduction_to_r_page.html#rectangular-data-frames-creation-and-access",
    "href": "01-introduction_to_r_page.html#rectangular-data-frames-creation-and-access",
    "title": "Introduction to R",
    "section": "",
    "text": "data &lt;- data.frame(x = -1:1, y = 3:1, z = c(\"a\", \"b\", NA))\ndata\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;\n\nclass(data)\n\n[1] \"data.frame\"\n\n## Variable access\ndata$x\n\n[1] -1  0  1\n\ndata$x + data$y\n\n[1] 2 2 2\n\nrow_summaries &lt;- with(data, \n  data.frame(\n    rsum = x + y,\n    rdiff = x - y\n  ))\nrow_summaries\n\n  rsum rdiff\n1    2    -4\n2    2    -2\n3    2     0"
  },
  {
    "objectID": "01-introduction_to_r_page.html#rectangular-data-frames-overview",
    "href": "01-introduction_to_r_page.html#rectangular-data-frames-overview",
    "title": "Introduction to R",
    "section": "",
    "text": "str(data)\n\n'data.frame':   3 obs. of  3 variables:\n $ x: int  -1 0 1\n $ y: int  3 2 1\n $ z: chr  \"a\" \"b\" NA\n\nsummary(data)\n\n       x              y            z            \n Min.   :-1.0   Min.   :1.0   Length:3          \n 1st Qu.:-0.5   1st Qu.:1.5   Class :character  \n Median : 0.0   Median :2.0   Mode  :character  \n Mean   : 0.0   Mean   :2.0                     \n 3rd Qu.: 0.5   3rd Qu.:2.5                     \n Max.   : 1.0   Max.   :3.0                     \n\nhead(data)\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;"
  },
  {
    "objectID": "01-introduction_to_r_page.html#rectangular-data-frames-indexing",
    "href": "01-introduction_to_r_page.html#rectangular-data-frames-indexing",
    "title": "Introduction to R",
    "section": "",
    "text": "## 2D structure of data\n## Empty argument means \"all\"#| \ndata[, c(\"x\", \"y\")]\n\n   x y\n1 -1 3\n2  0 2\n3  1 1\n\ndata[1:3, c(\"x\", \"y\")]\n\n   x y\n1 -1 3\n2  0 2\n3  1 1\n\ndata[1, ]\n\n   x y z\n1 -1 3 a\n\ndata[c(1, 3), c(\"x\", \"z\")]\n\n   x    z\n1 -1    a\n3  1 &lt;NA&gt;\n\ndata[data$x &lt; 3,]\n\n   x y    z\n1 -1 3    a\n2  0 2    b\n3  1 1 &lt;NA&gt;"
  },
  {
    "objectID": "01-introduction_to_r_page.html#rectangular-data-adding-and-removing-variables",
    "href": "01-introduction_to_r_page.html#rectangular-data-adding-and-removing-variables",
    "title": "Introduction to R",
    "section": "",
    "text": "## new data has to have the same number of elements\ndata$a &lt;- 2 * data$x\ndata\n\n   x y    z  a\n1 -1 3    a -2\n2  0 2    b  0\n3  1 1 &lt;NA&gt;  2\n\ndata$b &lt;- c(\"one\", \"two\", \"three\")\ndata\n\n   x y    z  a     b\n1 -1 3    a -2   one\n2  0 2    b  0   two\n3  1 1 &lt;NA&gt;  2 three\n\ndata$x &lt;- NULL\ndata\n\n  y    z  a     b\n1 3    a -2   one\n2 2    b  0   two\n3 1 &lt;NA&gt;  2 three\n\ndata$a &lt;- log(data$a)\n\nWarning in log(data$a): NaNs produced\n\ndata\n\n  y    z         a     b\n1 3    a       NaN   one\n2 2    b      -Inf   two\n3 1 &lt;NA&gt; 0.6931472 three\n\ndata$b[data$b == \"two\"] &lt;- \"TWO!\"\ndata$z[is.na(data$z)] &lt;- \"c\"\ndata$a[is.nan(data$a)] &lt;- 0\ndata\n\n  y z         a     b\n1 3 a 0.0000000   one\n2 2 b      -Inf  TWO!\n3 1 c 0.6931472 three"
  },
  {
    "objectID": "01-introduction_to_r_page.html#exercise-1",
    "href": "01-introduction_to_r_page.html#exercise-1",
    "title": "Introduction to R",
    "section": "",
    "text": "Generate your own data\n\n\n\n\nLook at the helpfiles of rnorm, runif, and ifelse\nCreate a data.frame with 10 rows and variables x, generated using runif and y, generated using rnorm\nAdd variable z which takes the value 1 if x is larger than y and 0 otherwise\nCreate a second data.frame that holds the rows of the original one for which z == 1 is TRUE.\nRemove column z from the second data.frame\nWhat happens if you try to create a data.frame when x and y have a differnent number of elements?\nWhat happens if you run the code you wrote for this exercise again (and again)?\nHow can you ensure that each run yields the same results?"
  },
  {
    "objectID": "01-introduction_to_r_page.html#reading-data",
    "href": "01-introduction_to_r_page.html#reading-data",
    "title": "Introduction to R",
    "section": "",
    "text": "Please download & unzip the folder found in “data” in Canvas\nWe will first use the “penguins” folder which includes the penguins_raw data set in multiple file formats\n\n\n## CSV\npenguins_raw &lt;- readr::read_csv(\"data/penguins/penguins_raw.csv\")\n\nNew names:\n• `` -&gt; `...1`\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 345 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): ...1, studyName, Species, Region, Island, Stage, Individual ID, C...\ndbl   (7): Sample Number, Culmen Length (mm), Culmen Depth (mm), Flipper Len...\ndate  (1): Date Egg\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n  ...1     studyName `Sample Number` Species Region Island Stage `Individual ID`\n  &lt;chr&gt;    &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 # this … &lt;NA&gt;                   NA &lt;NA&gt;    &lt;NA&gt;   &lt;NA&gt;   &lt;NA&gt;  &lt;NA&gt;           \n2 1        PAL0708                 1 Adelie… Anvers Torge… Adul… N1A1           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n\n. . .\n\npenguins_raw[1,1]\n\n# A tibble: 1 × 1\n  ...1                                              \n  &lt;chr&gt;                                             \n1 # this is a comment making the data harder to read\n\n\n\n\n\n\n\n\nFix the data\n\n\n\n\nThe second row (after the column names) in the penguins_raw.csv file is a comment\nLook at the help file for the readr::read_csv function (?readr::read_csv)\nHow can we ignore the comment row?"
  },
  {
    "objectID": "01-introduction_to_r_page.html#reading-data-solution",
    "href": "01-introduction_to_r_page.html#reading-data-solution",
    "title": "Introduction to R",
    "section": "",
    "text": "## CSV\npenguins_raw &lt;- readr::read_csv(\n  \"data/penguins/penguins_raw.csv\",\n  comment = \"#\")\n\nNew names:\nRows: 344 Columns: 18\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(9): studyName, Species, Region, Island, Stage, Individual ID, Clutch C... dbl\n(8): ...1, Sample Number, Culmen Length (mm), Culmen Depth (mm), Flippe... date\n(1): Date Egg\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n   ...1 studyName `Sample Number` Species    Region Island Stage `Individual ID`\n  &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1     1 PAL0708                 1 Adelie Pe… Anvers Torge… Adul… N1A1           \n2     2 PAL0708                 2 Adelie Pe… Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\npenguins_raw[1,1]\n\n# A tibble: 1 × 1\n   ...1\n  &lt;dbl&gt;\n1     1\n\nstr(penguins_raw)\n\nspc_tbl_ [344 × 18] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ...1               : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ studyName          : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ Sample Number      : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ Species            : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ Region             : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ Island             : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ Stage              : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ Individual ID      : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ Clutch Completion  : chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ Date Egg           : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ Culmen Length (mm) : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ Culmen Depth (mm)  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ Flipper Length (mm): num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ Body Mass (g)      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ Sex                : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ Delta 15 N (o/oo)  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ Delta 13 C (o/oo)  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ Comments           : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ...1 = col_double(),\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt;"
  },
  {
    "objectID": "01-introduction_to_r_page.html#reading-data-other-file-formats",
    "href": "01-introduction_to_r_page.html#reading-data-other-file-formats",
    "title": "Introduction to R",
    "section": "",
    "text": "The readxl package provides functions for reading Excel files\n\n\npenguins_raw &lt;- readxl::read_excel(\"data/penguins/penguins_raw.xlsx\")\n\nNew names:\n• `` -&gt; `...1`\n\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 18\n  ...1  studyName `Sample Number` Species    Region Island Stage `Individual ID`\n  &lt;chr&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 1     PAL0708                 1 Adelie Pe… Anvers Torge… Adul… N1A1           \n2 2     PAL0708                 2 Adelie Pe… Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;dttm&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n## Read a subset \npenguins_subset &lt;- readxl::read_excel(\"data/penguins/penguins_raw.xlsx\", sheet = \"Sheet1\", range = \"B1:O345\")\nhead(penguins_subset, 2)\n\n# A tibble: 2 × 14\n  studyName `Sample Number` Species          Region Island Stage `Individual ID`\n  &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 PAL0708                 1 Adelie Penguin … Anvers Torge… Adul… N1A1           \n2 PAL0708                 2 Adelie Penguin … Anvers Torge… Adul… N1A2           \n# ℹ 7 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;dttm&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;"
  },
  {
    "objectID": "01-introduction_to_r_page.html#reading-data-other-file-formats-1",
    "href": "01-introduction_to_r_page.html#reading-data-other-file-formats-1",
    "title": "Introduction to R",
    "section": "",
    "text": "The haven package provides functions for reading SPSS, Stata, and SAS files\nIt looks like SPSS does not support spaces in column names so this is slightly different\n\n\npenguins_raw &lt;- haven::read_sav(\"data/penguins/penguins_raw.sav\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;"
  },
  {
    "objectID": "01-introduction_to_r_page.html#reading-big-data-the-arrow-package",
    "href": "01-introduction_to_r_page.html#reading-big-data-the-arrow-package",
    "title": "Introduction to R",
    "section": "",
    "text": "The arrow package provides functions for reading Parquet and Feather files\nOptimized formats used in many data science projects\nProvides facility to read from “object storage” (e.g., Amazon S3)\n\n\nThe major benefits of object storage are the virtually unlimited scalability and the lower cost of storing large volumes of data for use cases such as data lakes, cloud native applications, analytics, log files, and machine learning (ML). 1\n\n\nRule of thumb:\n\nuse parquet for large files and long term storage\n\noptimized file size\n\nuse feather for optimized reading and short term storage\n\nmemory layout the same as in the process"
  },
  {
    "objectID": "01-introduction_to_r_page.html#reading-big-data-the-arrow-package-1",
    "href": "01-introduction_to_r_page.html#reading-big-data-the-arrow-package-1",
    "title": "Introduction to R",
    "section": "",
    "text": "penguins_raw &lt;- arrow::read_parquet(\"data/penguins/penguins_raw.parquet\")\npenguins_raw &lt;- arrow::read_feather(\"data/penguins/penguins_raw.feather\")\nhead(penguins_raw, 2)\n\n# A tibble: 2 × 17\n  studyName `Sample Number` Species          Region Island Stage `Individual ID`\n  &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n1 PAL0708                 1 Adelie Penguin … Anvers Torge… Adul… N1A1           \n2 PAL0708                 2 Adelie Penguin … Anvers Torge… Adul… N1A2           \n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n\n\nSupport for complex data structures\n\n\npenguin_species_island &lt;- arrow::read_parquet('data/penguins/penguin_species_nested.parquet')\nhead(penguin_species_island, 2)\n\n# A tibble: 2 × 2\n  Island                                 data\n  &lt;chr&gt;     &lt;list&lt;tbl_df&lt;Species:character&gt;&gt;&gt;\n1 Torgersen                          [52 × 1]\n2 Biscoe                            [168 × 1]\n\nhead(tidyr::unnest(penguin_species_island), 2)\n\nWarning: `cols` is now required when using `unnest()`.\nℹ Please use `cols = c(data)`.\n\n\n# A tibble: 2 × 2\n  Island    Species                            \n  &lt;chr&gt;     &lt;chr&gt;                              \n1 Torgersen Adelie Penguin (Pygoscelis adeliae)\n2 Torgersen Adelie Penguin (Pygoscelis adeliae)"
  },
  {
    "objectID": "01-introduction_to_r_page.html#benchmarks",
    "href": "01-introduction_to_r_page.html#benchmarks",
    "title": "Introduction to R",
    "section": "",
    "text": "library(microbenchmark)\nmicrobenchmark(\n  csv = readr::read_csv(\"data/penguins/penguins_raw.csv\", \n   show_col_types = FALSE, name_repair = 'minimal'),\n  parquet = arrow::read_parquet(\"data/penguins/penguins_raw.parquet\"),\n  feather = arrow::read_feather(\"data/penguins/penguins_raw.feather\")\n) \n\nWarning in microbenchmark(csv =\nreadr::read_csv(\"data/penguins/penguins_raw.csv\", : less accurate nanosecond\ntimes to avoid potential integer overflows\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nUnit: milliseconds\n    expr     min       lq     mean   median       uq       max neval cld\n     csv 7.57926 7.868412 8.300206 7.994467 8.246842 11.847032   100 a  \n parquet 1.71585 1.867591 1.974616 1.937373 2.024211  4.510369   100  b \n feather 1.33168 1.431679 1.559638 1.479936 1.540678  4.132226   100   c"
  },
  {
    "objectID": "01-introduction_to_r_page.html#data-types",
    "href": "01-introduction_to_r_page.html#data-types",
    "title": "Introduction to R",
    "section": "",
    "text": "The most important types of data are:\n\n\n\n\n\n\n\nData type\nDescription\n\n\n\n\nNumeric\nApproximations of the real numbers, \\(\\normalsize\\mathbb{R}\\) (e.g., mileage a car gets: 23.6, 20.9, etc.)\n\n\nInteger\nWhole numbers, \\(\\normalsize\\mathbb{Z}\\) (e.g., number of sales: 7, 0, 120, 63, etc.)\n\n\nCharacter\nText data (strings, e.g., product names)\n\n\nFactor\nCategorical data for classification (e.g., product groups)\n\n\nLogical\nTRUE, FALSE\n\n\nDate\nDate variables (e.g., sales dates: 21-06-2015, 06-21-15, 21-Jun-2015, etc.)\n\n\n\nVariables can be converted from one type to another using the appropriate functions (e.g., as.numeric(), as.integer(), as.character(), as.factor(), as.logical(), as.Date())."
  },
  {
    "objectID": "01-introduction_to_r_page.html#lets-clean-up-the-penguins",
    "href": "01-introduction_to_r_page.html#lets-clean-up-the-penguins",
    "title": "Introduction to R",
    "section": "",
    "text": "str(penguins_raw)\n\ntibble [344 × 17] (S3: tbl_df/tbl/data.frame)\n $ studyName          : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ Sample Number      : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ Species            : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ Region             : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ Island             : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ Stage              : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ Individual ID      : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ Clutch Completion  : chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ Date Egg           : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ Culmen Length (mm) : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ Culmen Depth (mm)  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ Flipper Length (mm): num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ Body Mass (g)      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ Sex                : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ Delta 15 N (o/oo)  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ Delta 13 C (o/oo)  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ Comments           : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n\n\n\nClean the column names\n\n\npenguins &lt;- janitor::clean_names(penguins_raw)\nstr(penguins)\n\ntibble [344 × 17] (S3: tbl_df/tbl/data.frame)\n $ study_name       : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ sample_number    : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ species          : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ region           : chr [1:344] \"Anvers\" \"Anvers\" \"Anvers\" \"Anvers\" ...\n $ island           : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ stage            : chr [1:344] \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" \"Adult, 1 Egg Stage\" ...\n $ individual_id    : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ clutch_completion: chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ date_egg         : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ culmen_length_mm : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ culmen_depth_mm  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ sex              : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ delta_15_n_o_oo  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ delta_13_c_o_oo  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ comments         : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )"
  },
  {
    "objectID": "01-introduction_to_r_page.html#data-preprocessing-syntax",
    "href": "01-introduction_to_r_page.html#data-preprocessing-syntax",
    "title": "Introduction to R",
    "section": "",
    "text": "|&gt; is the “pipe” operator\n\nIt takes the result of the left side and passes it to the right side as the first argument\nVery useful when “chaining” multiple operations\n\n\n\npenguins |&gt;\n  head(2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;\n\nhead(penguins, 2)\n\n# A tibble: 2 × 17\n  study_name sample_number species             region island stage individual_id\n  &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        \n1 PAL0708                1 Adelie Penguin (Py… Anvers Torge… Adul… N1A1         \n2 PAL0708                2 Adelie Penguin (Py… Anvers Torge… Adul… N1A2         \n# ℹ 10 more variables: clutch_completion &lt;chr&gt;, date_egg &lt;date&gt;,\n#   culmen_length_mm &lt;dbl&gt;, culmen_depth_mm &lt;dbl&gt;, flipper_length_mm &lt;dbl&gt;,\n#   body_mass_g &lt;dbl&gt;, sex &lt;chr&gt;, delta_15_n_o_oo &lt;dbl&gt;, delta_13_c_o_oo &lt;dbl&gt;,\n#   comments &lt;chr&gt;"
  },
  {
    "objectID": "01-introduction_to_r_page.html#data-preprocessing-mutation",
    "href": "01-introduction_to_r_page.html#data-preprocessing-mutation",
    "title": "Introduction to R",
    "section": "",
    "text": "Pkg: dplyr provides function for data.frame manipulation\nPkg: stringr provides functions to manipulate strings (characters)\nfn: mutate takes each row and applies a function to create a new (or overwrite a) column\nfn: select selects columns\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(stringr)\npenguins_subset &lt;- penguins |&gt;\n  mutate(\n    species = str_split(species, \" \", n = 2, simplify = TRUE)[,1],\n    is_adult = str_detect(str_to_lower(stage), \"adult\"),\n    is_female = str_detect(str_to_lower(sex), \"female\"),\n    sex = str_to_lower(sex)) |&gt;\n  select(species, island, sex, is_adult,  culmen_length_mm, culmen_depth_mm, is_female)\npenguins_subset |&gt; head(2)\n\n# A tibble: 2 × 7\n  species island    sex    is_adult culmen_length_mm culmen_depth_mm is_female\n  &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;  &lt;lgl&gt;               &lt;dbl&gt;           &lt;dbl&gt; &lt;lgl&gt;    \n1 Adelie  Torgersen male   TRUE                 39.1            18.7 FALSE    \n2 Adelie  Torgersen female TRUE                 39.5            17.4 TRUE"
  },
  {
    "objectID": "01-introduction_to_r_page.html#data-preprocessing-multiple-columns",
    "href": "01-introduction_to_r_page.html#data-preprocessing-multiple-columns",
    "title": "Introduction to R",
    "section": "",
    "text": "#penguins_subset &lt;- \npenguins_subset &lt;- penguins_subset |&gt;\n  mutate(\n    across(starts_with('culmen'), \\(x) x / 10),\n    across(species:sex, as.factor),\n    across(c('is_adult', 'is_female'), as.numeric)\n    ) |&gt;\n  mutate_if(is.numeric,\n    list(scaled = \\(x) (x - mean(x, na.rm=TRUE)) / sd(x, na.rm=TRUE))\n  ) |&gt;\n  rename_with(\n    \\(name) str_replace(name, \"mm\", \"cm\"),\n    starts_with('culmen'))\npenguins_subset |&gt; select(-starts_with('is')) |&gt; str()\n\ntibble [344 × 6] (S3: tbl_df/tbl/data.frame)\n $ species                : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ sex                    : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ culmen_length_cm       : num [1:344] 3.91 3.95 4.03 NA 3.67 3.93 3.89 3.92 3.41 4.2 ...\n $ culmen_depth_cm        : num [1:344] 1.87 1.74 1.8 NA 1.93 2.06 1.78 1.96 1.81 2.02 ...\n $ culmen_length_cm_scaled: num [1:344] -0.883 -0.81 -0.663 NA -1.323 ...\n $ culmen_depth_cm_scaled : num [1:344] 0.784 0.126 0.43 NA 1.088 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )"
  },
  {
    "objectID": "01-introduction_to_r_page.html#hint-figuring-out-what-is-going-on",
    "href": "01-introduction_to_r_page.html#hint-figuring-out-what-is-going-on",
    "title": "Introduction to R",
    "section": "",
    "text": "Split the problem into smaller pieces\n\n\n\\(name) str_replace(name, \"mm\", \"cm\")\n\n\\(name) str_replace(name, \"mm\", \"cm\")\n\nstr_replace(\"ammm\", \"mm\", \"cm\")\n\n[1] \"acmm\"\n\n\n\nCheck help files\n\n\n?str_replace\n\n\nCheck typeof() and class()\n\n\ntypeof(\\(name) str_replace(name, \"mm\", \"cm\"))\n\n[1] \"closure\"\n\n\n\\(\\rightarrow\\) closures are functions\n\nSee if you can produce some outcome on the reduced problem\n\n\nmy_function &lt;- \\(name) str_replace(name, \"mm\", \"cm\")\nmy_function('here are some mms')\n\n[1] \"here are some cms\""
  },
  {
    "objectID": "01-introduction_to_r_page.html#hint-read-the-source-code",
    "href": "01-introduction_to_r_page.html#hint-read-the-source-code",
    "title": "Introduction to R",
    "section": "",
    "text": "This is only useful if a function is pure R code\n\n\nstr_replace\n\nfunction (string, pattern, replacement) \n{\n    if (!missing(replacement) && is_replacement_fun(replacement)) {\n        replacement &lt;- as_function(replacement)\n        return(str_transform(string, pattern, replacement))\n    }\n    check_lengths(string, pattern, replacement)\n    switch(type(pattern), empty = no_empty(), bound = no_boundary(), \n        fixed = stri_replace_first_fixed(string, pattern, replacement, \n            opts_fixed = opts(pattern)), coll = stri_replace_first_coll(string, \n            pattern, replacement, opts_collator = opts(pattern)), \n        regex = stri_replace_first_regex(string, pattern, fix_replacement(replacement), \n            opts_regex = opts(pattern)))\n}\n&lt;bytecode: 0x1607ef8b8&gt;\n&lt;environment: namespace:stringr&gt;"
  },
  {
    "objectID": "01-introduction_to_r_page.html#aside-functions-and-variable-names",
    "href": "01-introduction_to_r_page.html#aside-functions-and-variable-names",
    "title": "Introduction to R",
    "section": "",
    "text": "Common mistake that leads to cryptic error:\n\n\nmeans &lt;- c(4,5,6)\nmean[1]\n\nError in mean[1]: object of type 'closure' is not subsettable"
  },
  {
    "objectID": "01-introduction_to_r_page.html#reducing-rows-filtering",
    "href": "01-introduction_to_r_page.html#reducing-rows-filtering",
    "title": "Introduction to R",
    "section": "",
    "text": "Create different subsets of data\n“Filter in” (not out) \\(\\rightarrow\\) TRUE rows remain\n\n\nadelies &lt;- penguins_subset |&gt;\n  filter(species == \"Adelie\")\nunique(adelies$species)\n\n[1] Adelie\nLevels: Adelie Chinstrap Gentoo\n\nfemale_adelies &lt;- penguins_subset |&gt;\n  filter(species == \"Adelie\", is_female == 1)\nfemale_adelies |&gt; select(species, sex) |&gt; summary()\n\n      species       sex    \n Adelie   :73   female:73  \n Chinstrap: 0   male  : 0  \n Gentoo   : 0"
  },
  {
    "objectID": "01-introduction_to_r_page.html#reducing-rows-summarizing",
    "href": "01-introduction_to_r_page.html#reducing-rows-summarizing",
    "title": "Introduction to R",
    "section": "",
    "text": "Calculate any appropriate summary for a variable\n\n\nlibrary(tidyr)\npenguins |&gt;\n  drop_na(body_mass_g) |&gt;\n  summarize(avg_weight = mean(body_mass_g))\n\n# A tibble: 1 × 1\n  avg_weight\n       &lt;dbl&gt;\n1      4202.\n\n\n\nCalculate the summary for each group\n\n\npenguins_summary &lt;- penguins_subset |&gt;\n  drop_na(culmen_length_cm) |&gt;\n  group_by(species, sex) |&gt;\n  summarize(avg_clength = mean(culmen_length_cm))\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\npenguins_summary\n\n# A tibble: 8 × 3\n# Groups:   species [3]\n  species   sex    avg_clength\n  &lt;fct&gt;     &lt;fct&gt;        &lt;dbl&gt;\n1 Adelie    female        3.73\n2 Adelie    male          4.04\n3 Adelie    &lt;NA&gt;          3.78\n4 Chinstrap female        4.66\n5 Chinstrap male          5.11\n6 Gentoo    female        4.56\n7 Gentoo    male          4.95\n8 Gentoo    &lt;NA&gt;          4.56"
  },
  {
    "objectID": "01-introduction_to_r_page.html#pivot-tables",
    "href": "01-introduction_to_r_page.html#pivot-tables",
    "title": "Introduction to R",
    "section": "",
    "text": "penguins_summary |&gt;\n  pivot_wider(names_from = species, values_from = avg_clength) \n\n# A tibble: 3 × 4\n  sex    Adelie Chinstrap Gentoo\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n1 female   3.73      4.66   4.56\n2 male     4.04      5.11   4.95\n3 &lt;NA&gt;     3.78     NA      4.56\n\npenguins_wide &lt;- penguins_subset |&gt;\n  drop_na(culmen_length_cm) |&gt;\n  select(culmen_length_cm, species, sex) |&gt;\n  pivot_wider(values_from = culmen_length_cm, names_from = species, values_fn = mean) |&gt;\n  arrange(sex) |&gt;\n  select(sex, Adelie, Chinstrap, Gentoo)\npenguins_wide\n\n# A tibble: 3 × 4\n  sex    Adelie Chinstrap Gentoo\n  &lt;fct&gt;   &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n1 female   3.73      4.66   4.56\n2 male     4.04      5.11   4.95\n3 &lt;NA&gt;     3.78     NA      4.56\n\npivot_longer(penguins_wide, cols = -sex, names_to = \"species\", values_to = \"avg_clength\")\n\n# A tibble: 9 × 3\n  sex    species   avg_clength\n  &lt;fct&gt;  &lt;chr&gt;           &lt;dbl&gt;\n1 female Adelie           3.73\n2 female Chinstrap        4.66\n3 female Gentoo           4.56\n4 male   Adelie           4.04\n5 male   Chinstrap        5.11\n6 male   Gentoo           4.95\n7 &lt;NA&gt;   Adelie           3.78\n8 &lt;NA&gt;   Chinstrap       NA   \n9 &lt;NA&gt;   Gentoo           4.56"
  },
  {
    "objectID": "01-introduction_to_r_page.html#exercise-2",
    "href": "01-introduction_to_r_page.html#exercise-2",
    "title": "Introduction to R",
    "section": "",
    "text": "Become the Ornithologist\n\n\n\n\nRead the penguins_raw.feather file\nRemove all whitespace and special characters from the column names\nCalculate the body mass for each penguin in kg\nCreate a pivot-table with the median (?median) body mass for each species on each island\n\nthe island names should be in the first column\nthe species names should be the remaining columns\n\nRepeat the analysis but only for female penguins\n\n\n\n\n\n\n\n\n\nBecome the music manager\n\n\n\n\nRead the top10_charts.csv in chart_data\nWhat is the range of dates in this dataset? (Hint: ?min, ?max)\nWhat is the top region in terms of streams overall? (Hint: ?slice_max)\nCreate a pivot-table of the total streams (in this dataset) within a region on a given day (1st column day, remaining columns region names, values total streams)"
  },
  {
    "objectID": "01-introduction_to_r_page.html#merging-data-i",
    "href": "01-introduction_to_r_page.html#merging-data-i",
    "title": "Introduction to R",
    "section": "",
    "text": "Often we have two separate datasets with corresponding groups of rows\n\nStreams, trackID in top10_charts.csv and Song metadata, trackID in top10_meta.csv\npurchaseid, customerid in noahs-orders.csv and productid, purchaseid in noahs-orders_items.csv and customerid, customer metadata in noahs-customers.csv\n\nCombine data using joins\n\n\ncharts &lt;- readr::read_csv(\"data/chart_data/top10_charts.csv\")\n\nRows: 7320 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): trackID, region, isrc\ndbl  (3): rank, streams, dayNumber\ndate (1): day\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsongs &lt;- readr::read_csv(\"data/chart_data/top10_meta.csv\")\n\nRows: 347 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (12): trackID, trackName, artistName, artistIds, isrc, primary_artistNa...\ndbl  (16): explicit, trackPopularity, n_available_markets, danceability, ene...\ndate  (1): releaseDate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nstr(charts, give.attr=FALSE)\n\nspc_tbl_ [7,320 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ trackID  : chr [1:7320] \"012iHyRvQQquWQGUTYvDxy\" \"017PF4Q3l4DBUiWoXk4OWT\" \"017PF4Q3l4DBUiWoXk4OWT\" \"017PF4Q3l4DBUiWoXk4OWT\" ...\n $ rank     : num [1:7320] 7 6 7 7 7 8 9 9 10 10 ...\n $ streams  : num [1:7320] 26234 4276985 3688979 3255639 3478044 ...\n $ day      : Date[1:7320], format: \"2020-08-14\" \"2020-03-27\" ...\n $ dayNumber: num [1:7320] 1318 1178 1179 1180 1181 ...\n $ region   : chr [1:7320] \"at\" \"global\" \"global\" \"global\" ...\n $ isrc     : chr [1:7320] \"DEUM72004523\" \"GBAHT1901303\" \"GBAHT1901303\" \"GBAHT1901303\" ...\n\nstr(songs, give.attr=FALSE)\n\nspc_tbl_ [347 × 29] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ trackID              : chr [1:347] \"012iHyRvQQquWQGUTYvDxy\" \"017PF4Q3l4DBUiWoXk4OWT\" \"01I9AEz658sQnQzCL3K3QG\" \"033if6Adj8fwBYsQzHOfQ8\" ...\n $ trackName            : chr [1:347] \"Fall Auf\" \"Break My Heart\" \"HOES UP G'S DOWN\" \"100k Cash\" ...\n $ artistName           : chr [1:347] \"Cro feat. badchieff\" \"Dua Lipa\" \"Shirin David\" \"Capital Bra feat. Samra\" ...\n $ artistIds            : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu,6GoNVmYCl0yUm4pEp80vn6\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d,6h1s4i4XKIYv4ErDelLDN0\" ...\n $ isrc                 : chr [1:347] \"DEUM72004523\" \"GBAHT1901303\" \"DECE72000379\" \"DECE72000176\" ...\n $ explicit             : num [1:347] 0 0 1 0 0 0 0 1 0 0 ...\n $ trackPopularity      : num [1:347] 64 83 75 71 69 82 70 74 89 79 ...\n $ primary_artistName   : chr [1:347] \"Cro\" \"Dua Lipa\" \"Shirin David\" \"Capital Bra\" ...\n $ primary_artistID     : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d\" ...\n $ artistIDs            : chr [1:347] \"3utZ2yeQk0Z3BCOBWP7Vlu,6GoNVmYCl0yUm4pEp80vn6\" \"6M2wZ9GZgrQXHCFfjv46we\" \"0JBdTCGs111JKKYfLqOEBa\" \"4WZGDpNwrC0vNQyl9QzF7d,6h1s4i4XKIYv4ErDelLDN0\" ...\n $ albumName            : chr [1:347] \"Fall Auf\" \"Future Nostalgia\" \"HOES UP G'S DOWN\" \"100k Cash\" ...\n $ albumID              : chr [1:347] \"1qdHQo41Vkkgs8HtMk5b96\" \"7fJJK56U9fHixgO0HQkhtI\" \"15Njx2PcwnNsI65fnbM7Pw\" \"5cqwoGrjFr3VKYZ9ZC0eL2\" ...\n $ available_markets    : chr [1:347] \"AD, AE, AL, AR, AT, AU, BA, BE, BG, BH, BO, BR, BY, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES,\"| __truncated__ \"AD, AE, AR, AU, BE, BG, BH, BO, BR, CA, CL, CO, CR, CY, CZ, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB, GR, GT, HK,\"| __truncated__ \"AD, AE, AR, AT, AU, BE, BG, BH, BO, BR, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB,\"| __truncated__ \"AD, AE, AR, AT, AU, BE, BG, BH, BO, BR, CA, CH, CL, CO, CR, CY, CZ, DE, DK, DO, DZ, EC, EE, EG, ES, FI, FR, GB,\"| __truncated__ ...\n $ n_available_markets  : num [1:347] 92 76 79 79 87 79 3 79 92 92 ...\n $ releaseDate          : Date[1:347], format: \"2020-08-13\" \"2020-03-27\" ...\n $ releaseDate_precision: chr [1:347] \"day\" \"day\" \"day\" \"day\" ...\n $ danceability         : num [1:347] 0.5 0.73 0.73 0.701 0.84 0.795 0.814 0.774 0.641 0.571 ...\n $ energy               : num [1:347] 0.743 0.729 0.777 0.714 0.648 0.607 0.794 0.805 0.324 0.693 ...\n $ key                  : num [1:347] 2 4 1 10 10 7 7 11 11 6 ...\n $ loudness             : num [1:347] -6.65 -3.43 -6.38 -5.91 -5.54 ...\n $ mode                 : num [1:347] 1 0 0 1 0 1 1 0 1 0 ...\n $ speechiness          : num [1:347] 0.0373 0.0886 0.29 0.524 0.0489 0.23 0.0887 0.302 0.0299 0.0545 ...\n $ acousticness         : num [1:347] 0.307 0.167 0.0455 0.289 0.101 0.128 0.119 0.0509 0.698 0.0054 ...\n $ instrumentalness     : num [1:347] 0.00 1.39e-06 1.10e-03 0.00 1.00e-04 1.90e-01 9.00e-04 0.00 0.00 0.00 ...\n $ liveness             : num [1:347] 0.133 0.349 0.0759 0.0883 0.0996 0.111 0.348 0.149 0.328 0.173 ...\n $ valence              : num [1:347] 0.332 0.467 0.578 0.604 0.431 0.25 0.647 0.261 0.273 0.393 ...\n $ tempo                : num [1:347] 166.3 113 177.9 86.9 103 ...\n $ duration_ms          : num [1:347] 191827 221820 130307 173353 124690 ...\n $ time_signature       : num [1:347] 4 4 4 4 4 4 4 4 4 4 ..."
  },
  {
    "objectID": "01-introduction_to_r_page.html#merging-data-ii",
    "href": "01-introduction_to_r_page.html#merging-data-ii",
    "title": "Introduction to R",
    "section": "",
    "text": "The name of the join determines which “ids” are kept\nleft_join keeps all rows that have an id in the left dataset\ninner_join only keeps rows with ids in both datasets\n\n\ndata1 &lt;- data.frame(group = c('a', 'a', 'b','c'), value = c(1,2,3,4)) # missing group 'd'\ndata2 &lt;- data.frame(group2 = c('a', 'c', 'd'), value2 = factor(c(\"abc\", \"def\", \"ghi\"))) # missing group 'b'\n\nleft_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     b     3   &lt;NA&gt;\n4     c     4    def\n\nright_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     c     4    def\n4     d    NA    ghi\n\ninner_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     c     4    def"
  },
  {
    "objectID": "01-introduction_to_r_page.html#special-joins",
    "href": "01-introduction_to_r_page.html#special-joins",
    "title": "Introduction to R",
    "section": "",
    "text": "full_join returns all rows from both datasets\nsemi_join returns only the columns of the left dataset and filters rows with id in the right dataset\nanti_join keeps only rows that do not have an id in the right table\n\n\nfull_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value value2\n1     a     1    abc\n2     a     2    abc\n3     b     3   &lt;NA&gt;\n4     c     4    def\n5     d    NA    ghi\n\nsemi_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value\n1     a     1\n2     a     2\n3     c     4\n\nfilter(data1, group %in% data2$group2)\n\n  group value\n1     a     1\n2     a     2\n3     c     4\n\nanti_join(data1, data2, by = c(\"group\" = \"group2\"))\n\n  group value\n1     b     3"
  },
  {
    "objectID": "01-introduction_to_r_page.html#exercise-3",
    "href": "01-introduction_to_r_page.html#exercise-3",
    "title": "Introduction to R",
    "section": "",
    "text": "BE the music manager\n\n\n\n\nWho are the top 10 artists in terms of total global streams?\nWhat is their most succesful song?\nFor how many songs are do we not have meta data?\nHow many songs are there in the data? (Hint: ?n_distinct, or ?length, ?unique)\nSave the combined data as top10_all.parquet"
  },
  {
    "objectID": "01-introduction_to_r_page.html#references",
    "href": "01-introduction_to_r_page.html#references",
    "title": "Introduction to R",
    "section": "",
    "text": "Links\n\nR Logo\nNoah’s Database\n\nBibliography"
  },
  {
    "objectID": "01-introduction_to_r_page.html#footnotes",
    "href": "01-introduction_to_r_page.html#footnotes",
    "title": "Introduction to R",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nhttps://aws.amazon.com/what-is/object-storage/↩︎"
  },
  {
    "objectID": "CausalPitchfork.html",
    "href": "CausalPitchfork.html",
    "title": "Causal Pitchfork - The Data",
    "section": "",
    "text": "This document deals with a fundamental question of causal inference: Which variables should be included in a causal model? (see Cinelli, Forney, and Pearl 2020) To answer this question two points need to be clear:\n\nIn general each causal model only investigates the causal effect of a single independent variable, \\(x_k\\), on the dependent variable \\(y\\). The coefficients associated with all other variables, \\(x_{j\\neq k}\\), cannot (automatically) be interpreted as causal relationships. As regression coefficients are commonly presented in a single table, it is often unclear to the reader which coefficients can be interpreted as causal (see Westreich and Greenland 2013).\nStatistical significance (or any other statistical test) does not give us any idea about the causal model. To illustrate this, the following figure shows three statistically significant relationships between the variables \\(x\\) and \\(y\\) (all t-stats \\(&gt; 9\\)). However, by construction there is no causal relationship between them in two of these examples. Even more concerning: In one case the exclusion of a control variable leads to spurious correlation (leftmost plot) while in the other the inclusion of the control variable does the same (rightmost plot).\n\n\nlibrary(tidyverse)\nlibrary(patchwork)\nset.seed(11)\n## Fork\n# n ... number of observations\nn &lt;- 500\n# d ... binary confounder\nd &lt;- rbinom(n, 1, 0.5)\nx &lt;- 1.5 * d + rnorm(n)\ny &lt;- 0.4 + 2 * d + rnorm(n)\ndata_fork &lt;- data.frame(x, y, d = factor(d, levels = c(0, 1), labels = c(\"Yes\", \"No\")))\nplt_fork &lt;- ggplot(data_fork, aes(x, y)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme_minimal() +\n  ggtitle(\"Relation due to omitted confounder\")\n## Pipe\nset.seed(11)\nx &lt;- 1 * rnorm(n)\nz &lt;- rbinom(n, 1, boot::inv.logit(2 * x + rnorm(n)))\ny &lt;- 2 * z + rnorm(n)\ndata_pipe &lt;- data.frame(x, z = factor(z, levels = c(0, 1), labels = c(\"Yes\", \"No\")), y)\nplt_pipe &lt;- ggplot(data_pipe, aes(x, y)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme_minimal() +\n  ggtitle(\"Relation through mediator\")\n## Collider\nset.seed(11)\nx &lt;- rnorm(n)\ny &lt;- rnorm(n)\na &lt;- rbinom(n, 1, boot::inv.logit(9 * x - 9 * y + rnorm(n)))\ndata_collider &lt;- data.frame(x, y, a = factor(a, levels = c(0, 1), labels = c(\"No\", \"Yes\")))\ndata_collider$x_a &lt;- resid(lm(x ~ 0 + a))\ndata_collider$y_a &lt;- resid(lm(y ~ 0 + a))\nplt_collider &lt;- ggplot(data_collider, aes(x_a, y_a)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme_minimal() +\n  labs(x = \"x\", y = \"y\") +\n  theme(legend.position = \"top\") +\n  ggtitle(\"Relation due to included collider\")\nplt_fork + plt_pipe + plt_collider"
  },
  {
    "objectID": "CausalPitchfork.html#omitted-variable-bias-ovb",
    "href": "CausalPitchfork.html#omitted-variable-bias-ovb",
    "title": "Causal Pitchfork - The Data",
    "section": "Omitted Variable Bias (OVB)",
    "text": "Omitted Variable Bias (OVB)\nRecall that variables that influence both the outcome and other independent variables will bias the coefficients of those other independent variables if left out of a model. This bias is referred to as “Omitted Variable Bias” (short OVB) since it occurs due to the omission of a crucial variable. OVB occurs whenever a confounder (see The Fork) is left out of the model. The magnitude of the bias depends on how strongly correlated the confounder is with the included variable \\(x\\). To illustrate this take a look at the equations representing the situation in The Fork:\n\\[\n\\begin{aligned}\nx &= \\alpha_0 + \\alpha_1 d + \\varepsilon_x \\\\\ny &= \\beta_0 + \\beta_1 d + \\varepsilon_y\n\\end{aligned}\n\\]\nHowever, we might be unaware of the confounder \\(d\\) but still be interested in the causal effect of \\(x\\) on \\(y\\). Therefore, we might be inclined to estimate the following (misspecified) model\n\\[\ny = \\gamma_0 + \\gamma_1 x + \\epsilon_y\n\\] We know (based on the equations above) that the true effect of \\(x\\) on \\(y\\) is \\(0\\) as it is entirely caused by \\(d\\). In order to investigate the magnitude of the OVB we mistakenly view \\(d\\) as a function of \\(x\\) (see Mediation analysis):\n\\[\nd = \\theta_0 + \\theta_1 x + \\varepsilon_d,\n\\]\nplug the incorrectly specified model for \\(d\\) into the correctly specified model for \\(y\\), and take the derivative with respect to \\(x\\):\n\\[\n\\begin{aligned}\ny &= \\tilde \\beta_0 + \\beta_1 (\\theta_0 + \\theta_1 x + \\varepsilon_d) + \\epsilon_y \\\\\n  &= \\tilde \\beta_0 + \\beta_1 \\theta_0 + \\beta_1 \\theta_1 x + \\beta_1 \\varepsilon_d + \\epsilon_y \\\\\n{\\delta \\over \\delta x}  &= \\beta_1 \\theta_1\n\\end{aligned}\n\\]\nNote that \\(\\gamma_1 = \\beta_1 \\theta_1\\).\n\nlibrary(stargazer)\nset.seed(11)\nd &lt;- 100 * rnorm(n)\nx &lt;- -4 + 0.5 * d + 10 * rnorm(n)\ny &lt;- 25 + 10 * d + 10 * rnorm(n)\nstargazer(\n  lm(y ~ d + x),\n  lm(y ~ x), ## gamma\n  lm(y ~ d), ## beta\n  lm(d ~ x), ## theta\n  type = 'html')\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\ny\n\n\nd\n\n\n\n\n\n\n(1)\n\n\n(2)\n\n\n(3)\n\n\n(4)\n\n\n\n\n\n\n\n\nd\n\n\n9.996***\n\n\n\n\n9.997***\n\n\n\n\n\n\n\n\n(0.023)\n\n\n\n\n(0.005)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nx\n\n\n0.003\n\n\n19.096***\n\n\n\n\n1.910***\n\n\n\n\n\n\n(0.046)\n\n\n(0.173)\n\n\n\n\n(0.017)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n24.889***\n\n\n97.282***\n\n\n24.878***\n\n\n7.242***\n\n\n\n\n\n\n(0.488)\n\n\n(8.789)\n\n\n(0.456)\n\n\n(0.878)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n500\n\n\n500\n\n\n500\n\n\n500\n\n\n\n\nR2\n\n\n1.000\n\n\n0.961\n\n\n1.000\n\n\n0.961\n\n\n\n\nAdjusted R2\n\n\n1.000\n\n\n0.961\n\n\n1.000\n\n\n0.961\n\n\n\n\nResidual Std. Error\n\n\n10.204 (df = 497)\n\n\n195.949 (df = 498)\n\n\n10.193 (df = 498)\n\n\n19.576 (df = 498)\n\n\n\n\nF Statistic\n\n\n2,343,560.000*** (df = 2; 497)\n\n\n12,212.740*** (df = 1; 498)\n\n\n4,696,511.000*** (df = 1; 498)\n\n\n12,242.150*** (df = 1; 498)\n\n\n\n\n\n\n\n\nNote:\n\n\np&lt;0.1; p&lt;0.05; p&lt;0.01\n\n\n\n## See coef of regression y ~ x\nbeta1 &lt;- coef(lm(y~d))['d']\ntheta1 &lt;- coef(lm(d~x))['x']\nbeta1 * theta1\n   d \n19.09598\n\nNotice that without theoretical knowledge about the data it is not clear which variable should be the “outcome” and which the “independent” variable since we could estimate either direction using OLS. In the example above we know (“from theory”) that \\(d\\) causes \\(x\\) and \\(y\\) but we estimate models where \\(x\\) is the explanatory variable. As one might guess there is a clear relationship between coefficients estimated with one or the other variable on the left hand side.\n\ntheta_1 &lt;- coef(lm(d~x))['x']\nalpha_1 &lt;- coef(lm(x~d))['d']\n\nTo be exact we have to adjust for the respective variances of the variables:\n\nalpha_1 * var(d)/var(x)\n\n       d \n1.910091 \n\ntheta_1\n\n       x \n1.910091"
  },
  {
    "objectID": "CausalPitchfork.html#mediation-analysis",
    "href": "CausalPitchfork.html#mediation-analysis",
    "title": "Causal Pitchfork - The Data",
    "section": "Mediation analysis",
    "text": "Mediation analysis\nAs the total causal effect a variable \\(x\\) has on the outcome \\(y\\) can be (partly) mediated through another variable \\(m\\), we cannot just include \\(m\\) in the model. However, we can decompose the effect into a direct and mediated part. Either of part can be \\(0\\) but we can easily test whether that is the case. The decomposition has two parts: First, calculate the effect the variable of interest (\\(x\\)) has on the mediator (\\(m\\)):\n\\[\nm = \\alpha_0 + \\alpha_1 x + \\varepsilon_m\n\\]\nNote that we use “alpha” (\\(\\alpha\\)) for the regression coefficients to distinguish them from the parameters below. They can nonetheless be estimated using OLS.\nSecond, calculate the full model for the outcome (\\(y\\)) including both \\(x\\) and \\(m\\):\n\\[\ny = \\beta_0 + \\beta_1 x + \\beta_2 m + \\varepsilon_y\n\\]\nNow \\(\\beta_1\\) is the average direct effect (ADE) of \\(x\\) on \\(y\\). That is the part that is not mediated through \\(m\\). In The Pipe, \\(\\beta_1=0\\) since there is no direct connection from \\(x\\) to \\(y\\). The average causal mediation effect (ACME) can be calculated as \\(\\alpha_1 * \\beta_2\\). Intuitively, “how much would a unit increase in \\(x\\) change \\(m\\)” times “how much would an increase in \\(m\\) change \\(y\\)”. The total effect of \\(x\\) on \\(y\\) can be seen more clearly by plugging in the model for \\(m\\) in the second equation and taking the derivative with respect to \\(x\\):\n\\[\n\\begin{aligned}\ny &= \\beta_0 + \\beta_1 x + \\beta_2 m + \\varepsilon_y \\\\\n  &= \\beta_0 + \\beta_1 x + \\beta_2 (\\alpha_0 + \\alpha_1 x + \\varepsilon_m) + \\varepsilon_y \\\\\n  &= \\beta_0 + \\beta_1 x + \\beta_2 \\alpha_0 + \\beta_2 \\alpha_1 x + \\beta_2 \\varepsilon_m + \\varepsilon_y \\\\\n\\text{total effect} := \\frac{\\delta y}{\\delta x} &= \\underbrace{\\beta_1}_{\\text{ADE}} + \\underbrace{\\beta_2 \\alpha_1}_{\\text{ACME}}\n\\end{aligned}\n\\]\nNote that if we are only interested in the total effect we can omit the mediator \\(m\\) from the model and estimate:\n\\[\ny = \\gamma_0 + \\gamma_1 x + \\epsilon_y\n\\] where \\(\\gamma_1 = \\beta_1 + \\beta_2 \\alpha_1\\) (again: all these equations can be estimated using OLS). In that case we are using OVB in our favor: By omitting \\(m\\) its effect on \\(y\\) is picked up by \\(x\\) to exactly the degree that \\(x\\) and \\(m\\) are correlated. However, in contrast to the previous example that is exactly what we want since \\(m\\) is caused by \\(x\\) as well!\nNotable changes to The Pipe:\n\nWe have both direct and indirect effects of \\(x\\) on \\(y\\)\nThe mediator \\(m\\) is continuous instead of binary\n\n\nmed2 &lt;- dagify(m ~ x, y ~ m + x,\n  coords = list(x = c(x = 1, m = 1.5, y = 2), y = c(x = 1, y = 1, m = 1.5))\n) |&gt;\n  tidy_dagitty() |&gt;\n  mutate(fill = ifelse(name == \"m\", \"Mediator\", \"variables of interest\")) |&gt;\n  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +\n  geom_dag_point(size = 7, aes(color = fill)) +\n  geom_dag_edges(show.legend = FALSE) +\n  geom_dag_text() +\n  theme_dag() +\n  theme(\n    legend.title = element_blank(),\n    legend.position = \"top\"\n  )\nmed2\n\n\n\n\n\n\n\n\n\nset.seed(11)\nX &lt;- 100 * rnorm(n)\nM &lt;- 10 + 0.5 * X + 5 * rnorm(n)\nY &lt;- -25 + 4 * X + 3 * M + 10 * rnorm(n)\nX_on_M &lt;- lm(M ~ X)\navg_direct_effect &lt;- lm(Y ~ X + M)\ntotal_effect &lt;- lm(Y ~ X)\nstargazer(\n  X_on_M, \n  avg_direct_effect, \n  total_effect, \n  type = 'html')\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nM\n\n\nY\n\n\n\n\n\n\n(1)\n\n\n(2)\n\n\n(3)\n\n\n\n\n\n\n\n\nX\n\n\n0.502***\n\n\n3.995***\n\n\n5.502***\n\n\n\n\n\n\n(0.002)\n\n\n(0.046)\n\n\n(0.008)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nM\n\n\n\n\n3.006***\n\n\n\n\n\n\n\n\n\n\n(0.091)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n10.102***\n\n\n-25.181***\n\n\n5.182***\n\n\n\n\n\n\n(0.225)\n\n\n(1.026)\n\n\n(0.815)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n500\n\n\n500\n\n\n500\n\n\n\n\nR2\n\n\n0.990\n\n\n1.000\n\n\n0.999\n\n\n\n\nAdjusted R2\n\n\n0.990\n\n\n1.000\n\n\n0.999\n\n\n\n\nResidual Std. Error\n\n\n5.023 (df = 498)\n\n\n10.204 (df = 497)\n\n\n18.218 (df = 498)\n\n\n\n\nF Statistic\n\n\n48,670.140*** (df = 1; 498)\n\n\n710,360.500*** (df = 2; 497)\n\n\n445,339.400*** (df = 1; 498)\n\n\n\n\n\n\n\n\nNote:\n\n\np&lt;0.1; p&lt;0.05; p&lt;0.01\n\n\n\n\n\navg_causal_mediation_effect &lt;- coef(X_on_M)['X'] * coef(avg_direct_effect)['M']\ntotal_effect_alternative &lt;- coef(avg_direct_effect)['X'] + avg_causal_mediation_effect\nproportion_mediated &lt;- avg_causal_mediation_effect / total_effect_alternative\n\n\nmediation_effects &lt;- tribble(\n        ~effect,                                  ~value,\n        \"Average Causal Mediation Effect (ACME):\", avg_causal_mediation_effect,\n        \"Average Direct Effect (ADE):\",            coef(avg_direct_effect)['X'],\n        \"Total Effect:\",                           coef(total_effect)['X'],\n        \"Total Effect (alternative):\",             total_effect_alternative,\n        \"Proportion Mediated:\",                    proportion_mediated)\n\ngt(mediation_effects, rowname_col = 'effect')  |&gt;\n  tab_options(column_labels.hidden = TRUE) |&gt;\n  fmt_number(columns = value, decimals = 3) |&gt;\n  tab_header(title = \"Causal Mediation Analysis\")\n\n\n\n\n\n\n\nCausal Mediation Analysis\n\n\n\n\nAverage Causal Mediation Effect (ACME):\n1.508\n\n\nAverage Direct Effect (ADE):\n3.995\n\n\nTotal Effect:\n5.502\n\n\nTotal Effect (alternative):\n5.502\n\n\nProportion Mediated:\n0.274\n\n\n\n\n\n\n\nAlternatively, the mediation analysis can be performed using the mediation package:\n\nlibrary(mediation)\nmediation_result &lt;- mediate(X_on_M, avg_direct_effect, \n                            treat = 'X', mediator = 'M',\n                            boot = TRUE, sims = 1000)\nsummary(mediation_result)\n\n\nCausal Mediation Analysis \n\nNonparametric Bootstrap Confidence Intervals with the Percentile Method\n\n               Estimate 95% CI Lower 95% CI Upper p-value    \nACME              1.508        1.421         1.60  &lt;2e-16 ***\nADE               3.995        3.901         4.08  &lt;2e-16 ***\nTotal Effect      5.502        5.486         5.52  &lt;2e-16 ***\nProp. Mediated    0.274        0.258         0.29  &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSample Size Used: 500 \n\n\nSimulations: 1000 \n\n\n\nEstimation using Process\nIn research settings the PROCESS macro by Andrew Hayes is very popular. The following code should download and source the macro for you but will definitely break in the future (try changing the v42 part of the link to v43 or v44 etc. or obtain a new link from the website if it does):\n\ntemp &lt;- tempfile()\ndownload.file(\"https://www.afhayes.com/public/processv42.zip\",temp)\nfiles &lt;- unzip(temp, list = TRUE)\nfname &lt;- files$Name[endsWith(files$Name, \"process.R\")]\nsource(unz(temp, fname))\nunlink(temp)\n\nAlternatively download the program from here and source the process.R file manually.\nPROCESS model 4 (not run):\n\nprocess(data.frame(Y, X, M), y = 'Y', x = 'X', m = 'M', model = 4)"
  },
  {
    "objectID": "CausalPitchfork.html#the-fork",
    "href": "CausalPitchfork.html#the-fork",
    "title": "Causal Pitchfork - The Data",
    "section": "The Fork",
    "text": "The Fork\n\n## Make code reproducible\nset.seed(11)\n## Number of observations\nn &lt;- 1500\n## Random draw from Bernoulli with p(1) = 0.5, p(0) = 0.5\nd &lt;- rbinom(n, 1, 0.5)\n## X is caused by d\nx &lt;- 2 * d + rnorm(n)\n## y is caused by d\ny &lt;- 0.4 + 2.5 * d + rnorm(n)\nfork &lt;- data.frame(x, y, d = factor(d,\n  levels = c(0, 1),\n  labels = c(\"No\", \"Yes\")\n))\nggplot(fork, aes(x, y, color = d)) +\n  geom_point() +\n  theme_minimal() +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "CausalPitchfork.html#the-pipe",
    "href": "CausalPitchfork.html#the-pipe",
    "title": "Causal Pitchfork - The Data",
    "section": "The Pipe",
    "text": "The Pipe\n\n## Generate random X\nx &lt;- rnorm(n)\n## inv.logit ensures that values are between 0 and 1\nggplot(data.frame()) +\n  stat_function(fun = boot::inv.logit, xlim = c(-10, 10)) +\n  theme_minimal() +\n  labs(title = \"Inverse Logit function\", x = \"x\", y = \"inv.logit(x)\")\n\n\n\n\n\n\n\n\n\n## z is caused by X\nz &lt;- rbinom(n, 1, boot::inv.logit(2 * x + rnorm(n)))\n## y is caused by z\ny &lt;- 2 * z + rnorm(n)\npipe &lt;- data.frame(x, y, z = factor(z,\n  levels = c(0, 1),\n  labels = c(\"Yes\", \"No\")\n))\nggplot(pipe, aes(x, y, color = z)) +\n  geom_point() +\n  theme_minimal() +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "CausalPitchfork.html#the-collider",
    "href": "CausalPitchfork.html#the-collider",
    "title": "Causal Pitchfork - The Data",
    "section": "The Collider",
    "text": "The Collider\n\n## Generate random x\nx &lt;- rnorm(n)\n## Generate random y\ny &lt;- rnorm(n)\n## a is caused by both X and y\na &lt;- rbinom(n, 1, boot::inv.logit(9 * x - 9 * y + rnorm(n)))\ncollider &lt;- data.frame(x, y, a = factor(a,\n  levels = c(0, 1),\n  labels = c(\"No\", \"Yes\")\n))\nggplot(collider, aes(x, y)) +\n  geom_point() +\n  theme_minimal()\n\n\n\n\n\n\n\n\nIn order to get the partial correlation of \\(X\\) and \\(y\\) after accounting for \\(a\\) we first regress both \\(X\\) and \\(y\\) on \\(a\\) and use the unexplained part (residual) in the plot. This is equivalent to a regression that has both \\(X\\) and \\(a\\) as explanatory variables.\n\ncollider$x_a &lt;- residuals(lm(x ~ 0 + a))\ncollider$y_a &lt;- residuals(lm(y ~ 0 + a))\nggplot(collider, aes(x_a, y_a)) +\n  geom_point() +\n  theme_minimal() +\n  labs(x = \"x after accounting for a\", y = \"y after accounting for a\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome!",
    "section": "",
    "text": "This website covers the R implementation of some of the concepts discussed in class. We automatically generate multiple versions of the content for your convenience. However, only the RevealJS slides are presented in class and are therefore checked for rendering issues."
  },
  {
    "objectID": "index.html#optional",
    "href": "index.html#optional",
    "title": "Welcome!",
    "section": "Optional",
    "text": "Optional\nIf you are already familiar with Jupyter you can install a kernel for R. Open R in a terminal (do not use the R.app in MacOS) and run the following:\n\ninstall.packages(\"IRkernel\")\nIRkernel::installspec()\n\nNow you can open the downloaded .ipynb file and execute it."
  },
  {
    "objectID": "02-modeling.html#moderation",
    "href": "02-modeling.html#moderation",
    "title": "Modeling",
    "section": "Moderation",
    "text": "Moderation\n\nAn effect of variable \\(x\\) on outcome \\(y\\) is moderated if it depends on another variable \\(z\\) in any way (strength, sign, …)\nIn regression analysis we can test for moderation by including interactions (product of two variables) in the model\nE.g., the association of flipper length and body mass is moderated by the species\n\n\nCodelibrary(palmerpenguins)\nlibrary(ggstatsplot)\nlm(body_mass_g ~ species:flipper_length_mm + species + flipper_length_mm, data = penguins) |&gt;\nbroom::tidy() |&gt;\ngt::gt() |&gt;\ngt::tab_options(table.font.size = 35)\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n(Intercept)\n-2535.836802\n879.467667\n-2.8833770\n0.004187922468810483\n\n\nspeciesChinstrap\n-501.358972\n1523.459013\n-0.3290925\n0.742290787208460534\n\n\nspeciesGentoo\n-4251.443811\n1427.332228\n-2.9785944\n0.003106357935232562\n\n\nflipper_length_mm\n32.831690\n4.627184\n7.0953936\n0.000000000007691129\n\n\nspeciesChinstrap:flipper_length_mm\n1.741704\n7.855734\n0.2217112\n0.824673398945700575\n\n\nspeciesGentoo:flipper_length_mm\n21.790812\n6.941167\n3.1393586\n0.001843295165362903"
  }
]